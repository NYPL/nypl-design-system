{"version":3,"file":"ComponentWrapper-aa2910be.js","sources":["../../../src/components/ComponentWrapper/ComponentWrapper.tsx"],"sourcesContent":["import { Box, chakra, useMultiStyleConfig } from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\nimport useDSHeading from \"../../hooks/useDSHeading\";\n\nimport HelperErrorText, {\n  HelperErrorTextType,\n} from \"../HelperErrorText/HelperErrorText\";\nimport Text from \"../Text/Text\";\nexport interface ComponentWrapperProps {\n  /** The UI elements that will be wrapped by this component */\n  children: React.ReactNode;\n  /** A class name for the `div` parent element. */\n  className?: string;\n  /** Optional string to set the text for the component's description */\n  descriptionText?: string | JSX.Element;\n  /** Optional string value used to set the text for a `Heading` component, or\n   * a DS Heading component that can be passed in.\n   */\n  headingText?: string | JSX.Element;\n  /** Optional string to set the text for a `HelperErrorText` component */\n  helperText?: HelperErrorTextType;\n  /** Styles that target the helper text. */\n  helperTextStyles?: { [key: string]: any };\n  /** ID that other components can cross reference for accessibility purposes */\n  id?: string;\n  /** Optional string to populate the `HelperErrorText` for the error state\n   * when `isInvalid` is true. */\n  invalidText?: HelperErrorTextType;\n  /** Sets invalid text in the error state. */\n  isInvalid?: boolean;\n  /** Offers the ability to hide the helper/invalid text. */\n  showHelperInvalidText?: boolean;\n}\n\nexport const ComponentWrapper = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<ComponentWrapperProps>>(\n    (props, ref?) => {\n      const {\n        children,\n        className,\n        descriptionText,\n        headingText,\n        helperText,\n        helperTextStyles = {},\n        id,\n        invalidText,\n        isInvalid = false,\n        showHelperInvalidText = true,\n        ...rest\n      } = props;\n      const hasChildren = !!children;\n      const styles = useMultiStyleConfig(\"ComponentWrapper\", { hasChildren });\n      const footnote = isInvalid ? invalidText : helperText;\n      const finalHeadingText = useDSHeading({ id, title: headingText });\n\n      // Note: Typescript warns when there are no children passed and\n      // doesn't compile. This is meant to log in non-Typescript apps.\n      if (!hasChildren) {\n        console.warn(\n          \"NYPL Reservoir ComponentWrapper: No children were passed.\"\n        );\n      }\n\n      return (\n        <Box\n          className={className}\n          id={`${id}-wrapper`}\n          ref={ref}\n          __css={styles}\n          {...rest}\n        >\n          {finalHeadingText}\n          {descriptionText && <Text>{descriptionText}</Text>}\n          {children}\n          {footnote && (\n            <HelperErrorText\n              id={`${id}-helperText`}\n              isInvalid={isInvalid}\n              isRenderedText={showHelperInvalidText}\n              text={footnote}\n              __css={{ ...styles.helperErrorText, ...helperTextStyles }}\n            />\n          )}\n        </Box>\n      );\n    }\n  )\n);\n\nexport default ComponentWrapper;\n"],"names":["ComponentWrapper","chakra","forwardRef","props","ref","children","className","descriptionText","headingText","helperText","helperTextStyles","id","invalidText","isInvalid","showHelperInvalidText","rest","hasChildren","styles","useMultiStyleConfig","footnote","finalHeadingText","useDSHeading","jsxs","Box","jsx","Text","HelperErrorText"],"mappings":"oUAkCO,MAAAA,EAAAC,EAAyBC,EAAA,WAC9B,CAAAC,EAAAC,IAAA,CAEI,KAAA,CAAM,SAAAC,EACJ,UAAAC,EACA,gBAAAC,EACA,YAAAC,EACA,WAAAC,EACA,iBAAAC,EAAA,CAAA,EACoB,GAAAC,EACpB,YAAAC,EACA,UAAAC,EAAA,GACY,sBAAAC,EAAA,GACY,GAAAC,CACrB,EAAAZ,EAELa,EAAA,CAAA,CAAAX,EACAY,EAAAC,EAAA,mBAAA,CAAA,YAAAF,CAAA,CAAA,EACAG,EAAAN,EAAAD,EAAAH,EACAW,EAAAC,EAAA,CAAA,GAAAV,EAAA,MAAAH,CAAA,CAAA,EAIA,OAAAQ,GACE,QAAA,KAAQ,2DACN,EAIJM,EACEC,EAAC,CAAA,UAAAjB,EACC,GAAA,GAAAK,CAAA,WACS,IAAAP,EACT,MAAAa,EACO,GAAAF,EACH,SAAA,CAEHK,EAAAb,GAAAiB,EAAAC,EAAA,CAAA,SAAAlB,CAAA,CAAA,EAC0CF,EAC1Cc,GAAAK,EAECE,EAAC,CAAA,GAAA,GAAAf,CAAA,cACU,UAAAE,EACT,eAAAC,EACgB,KAAAK,EACV,MAAA,CAAA,GAAAF,EAAA,gBAAA,GAAAP,CAAA,CACkD,CAAA,CAC1D,CAAA,CAAA,CAEJ,CAEJ,CAEJ"}