import{j as n,a as b}from"./emotion-react-jsx-runtime.browser.esm-49aea89b.js";import{r as L}from"./index-0cbcd92a.js";import{B as O}from"./Button-948e9be8.js";import{C as A}from"./ComponentWrapper-aa2910be.js";import{I as j}from"./Icon-4eeffe51.js";import{S as M}from"./Select-2c2d1d20.js";import{T as z}from"./TextInput-70995d87.js";import{a as F,u as K,B as W}from"./chakra-ui-layout.esm-e0dbb94e.js";const y=F(L.forwardRef((i,T)=>{const{action:g,buttonOnClick:v,className:x,descriptionText:q,headingText:B,helperText:o,id:t,invalidText:s,isDisabled:d=!1,isInvalid:r=!1,isRequired:m=!1,labelText:u,method:S,noBrandButtonType:E=!1,onSubmit:V,selectProps:a,textInputElement:C,textInputProps:e,...w}=i,c=K("SearchBar",{}),p={helperText:"",isDisabled:d,isInvalid:r,isRequired:m,showHelperInvalidText:!1,showLabel:!1},h=r?s:o,R=h?`${u} - ${h}`:u,_=`${(e==null?void 0:e.placeholder)||"Search terms"} ${m?"(Required)":""}`,k=E?"noBrand":"primary",H={borderLeftRadius:"none",borderRightRadius:{base:"none",md:"sm"},lineHeight:"1.70",marginBottom:"auto"};t||console.warn("NYPL Reservoir SearchBar: This component's required `id` prop was not passed.");const f=a&&n(M,{id:(a==null?void 0:a.id)||`searchbar-select-${t}`,labelText:a==null?void 0:a.labelText,name:a==null?void 0:a.name,onChange:a==null?void 0:a.onChange,selectType:"searchbar",value:a==null?void 0:a.value,__css:c.select,...p,children:a==null?void 0:a.optionsData.map(l=>n("option",{value:l.value,children:l.text},l.value))}),$=e&&n(z,{defaultValue:e==null?void 0:e.defaultValue,id:(e==null?void 0:e.id)||`searchbar-textinput-${t}`,isClearable:e==null?void 0:e.isClearable,isClearableCallback:e==null?void 0:e.isClearableCallback,labelText:e==null?void 0:e.labelText,name:e==null?void 0:e.name,max:e==null?void 0:e.max,maxLength:e==null?void 0:e.maxLength,min:e==null?void 0:e.min,onChange:e==null?void 0:e.onChange,pattern:e==null?void 0:e.pattern,placeholder:_,textInputType:f?"searchBarSelect":"searchBar",type:"text",value:e==null?void 0:e.value,...p}),N=b(O,{buttonType:k,id:`searchbar-button-${t}`,isDisabled:d,onClick:v,type:"submit",sx:H,children:[n(j,{align:"left",id:`searchbar-icon-${t}`,name:"search",size:"small"}),"Search"]}),D=C||$;return n(A,{descriptionText:q,headingText:B,helperText:o,id:t,invalidText:s,isInvalid:r,ref:T,...w,children:b(W,{as:"form",id:`searchbar-form-${t}`,className:x,role:"search","aria-label":R,onSubmit:V,method:S,action:g,__css:c,children:[f,D,N]})})}));try{y.displayName="SearchBar",y.__docgenInfo={description:"Renders a wrapper `form` element to be used with `Select` (optional),\n`Input`, and `Button` components together.",displayName:"SearchBar",props:{className:{defaultValue:null,description:"A class name for the `form` element.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!0,type:{name:"string"}},action:{defaultValue:null,description:"Adds 'action' property to the `form` element.",name:"action",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Sets children form components in the disabled state.",name:"isDisabled",required:!1,type:{name:"boolean"}},onSubmit:{defaultValue:null,description:"Handler function when the form is submitted.",name:"onSubmit",required:!0,type:{name:"(event: FormEvent<Element>) => void"}},buttonOnClick:{defaultValue:null,description:"The onClick callback function for the `Button` component.",name:"buttonOnClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},descriptionText:{defaultValue:null,description:"Optional string for the SearchBar's description above the component.",name:"descriptionText",required:!1,type:{name:"string"}},headingText:{defaultValue:null,description:"Optional string value used to set the text for a `Heading` component, or\na DS Heading component that can be passed in.",name:"headingText",required:!1,type:{name:"string | Element"}},helperText:{defaultValue:null,description:"The text to display below the form in a `HelperErrorText` component.",name:"helperText",required:!1,type:{name:"HelperErrorTextType"}},invalidText:{defaultValue:null,description:"Optional string to populate the `HelperErrorText` for the error state\nwhen `isInvalid` is true.",name:"invalidText",required:!1,type:{name:"HelperErrorTextType"}},isInvalid:{defaultValue:null,description:"Sets children form components in the error state.",name:"isInvalid",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Sets children form components in the required state.",name:"isRequired",required:!1,type:{name:"boolean"}},labelText:{defaultValue:null,description:"Populates the `aria-label` attribute on the form element.",name:"labelText",required:!0,type:{name:"string"}},method:{defaultValue:null,description:"Adds 'method' property to the `form` element.",name:"method",required:!1,type:{name:"string"}},noBrandButtonType:{defaultValue:null,description:"Sets the `Button` variant type to `noBrand` when true;\nfalse by default which sets the type to `primary`.",name:"noBrandButtonType",required:!1,type:{name:"boolean"}},selectProps:{defaultValue:null,description:"Required props to render a `Select` element.",name:"selectProps",required:!1,type:{name:"SelectProps"}},textInputElement:{defaultValue:null,description:"Custom input element to render instead of a `TextInput` element.",name:"textInputElement",required:!1,type:{name:"Element"}},textInputProps:{defaultValue:null,description:"Required props to render a `TextInput` element.",name:"textInputProps",required:!1,type:{name:"TextInputProps"}}}}}catch{}export{y as S};
//# sourceMappingURL=SearchBar-83234cf6.js.map
