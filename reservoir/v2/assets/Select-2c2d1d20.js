import{j as p,a as z}from"./emotion-react-jsx-runtime.browser.esm-49aea89b.js";import{r as n}from"./index-0cbcd92a.js";import{C as D}from"./ComponentWrapper-aa2910be.js";import{I as F}from"./Icon-4eeffe51.js";import{L as $}from"./Label-d380cca8.js";import{g as B}from"./Link-24c1437a.js";import{b as M}from"./chakra-ui-form-control.esm-5c4917b4.js";import{j as H,a as x,u as N,o as Y,_ as G,v as K,q as U,l as J,$ as Q,b as X,B as V}from"./chakra-ui-layout.esm-e0dbb94e.js";function i(){return i=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var a=arguments[r];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},i.apply(this,arguments)}function I(t,r){if(t==null)return{};var a={},e=Object.keys(t),o,l;for(l=0;l<e.length;l++)o=e[l],!(r.indexOf(o)>=0)&&(a[o]=t[o]);return a}var Z=["children","placeholder","className"],ee=["rootProps","placeholder","icon","color","height","h","minH","minHeight","iconColor","iconSize","isFullWidth"],te=["children"],le=H(function(t,r){var a=t.children,e=t.placeholder,o=t.className,l=I(t,Z);return n.createElement(x.select,i({},l,{ref:r,className:J("chakra-select",o)}),e&&n.createElement("option",{value:""},e),a)}),re=H(function(t,r){var a=N("Select",t),e=Y(t),o=e.rootProps,l=e.placeholder,m=e.icon,c=e.color,s=e.height,u=e.h,d=e.minH,f=e.minHeight,b=e.iconColor,h=e.iconSize;e.isFullWidth;var _=I(e,ee),v=G(_,Q),T=v[0],y=v[1],g=M(y),w={width:"100%",height:"fit-content",position:"relative",color:c},q=K({paddingEnd:"2rem"},a.field,{_focus:{zIndex:"unset"}});return n.createElement(x.div,i({className:"chakra-select__wrapper",__css:w},T,o),n.createElement(le,i({ref:r,height:u??s,minH:d??f,placeholder:l},g,{__css:q}),t.children),n.createElement(oe,i({"data-disabled":U(g.disabled)},(b||c)&&{color:b||c},{__css:a.icon},h&&{fontSize:h}),m))}),ae=function(r){return n.createElement("svg",i({viewBox:"0 0 24 24"},r),n.createElement("path",{fill:"currentColor",d:"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"}))},ne=x("div",{baseStyle:{position:"absolute",display:"inline-flex",alignItems:"center",justifyContent:"center",pointerEvents:"none",top:"50%",transform:"translateY(-50%)"}}),oe=function(r){var a=r.children,e=a===void 0?n.createElement(ae,null):a,o=I(r,te),l=n.cloneElement(e,{role:"presentation",className:"chakra-select__icon",focusable:!1,"aria-hidden":!0,style:{width:"1em",height:"1em",color:"currentColor"}});return n.createElement(ne,i({},o,{className:"chakra-select__icon-wrapper"}),n.isValidElement(e)?l:null)};const be=["default","inline"],L=x(n.forwardRef((t,r)=>{const{children:a,className:e,helperText:o,id:l,invalidText:m,isDisabled:c=!1,isInvalid:s=!1,isRequired:u=!1,labelPosition:d="default",labelText:f,name:b,onChange:h,placeholder:_,selectType:v="default",showHelperInvalidText:T=!0,showLabel:y=!0,showRequiredLabel:g=!0,value:w="",...q}=t,[R,P]=n.useState(0),S=n.useRef(null),E=N("CustomSelect",{variant:v,labelPosition:d}),C=m||"There is an error related to this field.",k=B({footnote:s?C:o,id:l,labelText:f,name:"Select",showLabel:y}),O=h?{onChange:h,value:w}:{},W=8,j=X(s?"ui.error.primary":"ui.black",s?"dark.ui.error.primary":"dark.ui.typography.body");return l||console.warn("NYPL Reservoir Select: This component's required `id` prop was not passed."),n.useEffect(()=>{if(d==="inline"){if(S.current){const A=S.current.clientWidth+W;P(A)}}else P(0)},[d]),p(D,{className:e,helperText:o,helperTextStyles:{marginStart:{sm:"auto",md:`${R}px`}},id:l,invalidText:C,isInvalid:s,showHelperInvalidText:T,__css:E,...q,children:z(V,{__css:d==="inline"&&E.inline,children:[y&&p(V,{ref:S,children:p($,{htmlFor:l,id:`${l}-label`,isInlined:!0,isRequired:g&&u,children:f})}),p(re,{id:l,variant:"outline",isRequired:u,isDisabled:c,isInvalid:s,name:b,placeholder:_,ref:r,...O,...k,icon:p(F,{color:j,id:`${l}-icon`,name:"arrow",size:"medium"}),__css:E.select,children:a})]})})}));try{L.displayName="Select",L.__docgenInfo={description:"Component that renders Chakra's `Select` component along with an accessible\n`Label` and optional `HelperErrorText` component.",displayName:"Select",props:{className:{defaultValue:null,description:"A class name for the `div` parent element.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!0,type:{name:"string"}},name:{defaultValue:null,description:"Used to reference the select element in forms.",name:"name",required:!0,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Adds the `disabled` and `aria-disabled` attributes to the select when true",name:"isDisabled",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"Placeholder text in the select element.",name:"placeholder",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"The callback function to get the selected value.\nShould be passed along with `value` for controlled components.",name:"onChange",required:!1,type:{name:"(event: FormEvent<Element>) => void"}},helperText:{defaultValue:null,description:"Optional string to populate the `HelperErrorText` for the standard state.",name:"helperText",required:!1,type:{name:"HelperErrorTextType"}},invalidText:{defaultValue:null,description:"Optional string to populate the `HelperErrorText` for the error state\nwhen `isInvalid` is true.",name:"invalidText",required:!1,type:{name:"HelperErrorTextType"}},isInvalid:{defaultValue:null,description:'Adds the `aria-invalid` attribute to the select when true. This also makes\nthe color theme "NYPL error" red for the select and text.',name:"isInvalid",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Adds the `required` and `aria-required` attributes to the input when true.",name:"isRequired",required:!1,type:{name:"boolean"}},labelText:{defaultValue:null,description:"Provides text for a `Label` component if `showLabel` is set to `true`;\npopulates an `aria-label` attribute on the select input if `showLabel` is\nset to `false`.",name:"labelText",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"The value of the selected option.\nShould be passed along with `onChange` for controlled components.",name:"value",required:!1,type:{name:"string"}},showHelperInvalidText:{defaultValue:null,description:"Offers the ability to hide the helper/invalid text.",name:"showHelperInvalidText",required:!1,type:{name:"boolean"}},showLabel:{defaultValue:null,description:"Offers the ability to show the select's label onscreen or hide it. Refer\nto the `labelText` property for more information.",name:"showLabel",required:!1,type:{name:"boolean"}},showRequiredLabel:{defaultValue:null,description:`Whether or not to display the "(Required)" text in the label text.
True by default.`,name:"showRequiredLabel",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:null,description:`Optional value to render the label inline, rather than the default (on top)
of the select element.`,name:"labelPosition",required:!1,type:{name:"string"}},selectType:{defaultValue:null,description:"The variant to display.",name:"selectType",required:!1,type:{name:"string"}}}}}catch{}export{L as S,be as l};
//# sourceMappingURL=Select-2c2d1d20.js.map
