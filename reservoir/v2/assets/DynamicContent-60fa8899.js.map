{"version":3,"file":"DynamicContent-60fa8899.js","sources":["../../../src/components/AccessibilityGuide/DynamicContent.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\nimport Link from \"../Link/Link\";\n\n<Meta title=\"Accessibility Guide/Dynamic Content\" />\n\n# Dynamic Content\n\n## Table of Contents\n\n- {<Link href=\"#general-information\" target=\"_self\">General Information</Link>}\n- {<Link href=\"#aria-live-regions\" target=\"_self\">ARIA Live Regions</Link>}\n- {<Link href=\"#managing-focus\" target=\"_self\">Managing Focus</Link>}\n- {<Link href=\"#anti-patterns\" target=\"_self\">Anti-Patterns</Link>}\n- {<Link href=\"#nypl-patterns\" target=\"_self\">NYPL Patterns</Link>}\n- {<Link href=\"#resources\" target=\"_self\">Resources</Link>}\n\n## General Information\n\nMost websites have elements that are updated dynamically. Typically, these\nupdates are indicated with a visual loading animation before the new content is\ndisplayed. This visual cue, however, is not helpful for visually impaired users\nor users who use assistive technology. We need to ensure that the changes are\nunderstood and announced by the assistive technology.\n\nThe quick takeaway for implementing this necessary functionality is to _always_\nrender an empty container for the dynamic content in the DOM on the server-side.\nThe container element should have an `aria-live=\"polite\"` attribute applied. The\nfollowing example shows one possible DOM structure that allows newly generated\ncontent to be recognized and announced by assistive technology.\n\n<Source\n  code={`\n<div class=\"dynamic-content-container\" aria-live=\"polite\">\n  <!-- Any dynamic content should be inserted, removed, or updated here. -->\n</div>\n`} language=\"html\" />\n\n## ARIA Live Regions\n\nThe `aria-live` attribute is used to indicate that an element's content will be\nupdated dynamically and that it should be announced to assistive technology. The\n`aria-live` attribute can be set to \"off\", \"polite\", or \"assertive\". _When_ the\ncontent should be read by the assistive technology depends on which of the three\nvalues is used. This attribute does not manage focus on the element.\n\n_For dynamic content, always include the `aria-live` attribute in the initial\nDOM render to allow assistive technology to track the updates for the specified\nelement._\n\n- `aria-live=\"off\"` - the default value which is the same as not having the\n  attribute at all.\n- `aria-live=\"polite\"` - the screen reader will wait until the user is done\n  interacting with the page before announcing the change. This is usually the\n  best option for dynamic content.\n- `aria-live=\"assertive\"` - the screen reader will announce the change\n  immediately, even if the user is in the middle of interacting with the page.\n  This should be used sparingly when the update is time-sensitive or critical\n  because it can be disruptive to the user.\n\n## ARIA Atomic\n\nThe `aria-atomic` attribute is used to indicate whether assistive technology\nshould announce the entire content or only the changes. This is useful when an\nelement's entire content is not replaced on every update but all of the content\nshould still be read.\n\nFor example, if the content of an element is updated to \"Results found: 5\" and\nthen updated again to \"Results found: 10\", the assistive technology will\nannounce \"10\" when `aria-atomic=\"false\"` but will announce \"Results found: 10\"\nwhen `aria-atomic=\"true\"`.\n\n- `aria-atomic=\"true\"` - the entire content of the element will be read by the\n  assistive technology.\n- `aria-atomic=\"false\"` - only the changes to the content will be read by the\n  assistive technology.\n\n<Source\n  code={`\n<div class=\"dynamic-content-container\" aria-live=\"polite\" aria-atomic=\"true\">\n  Results found:\n  <span class=\"dynamic-content\">\n    <!-- Any dynamic content should be inserted, removed, or updated here. -->\n  </span>\n</div>\n`} language=\"html\" />\n\n## Managing Focus\n\nNot all instances of dynamic content updates require a focus change, but some\ndo. When a process completes and an important message is displayed, the focus\nshould be moved to the message. For example, when a user submits a form and the\nform is cleared from the page, and a status message is added in its place, then\nfocus should be placed on the status message. It is generally inappropriate to\nforcefully move focus to the message or search results when it is anticipated\nthat the user might be interacting with multiple facets of filtering in\nsuccession and a focus change would be disruptive to their flow.\n\nAs mentioned above, the `aria-live` attribute does not manage focus on the\nelement. In order to move focus to the element, the `tabindex` (`tabIndex` in\nReact) attribute must be set to `-1` to allow for programmatic focus on the\nelement, and a `focus()` method must be called on the element. When focusing on\nan element, the focus will automatically cause the updated content to be read\nand the `aria-live` attribute should no longer be used.\n\nMore on managing focus can be found [here](./?path=/docs/accessibility-guide-managing-focus--docs).\n\n<Source\n  code={`\n<div class=\"dynamic-content-container\" tabindex=\"-1\">\n  <!-- Any dynamic content should be inserted, removed, or updated here. -->\n</div>\n`}\n  language=\"html\"\n/>\n\n<Source\n  code={`\n// Javascript example\nconst container = document.querySelector(\".dynamic-content-container\");\n// Once the content is updated, move focus to the container.\ncontainer.focus();\n`}\n  language=\"js\"\n/>\n\n<Source\n  code={`\n// React example\nconst [text, setText] = useState(undefined);\nconst containerRef = useRef(null);\n// Once the content is updated, move focus to the container.\n// Pseudocode example - the actual conditional logic will vary.\nuseEffect(() => {\n// When content is updated, move focus to the container.\n  containerRef.current.focus();\n}, [text])\n// ...\nreturn (\n  <div class=\"dynamic-content-container\" ref={containerRef} tabIndex=\"-1\">\n    <!-- Any dynamic content should be inserted, removed, or updated here. -->\n    {text}\n  </div>\n);\n`}\n  language=\"jsx\"\n/>\n\n## Anti-Patterns\n\n**Do not dynamically add or remove the `aria-live` attribute from the element.**\n\nThe `aria-live` attribute must be set on the element when the page is rendered.\nThe following are **incorrect**:\n\n<Source\n  code={`\n<div id=\"dynamic-content-container\">\n  <!-- Any dynamic content should be inserted, removed, or updated here. -->\n</div>\n`}\n  language=\"html\"\n/>\n\n<Source\n  code={`\n// Javascript anti-pattern example\nconst container = document.getElementById(\"dynamic-content-container\");\ncontainer.setAttribute(\"aria-live\", \"polite\");\n`}\n  language=\"js\"\n/>\n\n<Source\n  code={`\n// React anti-pattern example\nconst [ariaLive, setAriaLive] = useState(undefined);\n// When the component mounts, set the aria-live attribute.\nuseEffect(() => {\n  setAriaLive(\"polite\");\n}, [])\n// ...\nreturn (\n  <div id=\"dynamic-content-container\" aria-live={ariaLive}>\n    <!-- Any dynamic content should be inserted, removed, or updated here. -->\n  </div>\n);\n`}\n  language=\"jsx\"\n/>\n\n**Do not assign the `aria-live` attribute to an entire section or the entire\npage.**\n\nAdd the `aria-live` attribute to the specific element that will be updated. For\nexample, on a search results page that updates the amount of results found and\nthe list of results, only add the `aria-live` attribute to the element that\ncontains the number of results. The following is not recommended:\n\n<Source\n  code={`\n<div id=\"search-results\" aria-live=\"polite\">\n  <div id=\"results-count\">\n    <!-- Dynamic content. -->\n    <span>10 results found</span>\n  </div>\n  <ul id=\"results-list\">\n    <!-- Dynamic list of li elements. -->\n    <li>\n      <p>Title: Result 1</p>\n      <p>Author: Author 1</p>\n    </li>\n    <li>\n      <p>Title: Result 2</p>\n      <p>Author: Author 2</p>\n    </li>\n    <!-- ... -->\n  </ul>\n</div>\n`}\n  language=\"html\"\n/>\n\nThis is not recommended because the screen reader will announce:\n\n<Source\n  code={`\n\"10 results found Title: Result 1 Author: Author 1 Title: Result 2 Author: Author 2 ...\"\n`}\n  language=\"html\"\n/>\n\nThis is information overload. Instead, add the `aria-live` attribute to the\nelement that contains the updated number of results found. In this case, it's\nthe element with `id` of `results-count` only.\n\n## NYPL Patterns\n\n### HelperErrorText\n\nThe `HelperErrorText` component renders an empty `div` element with the\n`aria-live` attribute set to `\"polite\"` by default. This component should not be\nconditionally rendered on the page. Instead, the content should be dynamically\nupdated.\n\n[HelperErrorText Storybook documentation](../?path=/docs/components-content-display-helpererrortext--docs)\n\n<Source\n  code={`\n// Very naive example.\nconst [text, setText] = useState(\"\");\n// ...\nuseEffect(() => {\n  setText(\"This helper text was dynamically updated.\");\n}, []);\n// ...\n// Even though \"text\" is empty by default, the \"HelperErrorText\" component\n// is still rendered. The text that is dynamically updated will be announced\n// by assistive technology.\nreturn <HelperErrorText text={text} />;\n`}\n  language=\"jsx\"\n/>\n\n### Form Components\n\nThe pattern described in this section is true for the `Checkbox`,\n`CheckboxGroup`, `DatePicker`, `Radio`, `RadioGroup`, `SearchBar`, `Select`,\n`Slider`, `TextInput`, and `Toggle` DS components. All these form components\ninternally implement the `HelperErrorText` component described above.\nImplementing the `HelperErrorText` component allows the component to display\nhelper or error text. This is especially useful when there is an error that\nneeds to be displayed after the user has interacted with the form component.\n\nFor simplicity, the `TextInput` component will be in the following example. The\nhelper text \"Please enter a 5-digit value.\" is set by default. If the user does\nnot enter a 5-digit value, the error text \"Error: The zip code needs to be\n5-digits.\" is displayed _and_ also announced by assistive technology.\n\n[TextInput Storybook documentation](../?path=/docs/components-form-elements-textinput--docs)\n\n<Source\n  code={`\n// Very naive example.\nconst [inputValue, setInputValue] = useState();\nreturn (\n<TextInput\n  labelText=\"Zip code example\"\n  isInvalid={inputValue.length !== 5}\n  onChange={(e) => setInputValue(e.target.value)}\n  helperText=\"Please enter a 5-digit value.\"\n  invalidText=\"Error: The zip code needs to be 5-digits.\"\n  value={inputValue}\n/>\n); `}\n  language=\"jsx\"\n/>\n\n## Resources\n\n- [MDN aria-live](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live)\n- [W3 WAI-ARIA: aria-live](https://www.w3.org/TR/wai-aria/#aria-live)\n- [MDN ARIA live regions](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions)\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Link","Source","MDXContent","MDXLayout"],"mappings":"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"}