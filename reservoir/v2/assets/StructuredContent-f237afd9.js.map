{"version":3,"file":"StructuredContent-f237afd9.js","sources":["../../../src/components/StructuredContent/StructuredContent.tsx"],"sourcesContent":["import { Box, chakra, useMultiStyleConfig } from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\nimport useDSHeading from \"../../hooks/useDSHeading\";\n\nimport Heading from \"../Heading/Heading\";\nimport Image, { ComponentImageProps, ImageProps } from \"../Image/Image\";\n\nexport type StructuredContentImagePosition = \"left\" | \"right\" | \"center\";\n\ninterface StructuredContentImageProps extends ComponentImageProps {\n  /** Optional value to control the positioning of the internal `Image` component.\n   * Defaults to `\"left\"`. */\n  position?: StructuredContentImagePosition;\n}\n\nexport interface StructuredContentProps {\n  /** Optional value to set the text for the callout heading text. */\n  calloutText?: string | JSX.Element;\n  /** Additional class name for the `StructuredContent` component. */\n  className?: string;\n  /** Optional string value used to set the text for a `Heading` component, or\n   * a DS Heading component that can be passed in.\n   */\n  headingText?: string | JSX.Element;\n  /** ID that other components can cross reference for accessibility purposes. */\n  id?: string;\n  /** Object used to create and render the `Image` component. */\n  imageProps?: StructuredContentImageProps;\n  /** Required value to set the text for the body content. */\n  bodyContent: string | JSX.Element;\n}\n\n/**\n * Internal component used in the `StructuredContent` component\n * that renders the DS `Image` component.\n */\nconst StructuredContentImage = chakra((props: ImageProps) => {\n  const {\n    additionalFigureStyles,\n    additionalImageStyles,\n    additionalWrapperStyles,\n    alt,\n    aspectRatio,\n    caption,\n    component,\n    credit,\n    size,\n    src,\n  } = props;\n  return (\n    <Image\n      additionalFigureStyles={additionalFigureStyles}\n      additionalImageStyles={additionalImageStyles}\n      additionalWrapperStyles={additionalWrapperStyles}\n      alt={alt}\n      component={component}\n      aspectRatio={aspectRatio}\n      size={size}\n      caption={caption}\n      credit={credit}\n      src={src}\n    />\n  );\n});\n\n/**\n * The `StructuredContent` component that displays a heading, callout content,\n * an image, and body content. All are optional except for body content.\n */\nexport const StructuredContent = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<StructuredContentProps>>(\n    (props, ref?) => {\n      const {\n        calloutText,\n        className,\n        headingText,\n        id,\n        imageProps = {\n          alt: \"\",\n          aspectRatio: \"square\",\n          caption: undefined,\n          component: undefined,\n          credit: undefined,\n          position: \"left\",\n          size: \"medium\",\n          src: \"\",\n        },\n        bodyContent,\n        ...rest\n      } = props;\n      const hasImage = imageProps.src || imageProps.component;\n      const hasFigureImage = imageProps.caption || imageProps.credit;\n      const styles = useMultiStyleConfig(\"StructuredContent\", {\n        hasFigureImage,\n        imageAspectRatio: imageProps.aspectRatio,\n        imagePosition: imageProps.position,\n      });\n      const finalBodyContent =\n        typeof bodyContent === \"string\" ? (\n          <div\n            className=\"structuredcontent-body\"\n            dangerouslySetInnerHTML={{ __html: bodyContent }}\n          />\n        ) : (\n          <Box className=\"structuredcontent-body\">{bodyContent}</Box>\n        );\n      const finalTitle = useDSHeading({\n        title: headingText,\n        id,\n      });\n      const calloutTextUpdate = calloutText ? (\n        typeof calloutText === \"string\" ? (\n          <Heading id={`${id}-callout`} level=\"h3\" size=\"heading5\">\n            {calloutText}\n          </Heading>\n        ) : (\n          calloutText\n        )\n      ) : undefined;\n      const finalCalloutText = useDSHeading({\n        title: calloutTextUpdate,\n      });\n\n      if (hasImage && !imageProps.alt) {\n        console.warn(\n          \"NYPL Reservoir StructuredContent: The `imageProps.alt` prop is required \" +\n            \"when using an image.\"\n        );\n      }\n\n      return (\n        <Box id={id} className={className} ref={ref} __css={styles} {...rest}>\n          {finalTitle}\n          {finalCalloutText}\n          {hasImage && (\n            <StructuredContentImage\n              additionalFigureStyles={styles.imageFigure}\n              additionalImageStyles={styles.image}\n              additionalWrapperStyles={styles.imageWrapper}\n              alt={imageProps.alt}\n              component={imageProps.component}\n              aspectRatio={imageProps.aspectRatio}\n              caption={imageProps.caption}\n              credit={imageProps.credit}\n              size={imageProps.size}\n              src={imageProps.src ? imageProps.src : undefined}\n            />\n          )}\n          {finalBodyContent}\n        </Box>\n      );\n    }\n  )\n);\n\nexport default StructuredContent;\n"],"names":["StructuredContentImage","chakra","props","additionalFigureStyles","additionalImageStyles","additionalWrapperStyles","alt","aspectRatio","caption","component","credit","size","src","jsx","Image","StructuredContent","forwardRef","ref","calloutText","className","headingText","id","imageProps","bodyContent","rest","hasImage","hasFigureImage","styles","useMultiStyleConfig","finalBodyContent","Box","finalTitle","useDSHeading","calloutTextUpdate","Heading","finalCalloutText","jsxs"],"mappings":"6TAoCA,MAAAA,EAAAC,EAAAC,GAAA,CACE,KAAA,CAAM,uBAAAC,EACJ,sBAAAC,EACA,wBAAAC,EACA,IAAAC,EACA,YAAAC,EACA,QAAAC,EACA,UAAAC,EACA,OAAAC,EACA,KAAAC,EACA,IAAAC,CACA,EAAAV,EAEF,OAAAW,EACEC,EAAC,CAAA,uBAAAX,EACC,sBAAAC,EACA,wBAAAC,EACA,IAAAC,EACA,UAAAG,EACA,YAAAF,EACA,KAAAI,EACA,QAAAH,EACA,OAAAE,EACA,IAAAE,CACA,CAAA,CAGN,CAAA,EAMOG,EAAAd,EAA0Be,EAAA,WAC/B,CAAAd,EAAAe,IAAA,CAEI,KAAA,CAAM,YAAAC,EACJ,UAAAC,EACA,YAAAC,EACA,GAAAC,EACA,WAAAC,EAAA,CACa,IAAA,GACN,YAAA,SACQ,QAAA,OACJ,UAAA,OACE,OAAA,OACH,SAAA,OACE,KAAA,SACJ,IAAA,EACD,EACP,YAAAC,EACA,GAAAC,CACG,EAAAtB,EAELuB,EAAAH,EAAA,KAAAA,EAAA,UACAI,EAAAJ,EAAA,SAAAA,EAAA,OACAK,EAAAC,EAAA,oBAAA,CAAwD,eAAAF,EACtD,iBAAAJ,EAAA,YAC6B,cAAAA,EAAA,QACH,CAAA,EAE5BO,EAAA,OAAAN,GAAA,SAAAV,EAEI,MAAC,CAAA,UAAA,yBACW,wBAAA,CAAA,OAAAU,CAAA,CACqC,CAAA,EAAAV,EAAAiB,EAAA,CAAA,UAAA,yBAAA,SAAAP,CAAA,CAAA,EAKrDQ,EAAAC,EAAA,CAAgC,MAAAZ,EACvB,GAAAC,CACP,CAAA,EAEFY,EAAAf,EAAA,OAAAA,GAAA,SAAAL,EAAAqB,EAAA,CAAA,GAAA,GAAAb,CAAA,WAAA,MAAA,KAAA,KAAA,WAAA,SAAAH,EAAA,EAAAA,EAAA,OASAiB,EAAAH,EAAA,CAAsC,MAAAC,CAC7B,CAAA,EAGT,OAAAR,GAAA,CAAAH,EAAA,KACE,QAAA,KAAQ,8FACN,EAKJc,EAAAN,EAAA,CAAA,GAAAT,EAAA,UAAAF,EAAA,IAAAF,EAAA,MAAAU,EAAA,GAAAH,EAAA,SAAA,CAEKO,EAAAI,EACAV,GAAAZ,EAECb,EAAC,CAAA,uBAAA2B,EAAA,YACgC,sBAAAA,EAAA,MACD,wBAAAA,EAAA,aACE,IAAAL,EAAA,IAChB,UAAAA,EAAA,UACM,YAAAA,EAAA,YACE,QAAAA,EAAA,QACJ,OAAAA,EAAA,OACD,KAAAA,EAAA,KACF,IAAAA,EAAA,IAAAA,EAAA,IAAA,MACsB,CAAA,EACzCO,CAED,CAAA,CAAA,CACH,CAEJ,CAEJ"}