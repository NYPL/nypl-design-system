import{j as m}from"./emotion-react-jsx-runtime.browser.esm-49aea89b.js";import{R as d,r as b}from"./index-0cbcd92a.js";import{S as f}from"./SimpleGrid-bd04b221.js";import{a as F,B as w}from"./chakra-ui-layout.esm-e0dbb94e.js";const y=F(e=>{const{children:r,className:o,gap:l,id:t,...a}=e,n=d.Children.count(r),i=d.Children.map(r,(s,c)=>s?s.type===u||s.props.mdxType==="FormField"?d.cloneElement(s,{id:`${t}-grandchild${c}`}):(console.warn("NYPL Reservoir FormRow: Children must be `FormField` components."),null):null);return m(f,{columns:n,className:o,gap:l,id:t,...a,children:i})}),u=F(e=>{const{children:r,className:o,gap:l,id:t,...a}=e;return m(f,{columns:1,className:o,gap:l,id:t,...a,children:r})}),_=F(b.forwardRef((e,r)=>{const{action:o,children:l,className:t,gap:a="grid.l",id:n,method:i,onSubmit:s,...c}=e;n||console.warn("NYPL Reservoir Form: This component's required `id` prop was not passed.");const p={};o&&(p.action=o),i&&(i==="get"||i==="post")&&(p.method=i);const g=d.Children.map(l,(h,N)=>h&&d.cloneElement(h,{gap:a,id:`${n}-child${N}`}));return m(w,{as:"form","aria-label":"form",className:t,id:n,onSubmit:s,ref:r,...p,...c,children:m(f,{columns:1,gap:a,id:`${n}-parent`,children:g})})}),{shouldForwardProp:()=>!0});try{y.displayName="FormRow",y.__docgenInfo={description:"FormRow child-component",displayName:"FormRow",props:{className:{defaultValue:null,description:"className to be applied to FormRow, FormField, and Form",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference (internal use)",name:"id",required:!1,type:{name:"string"}}}}}catch{}try{u.displayName="FormField",u.__docgenInfo={description:"FormField child-component",displayName:"FormField",props:{className:{defaultValue:null,description:"className to be applied to FormRow, FormField, and Form",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference (internal use)",name:"id",required:!1,type:{name:"string"}}}}}catch{}try{_.displayName="Form",_.__docgenInfo={description:"Main Form component",displayName:"Form",props:{className:{defaultValue:null,description:"className to be applied to FormRow, FormField, and Form",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference (internal use)",name:"id",required:!0,type:{name:"string"}},action:{defaultValue:null,description:"Optional form `action` attribute",name:"action",required:!1,type:{name:"string"}},onSubmit:{defaultValue:null,description:"Function to call for the `onSubmit` form event.",name:"onSubmit",required:!1,type:{name:"(e: FormEvent<any>) => void"}},method:{defaultValue:null,description:"Optional form `method` attribute",name:"method",required:!1,type:{name:'"get" | "post"'}}}}}catch{}export{_ as F,u as a,y as b};
//# sourceMappingURL=Form-b79b3734.js.map
