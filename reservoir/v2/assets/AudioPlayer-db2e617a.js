import{j as s,F as q}from"./emotion-react-jsx-runtime.browser.esm-49aea89b.js";import{r as d}from"./index-0cbcd92a.js";import{C as A}from"./ComponentWrapper-aa2910be.js";import{a as M,u as V,B as y}from"./chakra-ui-layout.esm-e0dbb94e.js";const O=["libsyn","soundcloud","spotify"],h=M(d.forwardRef((i,o)=>{const{audioType:r,className:t,descriptionText:u,embedCode:n,headingText:g,helperText:b,id:T,iframeTitle:l=null,..._}=i,[C,x]=d.useState(!1),[m,E]=d.useState(void 0);d.useEffect(()=>{const e=c(n);let a=!n||!e||!v(r,e);e&&!e.title&&(e.title=l||"Embedded audio player"),!!O.find(N=>N===r)&&!n&&(console.warn("NYPL Reservoir AudioPlayer: The `embedCode` prop is required when using a 3rd party streaming service."),a=!0),x(a),E(e)},[n,r,l]);const P="<strong>Error: </strong>This audio player has not been configured properly. Please contact the site administrator.";function v(e,a){var p;return e!=="file"&&((p=a==null?void 0:a.src)==null?void 0:p.includes(`${e}.com`))}const f=V("AudioPlayer",{});function S(){return m?s(y,{dangerouslySetInnerHTML:{__html:m.outerHTML}}):null}const I=S();return s(A,{className:`audioplayer ${t}`,headingText:g,descriptionText:u,helperText:b,id:`${T}-componentWrapper`,"data-testid":"audio-player-component",ref:o,__css:f,..._,children:C?s(y,{dangerouslySetInnerHTML:{__html:P},__css:f.invalid}):s(q,{children:I})})}));function c(i){var o,r;try{const t=new DOMParser().parseFromString(i,"text/html");if(((r=(o=t==null?void 0:t.body)==null?void 0:o.firstChild)==null?void 0:r.nodeName)==="IFRAME")return t.body.firstChild}catch(t){console.error(t)}}try{c.displayName="parseIframeEmbedCode",c.__docgenInfo={description:`Parse the embedCode string to a DOM object for proper formatted HTML element.
We are only interested in the iframe element.`,displayName:"parseIframeEmbedCode",props:{}}}catch{}try{h.displayName="AudioPlayer",h.__docgenInfo={description:"Renders an audio player from 3rd party services such as Libsyn, SoundCloud, and Spotify.",displayName:"AudioPlayer",props:{className:{defaultValue:null,description:"Optional className you can add in addition to `audio-player`.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes.",name:"id",required:!1,type:{name:"string"}},descriptionText:{defaultValue:null,description:"Optional string to set the text for the audio player description.",name:"descriptionText",required:!1,type:{name:"string"}},headingText:{defaultValue:null,description:"Optional string value used to set the text for a `Heading` component, or\na DS Heading component that can be passed in.",name:"headingText",required:!1,type:{name:"string | Element"}},helperText:{defaultValue:null,description:"Optional string to set the text for a `HelperErrorText` component.",name:"helperText",required:!1,type:{name:"string"}},embedCode:{defaultValue:null,description:"Optional string to set a code snippet provided by Libsyn, SoundCloud or Spotify; the\n`AudioPlayer` component will accept the `embedCode` prop or the `filePath` prop.",name:"embedCode",required:!1,type:{name:"string"}},iframeTitle:{defaultValue:null,description:"Optional title to added to the `<iframe>` element for improved accessibility. If omitted, a\ngeneric title will be added.",name:"iframeTitle",required:!1,type:{name:"string"}},audioType:{defaultValue:null,description:"Required string used to specify the type of audio playback.",name:"audioType",required:!0,type:{name:"AudioType"}}}}}catch{}export{h as A};
//# sourceMappingURL=AudioPlayer-db2e617a.js.map
