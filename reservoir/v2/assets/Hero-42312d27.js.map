{"version":3,"file":"Hero-42312d27.js","sources":["../../../src/components/Hero/Hero.tsx"],"sourcesContent":["import {\n  Box,\n  chakra,\n  useColorModeValue,\n  useMultiStyleConfig,\n} from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport Image, { ComponentImageProps } from \"../Image/Image\";\n\nexport const heroTypesArray = [\n  \"primary\",\n  \"secondary\",\n  \"secondaryBooksAndMore\",\n  \"secondaryLocations\",\n  \"secondaryResearch\",\n  \"secondaryWhatsOn\",\n  \"tertiary\",\n  \"campaign\",\n  \"fiftyFifty\",\n] as const;\nexport type HeroTypes = typeof heroTypesArray[number];\n// Only used for internal purposes.\nexport const heroSecondaryTypes = [\n  \"secondary\",\n  \"secondaryBooksAndMore\",\n  \"secondaryLocations\",\n  \"secondaryResearch\",\n  \"secondaryWhatsOn\",\n];\nexport interface HeroImageProps\n  extends Pick<ComponentImageProps, \"alt\" | \"src\"> {}\nexport interface HeroProps {\n  /**\n   * Optional background color for the backdrop only in the `campaign` variant.\n   * When both `backdropBackgroundColor` and `backgroundImageSrc` are passed,\n   * the `backgroundImageSrc` will take precedence.\n   */\n  backdropBackgroundColor?: string;\n  /** Optional hex color value used to override the default background\n   * color for a given `Hero` variation.\n   * Note: not all `Hero` variations utilize this prop. */\n  backgroundColor?: string;\n  /** Optional path to an image that will be used as a background image for the\n   * `Hero` component.\n   * Note: not all `Hero` variations utilize this prop. */\n  backgroundImageSrc?: string;\n  /** Optional hex color value used to override the default text color for a\n   * given `Hero` variation.\n   * Note: not all `Hero` variations utilize this prop. */\n  foregroundColor?: string;\n  /** Optional heading element. */\n  heading?: JSX.Element;\n  /** Used to control how the `Hero` component will be rendered. */\n  heroType?: HeroTypes;\n  /** Object used to create and render the `Image` component. Note that only\n   * `src` and `alt` are the available attributes to pass. If `imageProps.alt`\n   * is left blank, a warning will be logged to the console and will cause\n   * accessibility issues. For `imageProps.src`, it will only work for the\n   * \"secondary\", \"fiftyFifty\" and \"campaign\" `Hero` types; Note: `imageProps.src`\n   * can only be used in conjunction with `backgroundImageSrc` for the \"campaign\"\n   * `Hero` type. Note: not all `Hero` variations utilize this prop. */\n  imageProps?: HeroImageProps;\n  /** Optional boolean used to toggle the treatment of the background image in\n   * the \"campaign\" variant. If true, the background image will be converted to\n   * black & white and darkened to 60% black. */\n  isDarkBackgroundImage?: boolean;\n  /** Optional details area that contains location data.\n   * Note: not all `Hero` variations utilize this prop. */\n  locationDetails?: JSX.Element;\n  /** Optional string used for the subheader that displays\n   * underneath the heading element. */\n  subHeaderText?: string | JSX.Element;\n}\n\nexport const Hero = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<HeroProps>>(\n    (props, ref?) => {\n      const {\n        backdropBackgroundColor,\n        backgroundColor,\n        backgroundImageSrc,\n        foregroundColor,\n        heading,\n        heroType,\n        imageProps = {\n          alt: \"\",\n          src: \"\",\n        },\n        isDarkBackgroundImage = false,\n        locationDetails,\n        subHeaderText,\n      } = props;\n      const styles = useMultiStyleConfig(\"Hero\", { variant: heroType });\n      const headingStyles = styles.heading;\n      // We want to add `Hero`-specific styling to the `Heading` component.\n      const finalHeading =\n        heading && React.cloneElement(heading, { __css: headingStyles });\n      let backgroundImageStyle = {};\n      let contentBoxStyling = {};\n\n      if (imageProps.src && !imageProps.alt) {\n        console.warn(\n          `NYPL Reservoir Hero: The \"imageProps.src\" prop was passed but the \"imageProps.alt\" props was not. This will make the rendered image inaccessible.`\n        );\n      }\n\n      if (heroType === \"primary\") {\n        if (!backgroundImageSrc) {\n          console.warn(\n            \"NYPL Reservoir Hero: It is recommended to use the `backgroundImageSrc` \" +\n              \"prop for the `'primary'` `heroType` variant.\"\n          );\n        }\n        if (imageProps.alt && imageProps.src) {\n          console.warn(\n            \"NYPL Reservoir Hero: The `imageProps.src` and `imageProps.alt` props have been \" +\n              \"passed, but the `'primary'` `heroType` variant will not use it.\"\n          );\n        }\n      } else if (locationDetails) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `locationDetails` prop should only be used \" +\n            \"with the `'primary'` `heroType` variant.\"\n        );\n      }\n      if (heroSecondaryTypes.includes(heroType) && backgroundImageSrc) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `backgroundImageSrc` prop has been passed, \" +\n            \"but the `'secondary'` `heroType` variant will not use it.\"\n        );\n      }\n      if (heroType === \"tertiary\" && (backgroundImageSrc || imageProps.src)) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `'tertiary'` `heroType` variant hero \" +\n            \"will not use any of the image props.\"\n        );\n      }\n      if (\n        heroType === \"campaign\" &&\n        (!backdropBackgroundColor || !backgroundImageSrc || !imageProps.src)\n      ) {\n        console.warn(\n          \"NYPL Reservoir Hero: It is recommended to use either the \" +\n            \"`backdropBackgroundColor`, `backgroundImageSrc`, or \" +\n            \"`imageProps.src` prop for the `'campaign'` `heroType` variant.\"\n        );\n      }\n      if (heroType === \"fiftyFifty\" && backgroundImageSrc) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `backgroundImageSrc` prop has been passed, \" +\n            \"but the `'fiftyFifty'` `heroType` variant hero will not use it.\"\n        );\n      }\n      if (heroType !== \"campaign\" && backdropBackgroundColor) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `backdropBackgroundColor` prop has been passed, \" +\n            \"but the `'campaign'` `heroType` variant was not set. It will be ignored.\"\n        );\n      }\n      if (heroType !== \"campaign\" && isDarkBackgroundImage) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `isDarkBackgroundImage` prop has been passed, \" +\n            \"but the `'campaign'` `heroType` variant was not set. It will be ignored.\"\n        );\n      }\n\n      /** The _dark object in the theme file was overriding custom background\n       * colors. To overcome this issue, the background color styles were moved\n       * into the component file and the related styles for all variants, other\n       * than the \"secondary\" variant, were removed from the theme file. */\n      const allDefaultBackgroundColors = {\n        primary: useColorModeValue(\"ui.bg.default\", \"dark.ui.bg.default\"),\n        secondary: useColorModeValue(\"ui.bg.default\", \"dark.ui.bg.default\"),\n        tertiary: useColorModeValue(\"ui.gray.x-dark\", \"dark.ui.bg.default\"),\n        campaign: useColorModeValue(\"dark.ui.bg.default\", \"dark.ui.bg.default\"),\n        campaignBackdrop: useColorModeValue(\n          \"dark.ui.bg.active\",\n          \"dark.ui.bg.active\"\n        ),\n        fiftyFifty: useColorModeValue(\"ui.bg.default\", \"dark.ui.bg.default\"),\n      };\n\n      const defaultBackgroundColor = allDefaultBackgroundColors[heroType];\n      if (heroType === \"primary\") {\n        backgroundImageStyle = backgroundImageSrc\n          ? {\n              bgColor: defaultBackgroundColor,\n              backgroundImage: `url(${backgroundImageSrc})`,\n            }\n          : {};\n      } else if (heroType === \"secondary\") {\n        backgroundImageStyle = { bgColor: defaultBackgroundColor };\n      } else if (heroType === \"campaign\") {\n        /**\n         * For better control of the background image in the \"campaign\" variant,\n         * the image and the associated styles were moved into the `:before`\n         * element.\n         */\n        const campaignBgStyles = {\n          content: `\"\"`,\n          height: { base: \"100%\", md: \"calc(100% - var(--nypl-space-xl))\" },\n          minHeight: \"300px\",\n          paddingBottom: { base: \"0\", md: \"xl\" },\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n        };\n        backgroundImageStyle = backgroundImageSrc\n          ? {\n              _before: {\n                ...campaignBgStyles,\n                bgColor: \"ui.black\",\n              },\n              _after: {\n                ...campaignBgStyles,\n                backgroundBlendMode: isDarkBackgroundImage\n                  ? \"saturation\"\n                  : null,\n                backgroundImage: isDarkBackgroundImage\n                  ? `linear-gradient(black, black), url(${backgroundImageSrc})`\n                  : `url(${backgroundImageSrc})`,\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                opacity: isDarkBackgroundImage ? \"0.4\" : \"1.0\",\n              },\n            }\n          : backdropBackgroundColor\n          ? {\n              _before: {\n                ...campaignBgStyles,\n                bgColor: backdropBackgroundColor,\n              },\n            }\n          : {\n              _before: {\n                ...campaignBgStyles,\n                bgColor: allDefaultBackgroundColors[\"campaignBackdrop\"],\n              },\n            };\n      } else if (heroType === \"tertiary\" || heroType === \"fiftyFifty\") {\n        const tertiaryBgColor = backgroundColor\n          ? backgroundColor\n          : defaultBackgroundColor;\n        backgroundImageStyle = backgroundColor\n          ? { bgColor: backgroundColor }\n          : { bgColor: tertiaryBgColor };\n      }\n\n      if (!heroSecondaryTypes.includes(heroType)) {\n        contentBoxStyling = {\n          ...(foregroundColor && { color: foregroundColor }),\n          ...(backgroundColor\n            ? { backgroundColor }\n            : { defaultBackgroundColor }),\n        };\n      } else if (\n        foregroundColor ||\n        backgroundColor ||\n        backdropBackgroundColor\n      ) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `foregroundColor`, `backgroundColor`, or \" +\n            \"`backdropBackgroundColor` props have been passed, but the \" +\n            \"`'secondary'` `heroType` variant will not use them.\"\n        );\n      }\n\n      const childrenToRender =\n        heroType === \"campaign\" ? (\n          <>\n            <Box\n              __css={{\n                ...styles.imgWrapper,\n                backgroundImage: `url(${imageProps.src})`,\n              }}\n            >\n              <Image alt={imageProps.alt} src={imageProps.src} />\n            </Box>\n            <Box __css={styles.interior}>\n              {finalHeading}\n              {subHeaderText}\n            </Box>\n          </>\n        ) : (\n          <>\n            {heroType !== \"primary\" && heroType !== \"tertiary\" && (\n              <Box\n                __css={{\n                  ...styles.imgWrapper,\n                  backgroundImage:\n                    heroType === \"fiftyFifty\"\n                      ? `url(${imageProps.src})`\n                      : undefined,\n                }}\n              >\n                <Image alt={imageProps.alt} src={imageProps.src} />\n              </Box>\n            )}\n            {finalHeading}\n            {heroType === \"tertiary\" && subHeaderText ? (\n              <p>{subHeaderText}</p>\n            ) : (\n              <Box __css={styles.bodyText}>{subHeaderText}</Box>\n            )}\n          </>\n        );\n\n      return (\n        <Box\n          data-testid=\"hero\"\n          data-responsive-background-image\n          style={backgroundImageSrc ? backgroundImageStyle : undefined}\n          ref={ref}\n          __css={{\n            ...styles,\n            ...backgroundImageStyle,\n          }}\n        >\n          <Box\n            data-testid=\"hero-content\"\n            style={contentBoxStyling}\n            __css={{ ...styles.content, ...contentBoxStyling }}\n          >\n            {childrenToRender}\n          </Box>\n        </Box>\n      );\n    }\n  ),\n  { shouldForwardProp: () => true }\n);\n\nexport default Hero;\n"],"names":["heroTypesArray","heroSecondaryTypes","Hero","chakra","forwardRef","props","ref","backdropBackgroundColor","backgroundColor","backgroundImageSrc","foregroundColor","heading","heroType","imageProps","isDarkBackgroundImage","locationDetails","subHeaderText","styles","useMultiStyleConfig","headingStyles","finalHeading","React","backgroundImageStyle","contentBoxStyling","allDefaultBackgroundColors","useColorModeValue","defaultBackgroundColor","campaignBgStyles","childrenToRender","jsxs","Fragment","jsx","Box","Image"],"mappings":"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"}