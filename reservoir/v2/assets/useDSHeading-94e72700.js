import{j as d}from"./emotion-react-jsx-runtime.browser.esm-49aea89b.js";import{R as l}from"./index-0cbcd92a.js";import{H as s}from"./Heading-7eebc756.js";const p=["h1","h2","h3","h4","h5","h6"];function r({title:e="",id:t="",customDefaultHeading:a,additionalStyles:i}){const o=t?`${t}-heading`:void 0;let n=null;return e?typeof e=="string"?n=d(s,{id:o,__css:i,children:e}):typeof e=="object"&&(e.type===s?n=i?l.cloneElement(e,{__css:i}):e:p.includes(e.type)?(n=e,console.warn("NYPL Reservoir useDSHeading: An HTML heading element was passed for the `title` or `headingText` prop in a Reservoir component. The heading will render without DS-specific styling.")):console.warn("NYPL Reservoir useDSHeading: An unsupported heading element was passed to the `title` or `headingText` prop in a Reservoir component, so that component's title will not be rendered. Instead, a DS `Heading` component or an HTML heading element should be passed.")):a&&(n=a),n}try{r.displayName="useDSHeading",r.__docgenInfo={description:"DS internal helper hook to render a default `h2` heading element if the\npassed title is a string. Otherwise, it will return the title as is if it\nis a JSX element.",displayName:"useDSHeading",props:{title:{defaultValue:{value:""},description:"",name:"title",required:!1,type:{name:"string | Element"}},id:{defaultValue:{value:""},description:"",name:"id",required:!1,type:{name:"string"}},customDefaultHeading:{defaultValue:null,description:"",name:"customDefaultHeading",required:!1,type:{name:"string | Element"}},additionalStyles:{defaultValue:null,description:"",name:"additionalStyles",required:!1,type:{name:"{ [key: string]: any; }"}}}}}catch{}export{r as u};
//# sourceMappingURL=useDSHeading-94e72700.js.map
