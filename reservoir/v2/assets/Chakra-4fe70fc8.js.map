{"version":3,"file":"Chakra-4fe70fc8.js","sources":["../../../src/docs/Chakra.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\nimport Button from \"../components/Button/Button\";\nimport Link from \"../components/Link/Link\";\nimport Text from \"../components/Text/Text\";\n\n<Meta title=\"Chakra UI\" />\n\n# Chakra UI\n\n## Table of Contents\n\n- {<Link href=\"#why-chakra-ui\" target=\"_self\">Why Chakra UI?</Link>}\n- {<Link href=\"#dsprovider\" target=\"_self\">DSProvider</Link>}\n- {<Link href=\"#components\" target=\"_self\">Components</Link>}\n- {<Link href=\"#styling\" target=\"_self\">Styling</Link>}\n- {<Link href=\"#style-props\" target=\"_self\">Style Props</Link>}\n- {<Link href=\"#hooks\" target=\"_self\">Hooks</Link>}\n- {<Link href=\"#testing\" target=\"_self\">Testing</Link>}\n\n## Why Chakra UI\n\nThe Reservoir Design System (DS) project was influenced by other design systems but\nultimately we decided to initially build DS components from scratch rather than\nuse another design system as its foundation. To better help all the projects at\nNYPL and to better scale with all the components we have built and still need to\nbuild, we decided to integrate Chakra UI into the DS.\n\nChakra UI is an open source component library that is opinionated and uses design\nand development patterns that various projects at NYPL use. Since the DS\nwill be the foundation for all NYPL projects moving forward, using Chakra will\nhelp us align all projects so similar patterns are used throughout various teams\nand projects.\n\nChakra follows WAI-ARIA and WCAG 2.1 standards and guidelines which aligns with\nthe standards that NYPL follows for its own components and applications.\n\nWith design and development consistency, the ability to customize components\n_if necessary_, and accessibility standards in place, developers at NYPL using\nthe Design System will be able to build out applications faster.\n\nWe recommend to read Chakra's own [documentation](https://chakra-ui.com/docs/getting-started)\nto get up to speed on it. This file will provide information on how it is used\nin the DS but we rely on Chakra's documentation.\n\nIf you need help updating to a newer version of the DS, check out\nour [Chakra Migration Guide](https://github.com/NYPL/nypl-design-system/blob/development/CHAKRA_MIGRATION_GUIDE.md).\n\n## DSProvider\n\nIn order to use DS components in a consuming application, there is a necessary\nstep that must be done for component styles to properly render. Consuming\napplications need to wrap all the DS components with a simple provider\ncomponent. Fortunately, this only needs to be done once at the top level of the\nconsuming application.\n\nOnce the following is completed, DS components that internally use Chakra UI\nwill render styles properly. Internally, the `DSProvider` is built on top of\nChakra's `ChakraProvider` component with NYPL's custom theme as input. This sets\nup the style context to propogate through all the children nodes in the DOM tree.\n\n<Source\n  code={`\n// Your main application file\nimport { DSProvider } from \"@nypl/design-system-react-components\";\n// ...\nconst Application = (props) => {\n  // ...\n  return (\n    <header>...</header>\n    <DSProvider>\n      <div className=\"my-app\">\n        // ...\n        {children}\n      </div>\n    </DSProvider>\n    <footer>...</footer>\n  );\n};\n`}\n  language=\"tsx\"\n/>\n\n## Components\n\nAlthough Chakra is integrated into the DS repo, we are still working to compose\nDS components with Chakra components or patterns. For example, both the DS and\nChakra have a `Button` component so we will use Chakra's `Button` component to\ncompose the DS `Button` component. However, the DS has a `Hero` component that\nis not already built by Chakra. In this case, the DS `Hero` component will\ninternally use `Chakra` components such as `Box`.\n\n### Components Composed with Chakra\n\nWhile we can directly use Chakra components that align with DS components, we\nwant to compose DS components using the Chakra component as a base instead. This\npattern allows the Design System to have control over props and standard styles.\n\nThese components composed from Chakra, therefore, do not have all styled props\navailable. For example, whereas `m` (`margin`), `me` (`marginEnd`), and similar\nprops can be used in Chakra components, those props are not available for DS\ncomponents that internally are composed with Chakra components.\n\nComponents built from Chakra rename the component with the `Chakra` name prefix.\n\n<Source\n  code={`\nimport { Tabs as ChakraTabs, useStyleConfig } from \"@chakra-ui/react\";\n`}\n  language=\"tsx\"\n/>\n\nIn this example, the `ChakraTabs` component is returned with NYPL specific\nfunctionality, styles, and other requirements.\n\n<Source\n  code={`\nfunction Tabs(props) {\n  // ...\n  const styles = useStyleConfig(\"Tabs\", { variant: props.tabsType });\n  return (\n    <ChakraTabs\n      id={id}\n      __css={styles}\n      // ... other props\n    >\n      {children}\n    </ChakraTabs>\n}\n`}\n  language=\"tsx\"\n/>\n\n#### Patterns\n\nWe are writing CSS style object rules into Javascript objects that work with\nChakra's theme. Instead of creating a variant for a component with a class name,\nnow different props or internal logic are used to get the appropriate variant.\nInternally, the right variant will be mapped to a Chakra theme variant that will\nprovide all the necessary styles.\n\nFor the `Button` component, for example, we would convert a SCSS class rule such\nas `.button-outline` to a Javascript object (more on this in the <Link href=\"#anatomy-of-a-component-styling-object\" target=\"_self\">Anatomy of a\nComponent Styling Object</Link> section).\n\n### Components re-exported from Chakra\n\nSome components are directly exported from Chakra. These components can be found\nin the `/src/index.ts` file. Note that not _all_ Chakra components are re-exported\nbecause we want to limit what developers should use in consuming applications.\nThey include:\n\n- `Box`, `Center`, `Circle`, `Grid`, `GridItem`, `HStack`, `Square`, `Stack`, `VStack`\n\nNote: These components are harder to have snapshot tests for because, internally,\nthese components autogenerate ids and class names on every new render. We can't\noverride them so snapshot tests will fail.\n\nUpdate: Newer Chakra UI versions have mostly fixed this issue. Still, since\nChakra components have already been tested, we don't necessarily want or need\nto test them ourselves.\n\n## Styling\n\nThe NYPL DS' theme file can be found at `src/theme/index.ts`. This creates a new\ntheme that extends Chakra's theme and is set in the `DSProvider` component. Note\nthat the example below is the general structure of the `theme` object but the DS\n`theme` object has values already set so it may look different. You would generally\nonly work and add new object values in the `components` obejct key for new\ncomponents and their theme or variants.\n\n_Note_: There are some SCSS files used to style third party plugins and to\ngenerate SCSS mixins.\n\n<Source\n  code={`\nconst theme = extendTheme({\n  styles: { ... },\n  breakpoints: { ... },\n  colors: { ... },\n  typography: { ... },\n  space: { ... },\n  components: {\n    Button,\n    // ...\n  },\n});\n`}\n  language=\"jsx\"\n/>\n\n### Anatomy of a Component Styling Object\n\nFor in-depth information, read Chakra's [Component Style documentation](https://chakra-ui.com/docs/theming/component-style).\n\nComponent theme files can be found in the `src/theme/components/` directory.\nHere is an example using the `Button` component.\n\n<Source\n  code={`\n// The basic structure for all component style objects.\nconst Button = {\n  baseStyle: {},\n  sizes: {},\n  variants: {},\n  defaultProps: {},\n};\n`}\n  language=\"js\"\n/>\n\nA current variant class rule can be converted to a Javascript object and go in\nthe `variants` object as in the following example.\n\n<Source\n  code={`\n// Button.scss\n// This is the \"Secondary\" variant.\n.button--outline {\n  @include button-base;\n  background-color: var(--nypl-colors-ui-white);\n  border: 1px solid var(--nypl-colors-ui-gray-light-cool);\n  color: inherit;\n  &:hover {\n    background-color: var(--nypl-colors-ui-gray-xx-light-cool);\n  }\n}\n`}\n  language=\"css\"\n/>\n\n<Source\n  code={`\n// button.ts\nconst Button = {\n  baseStyle: { ... },\n  sizes: { ... },\n  variants: {\n    secondary: {\n      bg: \"ui.white\",\n      border: \"1px solid\",\n      borderColor: \"ui.gray.light-cool\",\n      color: \"inherit\",\n      _hover: {\n        bg: \"ui.gray.xx-light-cool\",\n      },\n    },\n    // ... other variants,\n  },\n  defaultProps: { ... },\n};\n`}\n  language=\"js\"\n/>\n\nNow this variant can be rendered:\n\n<Source\n  code={`\n<Button buttonType=\"secondary\" id=\"secondary\">\n  Press me\n</Button>\n`}\n  language=\"jsx\"\n/>\n\n### Breakpoints\n\nThere are currently five (5) breakpoint values used in the DS:\n\n| Key Name | EM/PX value |\n| -------- | ----------- |\n| sm       | 20em/320px  |\n| md       | 38em/600px  |\n| lg       | 60em/960px  |\n| xl       | 80em/1280px |\n| 2xl      | 96em/1536px |\n\nThere are two ways to set breakpoint values for a style rule: the array method\nand the object method. We prefer the object method and recommend to use the\nobject method since it is easier to read and readily know what values take\neffect at defined breakpoint values. Note that the Chakra `\"base\"` key value is\nthe same as `\"sm\"`.\n\n#### Object Method\n\nWe recommend and follow this pattern in the DS. As an example, let's say we want\nto increase the width of the `Button` component as the device width increases.\nWe start at value \"100px\" and increase by \"50px\" at every breakpoint. In the\n`button.ts` style file, we can define it as in the example below:\n\n<Source\n  code={`\n// button.ts\nconst Button = {\n  baseStyle: {\n    width: {\n      base: \"100px\",\n      md: \"150px\",\n      lg: \"200px\",\n      xl: \"250px\",\n      \"2xl\": \"300px\",\n    },\n  },\n  // ...\n};\n`}\n  language=\"js\"\n/>\n\nYou do not have to define every breakpoint. If you only want to change the width\nof the `Button` at the `lg` breakpoint, it can be defined as:\n\n<Source\n  code={`\n// button.ts\nconst Button = {\n  baseStyle: {\n    width: {\n      base: \"100px\",\n      lg: \"200px\",\n    },\n  },\n  // ...\n};\n`}\n  language=\"js\"\n/>\n\n#### Array Method\n\nWe do not recommend this pattern because it is harder to read and implicit on\nbreakpoint values. Following the same example as the one above, the width of the\n`Button` component can be updated wiht all five values in an array:\n\n<Source\n  code={`\n// button.ts\nconst Button = {\n  baseStyle: {\n    width: [\"100px\", \"150px\", \"200px\", \"250px\", \"300px\"],\n  },\n  // ...\n};\n`}\n  language=\"js\"\n/>\n\n### Colors\n\nAll available colors can be found in `src/theme/foundations/colors.ts`. Chakra\nautogenerates the `colors` object into CSS variables. We will rely on these\nvariables rather than creating our own.\n\n<Source\n  code={`\nconst colors: Colors = {\n  // ui fills\n  ui: {\n    // State and link utilities\n    focus: \"#4181F1\",\n    link: {\n      primary: \"#0576D3\",\n      secondary: \"#004B98\",\n    },\n    // ...\n  },\n  section: {\n    /** What's On is used for Exhibitions & Events. */\n    \"whats-on\": {\n      primary: \"#242424\",\n      secondary: \"#000000\",\n    },\n  },\n  // ...\n};\n`}\n  language=\"js\"\n/>\n\nIn the shorten object example above, the following will be generated by Chakra:\n\n| Theme object value                     | CSS variable                               |\n| -------------------------------------- | ------------------------------------------ |\n| `colors.ui.focus`                      | `--nypl-colors-ui-focus`                   |\n| `colors.ui.link.primary`               | `--nypl-colors-ui-link-primary`            |\n| `colors.ui.link.secondary`             | `--nypl-colors-ui-link-secondary`          |\n| `colors.section[\"whats-on\"].primary`   | `--nypl-colors-section-whats-on-primary`   |\n| `colors.section[\"whats-on\"].secondary` | `--nypl-colors-section-whats-on-secondary` |\n\nNote: while each Chakra color has number range values from 50 to 900 (such as\n`red.400`, `blue.600`, etc) and each one is based on the color coming from\nDS' Figma documentation, we recommend NOT to use them.\n\n### Spacing\n\nAll the spacing values can be found in the `src/theme/foundations/spacing.ts`\nfile. While Chakra provides many values, only use the eight DS defined values.\n\n| NYPL name Value | Chakra Value | DS Variable       |\n| --------------- | ------------ | ----------------- |\n| xxs             | 1            | --nypl-space-xxs  |\n| xs              | 2            | --nypl-space-xs   |\n| s               | 4            | --nypl-space-s    |\n| m               | 6            | --nypl-space-m    |\n| l               | 8            | --nypl-space-l    |\n| xl              | 12           | --nypl-space-xl   |\n| xxl             | 16           | --nypl-space-xxl  |\n| xxxl            | 24           | --nypl-space-xxxl |\n\nFor example, to make all `button`s have a `padding: 8px 16px` value:\n\n<Source\n  code={`\n// src/theme/components/button.ts\nconst Button = {\n  baseStyle: {\n    py: \"xs\", // var(--nypl-space-xs) which results in a value of 8px or 0.5rem.\n    px: \"s\", // var(--nypl-space-s) which results in a value of 16px or 1rem.\n    // ... other styles\n  },\n  sizes: { ... },\n  variants: { ... },\n  defaultProps: { ... },\n};\n`}\n  language=\"js\"\n/>\n\n### Typography\n\nAll typography values can be found in the `src/theme/foundations/typography.ts`\nfile. These values declare the font family, font sizes, and font weights to use\nfor all text.\n\n## Style Props\n\nNYPL Reservoir components are built around the Chakra UI library. While Reservoir\ncomponents may use the corresponding Chakra UI component, that is not always the\ncase. Every Reservoir component, however, does make use of the Chakra UI\n\"style props\" pattern. This means that it is possible to pass in CSS rules to a\ncomponent, including the shorthand versions. These style props will target the\nwrapper element of the component; this means if you want to target a specific\nelement or component in a Reservoir component, you won't be able to with style\nprops.\n\n{\n\n<Text isBold>\n  While this is available to use, it is not recommended. If you see a need to\n  override styles, please reach out to the NYPL Reservoir team for assistance.\n</Text>\n}\n\nIn the following example, the `Button` component has been passed `p` and `maxW`\nprops which are shorthand for \"padding\" and \"max-width\", respectively.\n\n<Source\n  code={`\n<Button id=\"styled-button\" p=\"s\" maxH=\"none\" maxW=\"200px\">\n  Button\n</Button>\n`}\n  language=\"jsx\"\n/>\n\n{\n\n<Button id=\"styled-button\" p=\"s\" maxH=\"none\" maxW=\"200px\">\n  Button\n</Button>\n}\n\nFind more information and a full list of all the available props, check the Chakra\nUI [Style Props page](https://chakra-ui.com/docs/styled-system/features/style-props).\n\n## Hooks\n\nThe following hooks are available to use and can be imported from\n`@nypl/design-system-react-components`.\n\n### useNYPLTheme\n\nIf your application does not use CSS or SCSS files and you want to write\nCSS-in-JS styles in your React components, the `useNYPLTheme` hook will provide\nyou with NYPL-specific style values. This hook depends on the `DSProvider`\ncomponent and if the function is used outside of this wrapper component, then\nthe theme object will be empty.\n\nAfter importing and rendering the `DSProvider` wrapper component, as explained\nin the <Link href=\"#dsprovider\" target=\"_self\">DSProvider</Link> section, your\nchildren components can use this hook function.\n\n<Source\n  code={`\nimport { useNYPLTheme } from \"@nypl/design-system-react-components\";\n// ...\nconst theme = useNYPLTheme();\n`}\n  language=\"jsx\"\n/>\n\nThe `theme` variable will be a JS object with style values discussed in the\nsections above. This will allow you to use NYPL-specific styles in your\ncomponents through CSS-in-JS.\n\n<Source\n  code={`\n// theme:\n{\n  breakpoints: { ... },\n  colors: {\n    brand: { ... },\n    section: { ... },\n    transparent: { ... },\n    ui: { ... },\n  },\n  fontSizes: { ... },\n  fontWeights: { ... },\n  fonts: { ... },\n  radii: { ... },\n  space: { ... },\n}\n`}\n  language=\"js\"\n/>\n\n#### Usage\n\n_Note: more patterns will be added._\n\n1. NYPL DS Components\n\nAll DS components _should_ be used with their current styles. If a DS component\nneeds an updated style, first contact the Design System and UX teams about this\nupdate. If you really _need_ to update a style and there is no available\nvariant, then you can add styles directly as style prop.\n\nFor example, if the `Heading` component should render the text in NYPL's green\ncolor used for \"success primary\" and add a bold font weight, then you can do\nthe following:\n\n<Source\n  code={`\nconst theme = useNYPLTheme();\n// ...\nreturn (\n  <div>\n    <Heading\n      level={2}\n      color={theme.colors.ui.success.primary}\n      fontWeight={theme.fontWeights.bold}\n    >\n      Get a Digital Library Card Today in a Few Easy Steps\n    </Heading>\n\n    {/* Other components */}\n\n  </div>\n);\n`}\n  language=\"jsx\"\n/>\n\nOf course, you can destructure the `theme` object to only get the object keys\nyou need for your component (this is a general example). Log the object to the\nconsole to see all the available styles.\n\n2. HTML Components\n\nUse the `style` attribute in HTML components to add inline styles.\n\n<Source\n  code={`\n<p style={{ color: theme.colors.ui.success.primary }}>\n  If you are 13 or older and live, work, attend school, or pay property taxes in\n  New York State, you can get a free digital library card right now using this\n  online form. Visitors to New York State can also use this form to apply for a\n  temporary card.\n</p>\n`}\n  language=\"jsx\"\n/>\n\n## Testing\n\nDo not re-test Chakra components that are re-exported since they are already\ntested in the `@chakra-ui/react` package. We expect all new components composed\nwith Chakra components to have tests for functionality and styling, including\nsnapshot tests.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Link","Source","Text","Button","MDXContent","MDXLayout"],"mappings":"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"}