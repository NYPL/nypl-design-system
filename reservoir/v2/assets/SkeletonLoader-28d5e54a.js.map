{"version":3,"file":"SkeletonLoader-28d5e54a.js","sources":["../../../node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js","../../../src/components/SkeletonLoader/SkeletonLoader.tsx"],"sourcesContent":["import { useBreakpointValue } from '@chakra-ui/media-query';\nimport { chakra, keyframes, forwardRef, useStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { usePrevious } from '@chakra-ui/hooks';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"className\"],\n    _excluded2 = [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"children\"],\n    _excluded3 = [\"size\"];\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\n\nvar useIsFirstRender = function useIsFirstRender() {\n  var isFirstRender = React.useRef(true);\n  React.useEffect(function () {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\n\nvar Skeleton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Skeleton\", props);\n  var isFirstRender = useIsFirstRender();\n\n  var _omitThemingProps = omitThemingProps(props);\n      _omitThemingProps.startColor;\n      _omitThemingProps.endColor;\n      var isLoaded = _omitThemingProps.isLoaded,\n      fadeDuration = _omitThemingProps.fadeDuration;\n      _omitThemingProps.speed;\n      var className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var wasPreviouslyLoaded = usePrevious(isLoaded);\n\n  var _className = cx(\"chakra-skeleton\", className);\n\n  if (isLoaded) {\n    var animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : fade + \" \" + fadeDuration + \"s\";\n    return /*#__PURE__*/React.createElement(chakra.div, _extends({\n      ref: ref,\n      className: _className,\n      __css: {\n        animation: animation\n      }\n    }, rest));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledSkeleton, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: styles\n  }));\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\n\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\";\n}\n\nfunction range(count) {\n  return Array(count).fill(1).map(function (_, index) {\n    return index + 1;\n  });\n}\n\nvar defaultNoOfLines = 3;\nvar SkeletonText = function SkeletonText(props) {\n  var _props$noOfLines = props.noOfLines,\n      noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$skeletonHeight = props.skeletonHeight,\n      skeletonHeight = _props$skeletonHeight === void 0 ? \"0.5rem\" : _props$skeletonHeight,\n      className = props.className,\n      startColor = props.startColor,\n      endColor = props.endColor,\n      isLoaded = props.isLoaded,\n      fadeDuration = props.fadeDuration,\n      speed = props.speed,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n\n  var getWidth = function getWidth(index) {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  var _className = cx(\"chakra-skeleton__group\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest), numbers.map(function (number, index) {\n    if (isLoaded && index > 0) {\n      // skip other lines\n      return null;\n    }\n\n    var sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({\n      key: numbers.length.toString() + number,\n      startColor: startColor,\n      endColor: endColor,\n      isLoaded: isLoaded,\n      fadeDuration: fadeDuration,\n      speed: speed\n    }, sizeProps), // allows animating the children\n    index === 0 ? children : undefined);\n  }));\n};\n\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\";\n}\n\nvar SkeletonCircle = function SkeletonCircle(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"2rem\" : _ref$size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded3);\n\n  return /*#__PURE__*/React.createElement(Skeleton, _extends({\n    borderRadius: \"full\",\n    boxSize: size\n  }, rest));\n};\n\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\";\n}\n\nexport { Skeleton, SkeletonCircle, SkeletonText };\n","import {\n  Box,\n  chakra,\n  Skeleton as ChakraSkeleton,\n  useMultiStyleConfig,\n} from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport { LayoutTypes } from \"../../helpers/types\";\n\nexport const skeletonLoaderImageRatiosArray = [\n  \"landscape\",\n  \"portrait\",\n  \"square\",\n] as const;\nexport type SkeletonLoaderImageRatios =\n  typeof skeletonLoaderImageRatiosArray[number];\n\nexport interface SkeletonLoaderProps {\n  /** Additional class name for the Skeleton component. */\n  className?: string;\n  /** Optional numeric value to control the number of lines for content\n   * placeholder; default value is `3`. */\n  contentSize?: number;\n  /** Optional numeric value to control the number of lines for heading\n   * placeholder; default value is `1`. */\n  headingSize?: number;\n  /** Optional value to control the aspect ratio of the image placeholder;\n   * default value is `\"square\"`. */\n  imageAspectRatio?: SkeletonLoaderImageRatios;\n  /** Optional boolean value to control visibility of border around skeleton loader. */\n  isBordered?: boolean;\n  /** Optional value to control the position of the image placeholder;\n   * default value is `\"column\"`. */\n  layout?: LayoutTypes;\n  /** Optional boolean value to control visibility of button placeholder. */\n  showButton?: boolean;\n  /** Optional boolean value to control visibility of content placeholder. */\n  showContent?: boolean;\n  /** Optional boolean value to control visibility of heading placeholder. */\n  showHeading?: boolean;\n  /** Optional boolean value to control visibility of image placeholder. */\n  showImage?: boolean;\n  /** Optional width value. This value should be entered with the same\n   * formatting as a CSS width attribute (ex. `50%`, `640px`, `20rem`).\n   * If omitted, the skeleton loader will have a default width of 100%. */\n  width?: string;\n}\n\n/**\n * The `SkeletonLoader` component renders a placeholder to be used while\n * dynamic content is loading.\n */\nexport const SkeletonLoader = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<SkeletonLoaderProps>>(\n    (props, ref?) => {\n      const {\n        className,\n        contentSize = 3,\n        headingSize = 1,\n        imageAspectRatio = \"square\",\n        isBordered = false,\n        layout = \"column\",\n        showButton = false,\n        showContent = true,\n        showHeading = true,\n        showImage = true,\n        width,\n        ...rest\n      } = props;\n      const styles = useMultiStyleConfig(\"SkeletonLoader\", {\n        isBordered,\n        imageAspectRatio,\n        showImage,\n        variant: layout,\n      });\n\n      /**\n       * Generates the Chakra skeleton loader `size` number of times for the\n       * \"heading\" and \"content\" areas defined by the `type` argument. The last\n       * element will have width of `lastWidth`.\n       */\n      const getSkeletonElements = (\n        type: string,\n        size = 1,\n        lastWidth = \"80%\"\n      ) => {\n        return new Array(size).fill(null).map((_, i) => {\n          const width = i === size - 1 ? lastWidth : \"100%\";\n          const marginBottomValue =\n            i === size - 1 && type === \"content\" ? \"0\" : undefined;\n          return (\n            <ChakraSkeleton key={`${type}-${i}`} width={width}>\n              <Box\n                __css={styles[type]}\n                style={{ marginBottom: marginBottomValue }}\n              />\n            </ChakraSkeleton>\n          );\n        });\n      };\n\n      return (\n        <Box\n          className={className}\n          ref={ref}\n          __css={styles}\n          style={{ width }}\n          {...rest}\n        >\n          {showImage && (\n            <ChakraSkeleton>\n              <Box __css={{ ...styles.element, ...styles.image }} />\n            </ChakraSkeleton>\n          )}\n          <Box className={layout} __css={styles.container}>\n            {showHeading && (\n              <Box __css={styles.section}>\n                {getSkeletonElements(\"heading\", headingSize, \"80%\")}\n              </Box>\n            )}\n            {showContent && (\n              <Box __css={styles.section}>\n                {getSkeletonElements(\"content\", contentSize, \"30%\")}\n              </Box>\n            )}\n            {showButton && (\n              <Box __css={{ ...styles.section, ...styles.button }}>\n                <ChakraSkeleton borderRadius=\"16px\">\n                  <Box __css={styles.button} />\n                </ChakraSkeleton>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      );\n    }\n  )\n);\n\nexport default SkeletonLoader;\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded","StyledSkeleton","chakra","fade","keyframes","useIsFirstRender","isFirstRender","React.useRef","React.useEffect","Skeleton","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","isLoaded","fadeDuration","className","rest","wasPreviouslyLoaded","usePrevious","_className","cx","animation","React.createElement","skeletonLoaderImageRatiosArray","SkeletonLoader","contentSize","headingSize","imageAspectRatio","isBordered","layout","showButton","showContent","showHeading","showImage","width","useMultiStyleConfig","getSkeletonElements","type","size","lastWidth","_","width2","marginBottomValue","jsx","ChakraSkeleton","Box","jsxs"],"mappings":"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","x_google_ignoreList":[0]}