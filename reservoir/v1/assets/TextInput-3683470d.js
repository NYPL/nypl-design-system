import{j as b,a as y,F as ce}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as s}from"./index-f2bd0723.js";import{C as fe}from"./ComponentWrapper-82a15cf7.js";import{L as he}from"./Label-2b2058d3.js";import{g as xe}from"./utils-acca7d12.js";import{B as ve}from"./Button-a3ea41e0.js";import{I as be}from"./Icon-6616a4b9.js";import{b as U}from"./chakra-ui-form-control.esm-c23b95fa.js";import{o as m,f as g,u as K,p as G,r as h,N as J,i as ye,v as ge,B as Te}from"./chakra-ui-layout.esm-b2fa9d31.js";import{p as Ie}from"./chakra-ui-hooks.esm-02e82f78.js";function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o.apply(this,arguments)}function T(e,n){if(e==null)return{};var t={},a=Object.keys(e),r,l;for(l=0;l<a.length;l++)r=a[l],!(n.indexOf(r)>=0)&&(t[r]=e[r]);return t}var _e=["htmlSize"],Q=m(function(e,n){var t=e.htmlSize,a=T(e,_e),r=K("Input",a),l=G(a),u=U(l),d=h("chakra-input",e.className);return s.createElement(g.input,o({size:t},u,{__css:r.field,ref:n,className:d}))});Q.id="Input";var qe=["placement"],we={left:{marginEnd:"-1px",borderEndRadius:0,borderEndColor:"transparent"},right:{marginStart:"-1px",borderStartRadius:0,borderStartColor:"transparent"}},Ee=g("div",{baseStyle:{flex:"0 0 auto",width:"auto",display:"flex",alignItems:"center",whiteSpace:"nowrap"}}),X=m(function(e,n){var t,a=e.placement,r=a===void 0?"left":a,l=T(e,qe),u=(t=we[r])!=null?t:{},d=J();return s.createElement(Ee,o({ref:n},l,{__css:o({},d.addon,u)}))}),Ce=m(function(e,n){return s.createElement(X,o({ref:n,placement:"left"},e,{className:h("chakra-input__left-addon",e.className)}))});Ce.id="InputLeftAddon";var Le=m(function(e,n){return s.createElement(X,o({ref:n,placement:"right"},e,{className:h("chakra-input__right-addon",e.className)}))});Le.id="InputRightAddon";var Ne=["placement"],Ve=["className"],Re=["className"],Se=g("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center",position:"absolute",top:"0",zIndex:2}}),H=m(function(e,n){var t,a,r,l=e.placement,u=l===void 0?"left":l,d=T(e,Ne),c=J(),i=c.field,I=u==="left"?"insetStart":"insetEnd",x=o((r={},r[I]="0",r.width=(t=i==null?void 0:i.height)!=null?t:i==null?void 0:i.h,r.height=(a=i==null?void 0:i.height)!=null?a:i==null?void 0:i.h,r.fontSize=i==null?void 0:i.fontSize,r),c.element);return s.createElement(Se,o({ref:n,__css:x},d))});H.id="InputElement";var Ae=m(function(e,n){var t=e.className,a=T(e,Ve),r=h("chakra-input__left-element",t);return s.createElement(H,o({ref:n,placement:"left",className:r},a))});Ae.id="InputLeftElement";var ke=m(function(e,n){var t=e.className,a=T(e,Re),r=h("chakra-input__right-element",t);return s.createElement(H,o({ref:n,placement:"right",className:r},a))});ke.id="InputRightElement";function k(){return k=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},k.apply(this,arguments)}function He(e,n){if(e==null)return{};var t={},a=Object.keys(e),r,l;for(l=0;l<a.length;l++)r=a[l],!(n.indexOf(r)>=0)&&(t[r]=e[r]);return t}var Oe=["className","rows"],Pe=m(function(e,n){var t=ye("Textarea",e),a=G(e),r=a.className,l=a.rows,u=He(a,Oe),d=U(u),c=["h","minH","height","minHeight"],i=l?ge(t,c):t;return s.createElement(g.textarea,k({ref:n,rows:l},d,{className:h("chakra-textarea",r),__css:i}))});function je(e){const[n,t]=s.useState(e);return s.useEffect(()=>{t(e)},[e]),[n,t]}const Je=["email","hidden","number","password","text","textarea","tel","url"],Fe={email:"jdoe@domain.com",hidden:"",password:"",text:"",tel:"(123) 123-1234",textarea:"",url:"https://domain.com"},Y=g(s.forwardRef((e,n)=>{const{className:t,defaultValue:a,helperText:r,id:l,invalidText:u,isClearable:d=!1,isClearableCallback:c,isDisabled:i=!1,isInvalid:I=!1,isRequired:x=!1,labelText:_,max:N,maxLength:Z,min:V,name:O,onChange:P,onClick:ee,onFocus:te,pattern:ae,placeholder:ne,showHelperInvalidText:re=!0,showLabel:R=!0,showRequiredLabel:le=!0,requiredLabelText:ie,step:se=1,textInputType:oe="default",type:p="text",value:j,...F}=e,[q,$]=je(j),M=s.useRef(),ue=Ie(M,n),S=n?ue:M,w=K("TextInput",{showLabel:R,variant:oe}),de=p==="textarea",f=p==="hidden";let z=!1;const D=u||"There is an error related to this field.",W=L=>{$(L.target.value),P&&P(L)};let E=I?D:r;if(p==="tel"||p==="url"||p==="email"){z=!0;const L=Fe[p]||"";E=y(ce,{children:["Ex: ",L,b("br",{}),E]})}const pe=xe({footnote:E,id:l,labelText:_,name:"TextInput",showLabel:R}),me=()=>{$(""),c&&c(),S.current.focus()};let C=I,A,B,v;return l||console.warn("NYPL Reservoir TextInput: This component's required `id` prop was not passed."),p==="number"&&N&&V&&V>N&&(C=!0,console.warn("NYPL Reservoir TextInput: The `min` prop is greater than the `max` prop.")),v=f?{defaultValue:a,id:l,"aria-hidden":f,name:O,onChange:W,ref:S}:{"aria-required":x,autoComplete:z?p:null,defaultValue:a,id:l,isDisabled:i,isRequired:x,isInvalid:C,max:N,maxLength:Z,min:V,name:O,onChange:W,onClick:ee,onFocus:te,pattern:ae,placeholder:ne,ref:S,step:p==="number"?se:null,...pe,...F},de?(d&&console.warn("NYPL Reservoir TextInput: The `isClearable` prop cannot be used with the `textarea` type."),A=b(Pe,{...v,__css:w.textarea,children:j})):(v={type:p,value:q,...v},A=b(Q,{...v,__css:w.input}),d&&!f&&(B=y(ve,{buttonType:"text",id:`${l}-clear-btn`,onClick:me,sx:w.clearButton,children:[b(be,{color:"ui.black",name:"close",size:"medium"}),y("span",{children:["Clear ",_]})]}))),y(fe,{className:t,helperText:C?r:E,id:l,invalidText:D,isInvalid:C,showHelperInvalidText:re&&!f,__css:w,...F,children:[_&&R&&!f&&b(he,{htmlFor:l,id:`${l}-label`,isRequired:le&&x,requiredLabelText:ie,children:_}),y(Te,{position:"relative",children:[A,!f&&(q==null?void 0:q.length)>0&&B]})]})}));try{Y.displayName="TextInput",Y.__docgenInfo={description:"Renders either an `input` element with a specified type or a `textarea`\nelement. All types will render an accessible `Label` component and an\noptional `HelperErrorText` component.",displayName:"TextInput",props:{pattern:{defaultValue:null,description:"Regex to query the user input against.",name:"pattern",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A class name for the TextInput parent div.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!0,type:{name:"string"}},max:{defaultValue:null,description:"The max number for a `number` TextInput type.",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:null,description:"The min number for a `number` TextInput type.",name:"min",required:!1,type:{name:"number"}},name:{defaultValue:null,description:"Used to reference the input element in forms.",name:"name",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"HTML Input types as defined by MDN: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",name:"type",required:!1,type:{name:'"number" | "textarea" | "text" | "url" | "hidden" | "tel" | "email" | "password"'}},onClick:{defaultValue:null,description:"The action to perform on the `input`/`textarea`'s onClick function",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLInputElement, MouseEvent>) => void"}},isDisabled:{defaultValue:null,description:"Adds the `disabled` and `aria-disabled` prop to the input when true",name:"isDisabled",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"Populates the HelperErrorText for the standard state",name:"helperText",required:!1,type:{name:"HelperErrorTextType"}},showHelperInvalidText:{defaultValue:null,description:"Offers the ability to hide the helper/invalid text.",name:"showHelperInvalidText",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"The starting value of the input field.",name:"defaultValue",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Populates the placeholder for the input/textarea elements",name:"placeholder",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"The action to perform on the `input`/`textarea`'s onFocus function",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLInputElement>) => void"}},onChange:{defaultValue:null,description:"The action to perform on the `input`/`textarea`'s onChange function",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => void"}},step:{defaultValue:null,description:"The amount to increase or decrease when using the number type.",name:"step",required:!1,type:{name:"number"}},invalidText:{defaultValue:null,description:"Populates the HelperErrorText for the error state",name:"invalidText",required:!1,type:{name:"HelperErrorTextType"}},isInvalid:{defaultValue:null,description:"Adds errored styling to the input/textarea and helper text elements",name:"isInvalid",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Will add `required` and `aria-required` props to the input/textarea elements",name:"isRequired",required:!1,type:{name:"boolean"}},labelText:{defaultValue:null,description:"Provides text for a `Label` component if `showLabel` is set to true;\npopulates an `aria-label` attribute if `showLabel` is set to false.",name:"labelText",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"Populates the value of the input/textarea elements",name:"value",required:!1,type:{name:"string"}},isClearable:{defaultValue:null,description:"Adds a button to clear existing text in the input field.",name:"isClearable",required:!1,type:{name:"boolean"}},isClearableCallback:{defaultValue:null,description:"The callback function that is called when the clear button is clicked.",name:"isClearableCallback",required:!1,type:{name:"() => void"}},maxLength:{defaultValue:null,description:"The max length of the input field. This prop is for all input types\nexcept for the `number` type.",name:"maxLength",required:!1,type:{name:"number"}},showLabel:{defaultValue:null,description:"Offers the ability to show the label onscreen or hide it. Refer to the\n`labelText` property for more information.",name:"showLabel",required:!1,type:{name:"boolean"}},showRequiredLabel:{defaultValue:null,description:`Whether or not to display the "(Required)" text in the label text.
True by default.`,name:"showRequiredLabel",required:!1,type:{name:"boolean"}},requiredLabelText:{defaultValue:null,description:`Allows the '(Required)' text to be changed for language purposes
Note: Parenthesis will be added automatically by the component`,name:"requiredLabelText",required:!1,type:{name:"string"}},textInputType:{defaultValue:null,description:"FOR INTERNAL DS USE ONLY: the input variant to display.",name:"textInputType",required:!1,type:{name:"TextInputVariants"}}}}}catch{}export{Y as T,Je as t,je as u};
//# sourceMappingURL=TextInput-3683470d.js.map
