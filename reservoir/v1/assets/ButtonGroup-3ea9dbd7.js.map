{"version":3,"file":"ButtonGroup-3ea9dbd7.js","sources":["../../../src/components/ButtonGroup/ButtonGroup.tsx"],"sourcesContent":["import { chakra, Stack, useStyleConfig } from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport Button from \"../Button/Button\";\nimport { LayoutTypes } from \"../../helpers/types\";\nimport useNYPLBreakpoints from \"../../hooks/useNYPLBreakpoints\";\n\nexport const buttonGroupWidthsArray = [\"default\", \"full\"] as const;\nexport type ButtonGroupWidths = typeof buttonGroupWidthsArray[number];\n\ninterface ButtonGroupProps {\n  /** Sets the width to \"default\" (for \"fit-content\") or \"full\". */\n  buttonWidth?: ButtonGroupWidths;\n  /** Additional className to use. */\n  className?: string;\n  /** ID that other components can cross reference for accessibility purposes. */\n  id?: string;\n  /** Set's the disabled state to all the internal `Button` components. */\n  isDisabled?: boolean;\n  /** Renders the layout of `Button` components in a row or column. */\n  layout?: LayoutTypes;\n}\n\nconst noop = () => {};\n\n/**\n * A simple wrapper to group `Button` components together. The layout can be set\n * to row or column and the width of internal `Button` components can be set to\n * the parent's full width or the `Button`'s content width\n */\nexport const ButtonGroup = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<ButtonGroupProps>>(\n    (props, ref?) => {\n      const {\n        buttonWidth = \"default\",\n        children,\n        className = \"\",\n        id,\n        isDisabled = false,\n        layout = \"row\",\n        ...rest\n      } = props;\n      const newChildren: JSX.Element[] = [];\n      const { isLargerThanMobile } = useNYPLBreakpoints();\n      const finalLayout = isLargerThanMobile ? layout : \"column\";\n      const finalButtonWidth = isLargerThanMobile ? buttonWidth : \"full\";\n      const styles = useStyleConfig(\"ButtonGroup\", {\n        buttonWidth: finalButtonWidth,\n      });\n\n      React.Children.map(\n        children as JSX.Element,\n        (child: React.ReactElement, key: number) => {\n          if (React.isValidElement(child)) {\n            if (child.type !== Button) {\n              // Special case for Storybook MDX documentation.\n              // @ts-ignore\n              if (child.props.mdxType && child.props.mdxType === \"Button\") {\n                noop();\n              } else {\n                console.warn(\n                  \"NYPL Reservoir ButtonGroup: Only Button components can be children of ButtonGroup.\"\n                );\n                return;\n              }\n            }\n            const disabledProps = isDisabled ? { isDisabled } : {};\n            newChildren.push(\n              React.cloneElement(child, { key, ...disabledProps })\n            );\n          }\n        }\n      );\n\n      return (\n        <Stack\n          className={className}\n          direction={finalLayout}\n          id={id}\n          ref={ref}\n          // Always set the spacing to \"8px\".\n          spacing=\"xs\"\n          sx={styles}\n          {...rest}\n        >\n          {newChildren}\n        </Stack>\n      );\n    }\n  )\n);\n\nexport default ButtonGroup;\n"],"names":["buttonGroupWidthsArray","ButtonGroup","chakra","forwardRef","props","ref","buttonWidth","children","className","id","isDisabled","layout","rest","newChildren","isLargerThanMobile","useNYPLBreakpoints","finalLayout","styles","useStyleConfig","React","child","key","Button","disabledProps","jsx","Stack"],"mappings":"0RAOO,MAAAA,EAAA,CAAA,UAAA,MAAA,EAuBAC,EAAAC,EAAoBC,EAAA,WACzB,CAAAC,EAAAC,IAAA,CAEI,KAAA,CAAM,YAAAC,EAAA,UACU,SAAAC,EACd,UAAAC,EAAA,GACY,GAAAC,EACZ,WAAAC,EAAA,GACa,OAAAC,EAAA,MACJ,GAAAC,CACN,EAAAR,EAELS,EAAA,CAAA,EACA,CAAA,mBAAAC,GAAAC,IACAC,EAAAF,EAAAH,EAAA,SAEAM,EAAAC,EAAA,cAAA,CAA6C,YAD7CJ,EAAAR,EAAA,MAEe,CAAA,EAGf,OAAAa,EAAA,SAAA,IAAeZ,EACb,CAAAa,EAAAC,IAAA,CAEE,GAAAF,EAAA,eAAAC,CAAA,EAAA,CACE,GAAAA,EAAA,OAAAE,GAGE,EAAAF,EAAA,MAAA,SAAAA,EAAA,MAAA,UAAA,UACO,CAEL,QAAA,KAAQ,oFACN,EAEF,OAGJ,MAAAG,EAAAb,EAAA,CAAA,WAAAA,CAAA,EAAA,CAAA,EACAG,EAAA,KAAYM,EAAA,aAAAC,EAAA,CAAA,IAAAC,EAAA,GAAAE,CAAA,CAAA,CACyC,EAEvD,CACF,EAGFC,EACEC,EAAC,CAAA,UAAAjB,EACC,UAAAQ,EACW,GAAAP,EACX,IAAAJ,EACA,QAAA,KAEQ,GAAAY,EACJ,GAAAL,EACA,SAAAC,CAEH,CAAA,CACH,CAEJ,CAEJ"}