import{a as S,j as r}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as F,R as o}from"./index-f2bd0723.js";import{F as O}from"./Fieldset-8799f492.js";import{H as A}from"./ComponentWrapper-82a15cf7.js";import{s as m}from"./spacing-06362f80.js";import{R as W,a as j}from"./Radio-c107ee3b.js";import{f as $,u as k,d as M}from"./chakra-ui-layout.esm-b2fa9d31.js";const h=$(F.forwardRef((n,c)=>{const{children:y,className:R="",defaultValue:b,helperText:x,id:a,invalidText:T,isDisabled:g=!1,isFullWidth:w=!1,isInvalid:t=!1,isRequired:i=!1,labelText:q,layout:l="column",name:V,onChange:s,showHelperInvalidText:v=!0,showLabel:_=!0,showRequiredLabel:G=!0,...H}=n,[L,E]=o.useState(b),C=t?T:x,I=l==="column"?m.s:m.l,d=[],u=k("RadioGroup",{isFullWidth:w}),N={name:V,onChange:e=>{E(e),s&&s(e)},ref:c,value:L};return a||console.warn("NYPL Reservoir RadioGroup: This component's required `id` prop was not passed."),o.Children.map(y,(e,D)=>{var p,f;if((e==null?void 0:e.type)!==W&&((p=e.props)!=null&&p.mdxType&&((f=e.props)==null?void 0:f.mdxType)==="Radio"||console.warn("NYPL Reservoir RadioGroup: Only `Radio` components are allowed inside the `RadioGroup` component.")),e!=null){const P={key:D,isDisabled:g,isInvalid:t,isRequired:i};d.push(o.cloneElement(e,P))}}),S(O,{className:R,id:`radio-group-${a}`,isLegendHidden:!_,isRequired:i,legendText:q,showRequiredLabel:G,...H,__css:u,children:[r(j,{...N,children:r(M,{direction:[l],spacing:I,children:d})}),r(A,{id:`${a}-helperErrorText`,isInvalid:t,isRenderedText:v,text:C,__css:u.helperErrorText})]})}));try{h.displayName="RadioGroup",h.__docgenInfo={description:"RadioGroup is a wrapper for DS `Radio` components that renders as a fieldset\nHTML element along with optional helper text. The `name` prop is essential\nfor this form group element and is not needed for individual DS `Radio`\ncomponents when `RadioGroup` is used.",displayName:"RadioGroup",props:{className:{defaultValue:null,description:"Additional class name.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!0,type:{name:"string"}},layout:{defaultValue:null,description:"Renders the Radio buttons in a row or column (default).",name:"layout",required:!1,type:{name:'"column" | "row"'}},name:{defaultValue:null,description:"The `name` prop indicates the form group for all the Radio children.",name:"name",required:!0,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Adds the 'disabled' prop to the input when true.",name:"isDisabled",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"Optional string to populate the HelperErrorText for standard state",name:"helperText",required:!1,type:{name:"HelperErrorTextType"}},showHelperInvalidText:{defaultValue:null,description:"Offers the ability to hide the helper/invalid text.",name:"showHelperInvalidText",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Populates the initial value of the input",name:"defaultValue",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"The action to perform on the `<input>`'s onChange function",name:"onChange",required:!1,type:{name:"(value: string) => void"}},invalidText:{defaultValue:null,description:"Optional string to populate the HelperErrorText for error state",name:"invalidText",required:!1,type:{name:"HelperErrorTextType"}},isInvalid:{defaultValue:null,description:`Adds the 'aria-invalid' attribute to the input and
sets the error state when true.`,name:"isInvalid",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Adds the 'required' attribute to the input when true.",name:"isRequired",required:!1,type:{name:"boolean"}},labelText:{defaultValue:null,description:'The radio group label displayed in a `legend` element if `showlabel` is\ntrue, or an "aria-label" if `showLabel` is false.',name:"labelText",required:!0,type:{name:"string"}},showLabel:{defaultValue:null,description:"Offers the ability to show the group's legend onscreen or hide it. Refer\nto the `labelText` property for more information.",name:"showLabel",required:!1,type:{name:"boolean"}},isFullWidth:{defaultValue:null,description:"Set's the `Radio`s' wrapper to be full width.",name:"isFullWidth",required:!1,type:{name:"boolean"}},showRequiredLabel:{defaultValue:null,description:`Whether or not to display the "(Required)" text in the label text.
True by default.`,name:"showRequiredLabel",required:!1,type:{name:"boolean"}}}}}catch{}export{h as R};
//# sourceMappingURL=RadioGroup-8ceb9bfa.js.map
