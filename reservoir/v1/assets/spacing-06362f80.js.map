{"version":3,"file":"spacing-06362f80.js","sources":["../../../src/theme/foundations/spacing.ts"],"sourcesContent":["/**\n * Chakra spacing values are based on:\n *   root size of 16px or 1rem\n *   1 spacing unit is 4px or 0.25rem\n *\n * Chakra's mental model: If you need a spacing of 40px, divide it by 4.\n * That'll give you 10. Then use it in your component.\n *\n * The DS uses nine CSS variables/values found in \"src/styles/03-space/_space.css\":\n *   --nypl-space-xxxs = 2px or 0.125rem\n *   --nypl-space-xxs = 4px or 0.25rem\n *   --nypl-space-xs = 8px or 0.5rem\n *   --nypl-space-s = 16px or 1rem\n *   --nypl-space-m = 24px or 1.5rem\n *   --nypl-space-l = 32px or 2rem\n *   --nypl-space-xl = 48px or 3rem\n *   --nypl-space-xxl = 64px or 4rem\n *   --nypl-space-xxxl = 96px or 6rem\n *\n * @note Even though all the following values are available through Chakra,\n * we recommend to only use the spacing values that map to the DS values\n * declared above.\n *\n * Chakra Number Value | Chakra Name value | DS Variable\n * ------------------- | ----------------- | -----------------\n *        0.5          |         xxxs      |   --nypl-space-xxxs\n *        1            |         xxs       |   --nypl-space-xxs\n *        2            |         xs        |   --nypl-space-xs\n *        4            |         s         |   --nypl-space-s\n *        6            |         m         |   --nypl-space-m\n *        8            |         l         |   --nypl-space-l\n *        12           |         xl        |   --nypl-space-xl\n *        16           |         xxl       |   --nypl-space-xxl\n *        24           |         xxxl      |   --nypl-space-xxxl\n */\nconst chakraSpacingTokens = {\n  px: \"1px\",\n  0: \"0\",\n  0.5: \"0.125rem\",\n  1: \"0.25rem\",\n  1.5: \"0.375rem\",\n  2: \"0.5rem\",\n  2.5: \"0.625rem\",\n  3: \"0.75rem\",\n  3.5: \"0.875rem\",\n  4: \"1rem\",\n  5: \"1.25rem\",\n  6: \"1.5rem\",\n  7: \"1.75rem\",\n  8: \"2rem\",\n  9: \"2.25rem\",\n  10: \"2.5rem\",\n  12: \"3rem\",\n  14: \"3.5rem\",\n  16: \"4rem\",\n  20: \"5rem\",\n  24: \"6rem\",\n  28: \"7rem\",\n  32: \"8rem\",\n  36: \"9rem\",\n  40: \"10rem\",\n  44: \"11rem\",\n  48: \"12rem\",\n  52: \"13rem\",\n  56: \"14rem\",\n  60: \"15rem\",\n  64: \"16rem\",\n  72: \"18rem\",\n  80: \"20rem\",\n  96: \"24rem\",\n};\nconst reservoirSpacingValues = {\n  xxxs: \"0.125rem\", // 2px\n  xxs: \"0.25rem\", // 4px\n  xs: \"0.5rem\", // 8px\n  s: \"1rem\", // 16px\n  m: \"1.5rem\", // 24px\n  l: \"2rem\", // 32px\n  xl: \"3rem\", // 48px\n  xxl: \"4rem\", // 64px\n  xxxl: \"6rem\", // 96px\n};\nconst reservoirSpacingTokens = {\n  // Reservoir generic tokens\n  xxxs: reservoirSpacingValues[\"xxxs\"],\n  xxs: reservoirSpacingValues[\"xxs\"],\n  xs: reservoirSpacingValues[\"xs\"],\n  s: reservoirSpacingValues[\"s\"],\n  m: reservoirSpacingValues[\"m\"],\n  l: reservoirSpacingValues[\"l\"],\n  xl: reservoirSpacingValues[\"xl\"],\n  xxl: reservoirSpacingValues[\"xxl\"],\n  xxxl: reservoirSpacingValues[\"xxxl\"],\n  // Reservoir semantic tokens\n  button: {\n    small: {\n      px: reservoirSpacingValues[\"xs\"],\n      py: reservoirSpacingValues[\"xxs\"],\n    },\n    medium: {\n      px: reservoirSpacingValues[\"s\"],\n      py: reservoirSpacingValues[\"xs\"],\n    },\n    large: {\n      px: reservoirSpacingValues[\"l\"],\n      py: reservoirSpacingValues[\"s\"],\n    },\n  },\n  input: {\n    group: {\n      button: {\n        hstack: reservoirSpacingValues[\"xs\"],\n        vstack: reservoirSpacingValues[\"xs\"],\n      },\n      default: {\n        hstack: reservoirSpacingValues[\"l\"],\n        vstack: reservoirSpacingValues[\"s\"],\n      },\n    },\n  },\n  inset: {\n    default: reservoirSpacingValues[\"s\"],\n    extranarrow: reservoirSpacingValues[\"xxs\"],\n    extrawide: reservoirSpacingValues[\"xl\"],\n    narrow: reservoirSpacingValues[\"xs\"],\n    wide: reservoirSpacingValues[\"l\"],\n  },\n  grid: {\n    default: reservoirSpacingValues[\"l\"],\n    xxs: reservoirSpacingValues[\"xxs\"],\n    xs: reservoirSpacingValues[\"xs\"],\n    s: reservoirSpacingValues[\"s\"],\n    m: reservoirSpacingValues[\"m\"],\n    l: reservoirSpacingValues[\"l\"],\n    xl: reservoirSpacingValues[\"xl\"],\n    xxl: reservoirSpacingValues[\"xxl\"],\n  },\n  page: {\n    hstack: reservoirSpacingValues[\"l\"],\n    vstack: reservoirSpacingValues[\"l\"],\n  },\n  table: {\n    column: reservoirSpacingValues[\"m\"],\n    row: reservoirSpacingValues[\"l\"],\n  },\n};\nexport const spacing = {\n  ...chakraSpacingTokens,\n  ...reservoirSpacingTokens,\n};\n"],"names":["chakraSpacingTokens","reservoirSpacingValues","reservoirSpacingTokens","spacing"],"mappings":"AAmCA,MAAMA,EAAsB,CAC1B,GAAI,MACJ,EAAG,IACH,GAAK,WACL,EAAG,UACH,IAAK,WACL,EAAG,SACH,IAAK,WACL,EAAG,UACH,IAAK,WACL,EAAG,OACH,EAAG,UACH,EAAG,SACH,EAAG,UACH,EAAG,OACH,EAAG,UACH,GAAI,SACJ,GAAI,OACJ,GAAI,SACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,OACN,EACMC,EAAyB,CAC7B,KAAM,WACN,IAAK,UACL,GAAI,SACJ,EAAG,OACH,EAAG,SACH,EAAG,OACH,GAAI,OACJ,IAAK,OACL,KAAM,MACR,EACMC,EAAyB,CAE7B,KAAMD,EAAuB,KAC7B,IAAKA,EAAuB,IAC5B,GAAIA,EAAuB,GAC3B,EAAGA,EAAuB,EAC1B,EAAGA,EAAuB,EAC1B,EAAGA,EAAuB,EAC1B,GAAIA,EAAuB,GAC3B,IAAKA,EAAuB,IAC5B,KAAMA,EAAuB,KAE7B,OAAQ,CACN,MAAO,CACL,GAAIA,EAAuB,GAC3B,GAAIA,EAAuB,GAC7B,EACA,OAAQ,CACN,GAAIA,EAAuB,EAC3B,GAAIA,EAAuB,EAC7B,EACA,MAAO,CACL,GAAIA,EAAuB,EAC3B,GAAIA,EAAuB,CAC7B,CACF,EACA,MAAO,CACL,MAAO,CACL,OAAQ,CACN,OAAQA,EAAuB,GAC/B,OAAQA,EAAuB,EACjC,EACA,QAAS,CACP,OAAQA,EAAuB,EAC/B,OAAQA,EAAuB,CACjC,CACF,CACF,EACA,MAAO,CACL,QAASA,EAAuB,EAChC,YAAaA,EAAuB,IACpC,UAAWA,EAAuB,GAClC,OAAQA,EAAuB,GAC/B,KAAMA,EAAuB,CAC/B,EACA,KAAM,CACJ,QAASA,EAAuB,EAChC,IAAKA,EAAuB,IAC5B,GAAIA,EAAuB,GAC3B,EAAGA,EAAuB,EAC1B,EAAGA,EAAuB,EAC1B,EAAGA,EAAuB,EAC1B,GAAIA,EAAuB,GAC3B,IAAKA,EAAuB,GAC9B,EACA,KAAM,CACJ,OAAQA,EAAuB,EAC/B,OAAQA,EAAuB,CACjC,EACA,MAAO,CACL,OAAQA,EAAuB,EAC/B,IAAKA,EAAuB,CAC9B,CACF,EACaE,EAAU,CACrB,GAAGH,EACH,GAAGE,CACL"}