{"version":3,"file":"useMultiSelect-363f120f.js","sources":["../../../src/hooks/useMultiSelect.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\n<Meta title=\"Hooks/useMultiSelect\" />\n\n# useMultiSelect\n\n| Hook Version | DS Version |\n| ------------ | ---------- |\n| Added        | `1.4.0`    |\n| Latest       | `1.4.0`    |\n\nThis custom hook, inspired by [downshift.js](https://www.downshift-js.com/),\nexposes functions used for MultiSelect components. `useMultiSelect` provides all functions needed to handle the selectedItems. This hook can be used for\ncases where managing the state of the component in the consuming app is less of a concern and general ease of use is prefered.\n\nThe two main functions are `onChange` and `onMixedStateChange` used for handling the selectedItems object. The functions `onClear` and `onClearAll`\ncan be used to clear the selectedItems of a specific `MultiSelect` component or all `MultiSelect`s/ a `MultiSelectGroup` connected to the hook.\nThe hook also provides the `selectedItems` object containing the currently checked/selected items and a `setSelectedItems`\nfunction to set or manipulate the state of `selectedItems`. If using `setSelectedItems`, check that the correct data structure is passed into `setSelectedItems`.\n\n## Usage\n\nFor a full implementation example with a single `MultiSelect` component, view the [MultiSelectListbox component](https://github.com/NYPL/nypl-design-system/blob/development/src/components/MultiSelect/MultiSelectListbox.tsx) or [MultiSelectDialog component](https://github.com/NYPL/nypl-design-system/blob/development/src/components/MultiSelect/MultiSelectDialog.tsx).\nFor an implementation with a `MultiSelectGroup`, view [MultiSelectGroup component](https://github.com/NYPL/nypl-design-system/blob/development/src/components/MultiSelectGroup/MultiSelectGroup.tsx).\n\n<Source\n  code={`\nconst {\n  onChange,\n  onMixedStateChange,\n  onClear,\n  onClearAll,\n  selectedItems,\n  setSelectedItems,\n} = useMultiSelect();\n`}\n  language=\"jsx\"\n/>\n\n## useMultiSelect Hook implementation in a listbox MultiSelect\n\nThe `listbox` variant can only display non hierarchical items.\nWhen the `useMultiSelect` hook is used within a `listbox` MultiSelect, you will only need the `onChange` and `onClear` functions and the selectedItems state.\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  MultiSelect,\n  useMultiSelect,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function MultiSelectWithHookExample() {\n  const multiSelectId = \"multi-select-1\";\n  // Without this hook, you'd have to add handlers for onChange and onClear,\n  // and also manage the selectedItems state yourself.\n  const { onChange, onClear, selectedItems } = useMultiSelect();\n  return (\n    <MultiSelect\n      id={multiSelectId}\n      type=\"listbox\"\n      items={items}\n      selectedItems={selectedItems}\n      onChange={(selectedItem) => onChange(selectedItem.id, multiSelectId)}\n      onClear={() => {\n        onClear(multiSelectId);\n      }}\n    />\n  );\n}\n`}\n  language=\"jsx\"\n/>\n\n## useMultiSelect Hook implementation in a dialog MultiSelect\n\nThe `dialog`variant can display nested items.\nWhen the `useMultiSelect` hook is used within a `dialog` MultiSelect, additional to the selectedItems and the `onChange` and `onClear` functions, you will need\na `onMixedStateChange` function. It is also provided by the hook and handles the state change of parent items.\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  MultiSelect,\n  useMultiSelect,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function MultiSelectWithHookExample() {\n  const multiSelectId = \"multi-select-1\";\n  // Without this hook, you'd have to add handlers for onChange, onMixedStateChange and onClear,\n  // and also manage the selectedItems state yourself.\n  const { onChange, onMixedStateChange, onClear, selectedItems } =\n    useMultiSelect();\n  return (\n    <MultiSelect\n      id={multiSelectId}\n      items={items}\n      selectedItems={selectedItems}\n      onChange={(e) => onChange(e.target.id, multiSelectId)}\n      onMixedStateChange={(e) =>\n        onMixedStateChange(e.target.id, multiSelectId, items)\n      }\n      onClear={() => {\n        onClear(multiSelectId);\n      }}\n      type=\"dialog\"\n    />\n  );\n}\n`}\n  language=\"jsx\"\n/>\n\n## useMultiSelect Hook implementation in a MultiSelectGroup\n\nThe data structure used to render two `MultiSelect` components in the following `MultiSelectGroup` example:\n\n<Source\n  code={`\nconst multiSelectItems = [\n  {\n    id: \"pets\",\n    name: \"Pets\",\n    items: [\n      { id: \"cat\", name: \"Cat\" },\n      {\n        id: \"dog\",\n        name: \"Dog\",\n        children: [\n          { id: \"corgy\", name: \"Corgy\" },\n          { id: \"german-sheperd\", name: \"German Sheperd\" },\n          { id: \"afghan-hound\", name: \"Afghan Hound\" },\n        ],\n      },\n      { id: \"rat\", name: \"Rat\" },\n    ],\n  },\n  {\n    id: \"tools\",\n    name: \"Tools\",\n    items: [\n      { id: \"hammer\", name: \"Hammer\" },\n      {\n        id: \"screwdriver\",\n        name: \"Screwdriver\",\n        children: [\n          { id: \"slottet\", name: \"Slotted Screwdriver\" },\n          { id: \"phillips\", name: \"Phillips Screwdriver\" },\n          { id: \"allen\", name: \"Allen Screwdriver\" },\n        ],\n      },\n      { id: \"whisk\", name: \"Whisk\" },\n    ],\n  },\n];\n`}\n  language=\"jsx\"\n/>\n\nThe implemntation of the `useMultiSelect` hook together with the `MultiSelectGroup` component.\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  MultiSelect,\n  MultiSelectGroup,\n  useMultiSelect,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function MultiSelectGroupWithHookExample() {\n  const { onChange, onMixedStateChange, onClear, selectedItems } =\n    useMultiSelect();\n  return (\n    <MultiSelectGroup id=\"multiselect-group\" labelText=\"MultiSelect Group\">\n      {multiSelectItems &&\n        multiSelectItems.map((multiSelect) => (\n          <MultiSelect\n            key={multiSelect.id}\n            id={multiSelect.id}\n            labelText={multiSelect.name}\n            type=\"dialog\"\n            items={multiSelect.items}\n            selectedItems={selectedItems}\n            onChange={(e) => {\n              onChange(e.target.id, multiSelect.id);\n            }}\n            onMixedStateChange={(e) =>\n              onMixedStateChange(e.target.id, multiSelect.id, multiSelect.items)\n            }\n            onClear={() => {\n              onClear(multiSelect.id);\n            }}\n            onApply={() => {}}\n          />\n        ))}\n    </MultiSelectGroup>\n  );\n}\n`}\n  language=\"jsx\"\n/>\n\n## setSelectedItems\n\nThe data structure to pass the setSelectedItems function in order to set a inital state:\n\n<Source\n  code={`\n// The selectedItems structur for one MultiSelect\nconst initialSelectedItems = {\n  colors: {\n    items: [\"red\"],\n  },\n};\n`}\n  language=\"jsx\"\n/>\n\n<Source\n  code={`\n// The selectedItems structur for setting state of multiple MultiSelects\nconst initialSelectedItems = {\n  colors: {\n    items: [\"red\"],\n  },\n  pets: {\n    items: [\"corgy\", \"german-sheperd\"],\n  },\n};\n`}\n  language=\"jsx\"\n/>\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  MultiSelect,\n  MultiSelectGroup,\n  useMultiSelect,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function MultiSelectGroupWithHookExample() {\n  const { onChange, onMixedStateChange, onClear, selectedItems, setSelectedItems } =\n    useMultiSelect();\n  React.useEffect(() => {\n    setSelectedItems(initialSelectedItems)\n  }, [])\n  // ...\n  return (\n    <MultiSelectGroup id=\"multiselect-group\" labelText=\"MultiSelect Group\">\n      {multiSelectItems &&\n        multiSelectItems.map((multiSelect) => (\n          <MultiSelect\n            key={multiSelect.id}\n            id={multiSelect.id}\n            labelText={multiSelect.name}\n            type=\"dialog\"\n            items={multiSelect.items}\n            selectedItems={selectedItems}\n            onChange={(e) => {\n              onChange(e.target.id, multiSelect.id);\n            }}\n            onMixedStateChange={(e) =>\n              onMixedStateChange(e.target.id, multiSelect.id, multiSelect.items)\n            }\n            onClear={() => {\n              onClear(multiSelect.id);\n            }}\n            onApply={() => {}}\n          />\n        ))}\n    </MultiSelectGroup>\n  );\n}\n`}\n  language=\"jsx\"\n/>\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Source","MDXContent","MDXLayout"],"mappings":"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"}