{"version":3,"file":"Text-eabcdc0a.js","sources":["../../../src/components/Text/Text.tsx"],"sourcesContent":["import { Text as ChakraText, chakra, useStyleConfig } from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nexport const textSizesArray = [\"default\", \"caption\", \"tag\", \"mini\"] as const;\nexport type TextSizes = typeof textSizesArray[number];\n\nexport interface TextProps {\n  /** Additional class name to render in the `Text` component. */\n  className?: string;\n  /** Optional prop used to show bolded text */\n  isBold?: boolean;\n  /** Optional prop used to show itlicized text */\n  isItalic?: boolean;\n  /** Optional prop used to show capitalized text */\n  isCapitalized?: boolean;\n  /** Optional prop used to show upper case text */\n  isUppercase?: boolean;\n  /** Optional prop used to show lower case text */\n  isLowercase?: boolean;\n  /** Optional prop used to remove default spacing */\n  noSpace?: boolean;\n  /** Optional prop to control the text styling */\n  size?: TextSizes;\n}\n\nexport const Text = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<TextProps>>(\n    (props, ref?) => {\n      const {\n        children,\n        className = \"\",\n        isBold,\n        isItalic,\n        isCapitalized,\n        isUppercase,\n        isLowercase,\n        noSpace,\n        size = \"default\",\n        ...rest\n      } = props;\n      const styles = useStyleConfig(\"Text\", {\n        variant: size,\n        isBold,\n        isItalic,\n        isCapitalized,\n        isUppercase,\n        isLowercase,\n        noSpace,\n      });\n\n      if (!children) {\n        console.warn(\n          \"NYPL Reservoir Text: No children were passed and the `Text` component \" +\n            \"will not render correctly.\"\n        );\n      }\n\n      let textCase = 0;\n      if (isCapitalized) {\n        textCase++;\n      }\n      if (isUppercase) {\n        textCase++;\n      }\n      if (isLowercase) {\n        textCase++;\n      }\n\n      if (textCase > 1) {\n        console.warn(\n          \"NYPL Reservoir Text: Multiple text case props have been passed \" +\n            \"and the component will not render properly.\"\n        );\n      }\n\n      return (\n        <ChakraText className={className} ref={ref} sx={styles} {...rest}>\n          {children}\n        </ChakraText>\n      );\n    }\n  )\n);\n\nexport default Text;\n"],"names":["textSizesArray","Text","chakra","forwardRef","props","ref","children","className","isBold","isItalic","isCapitalized","isUppercase","isLowercase","noSpace","size","rest","styles","useStyleConfig","textCase","jsx","ChakraText"],"mappings":"gLAGO,MAAAA,EAAA,CAAA,UAAA,UAAA,MAAA,MAAA,EAsBAC,EAAAC,EAAaC,EAAA,WAClB,CAAAC,EAAAC,IAAA,CAEI,KAAA,CAAM,SAAAC,EACJ,UAAAC,EAAA,GACY,OAAAC,EACZ,SAAAC,EACA,cAAAC,EACA,YAAAC,EACA,YAAAC,EACA,QAAAC,EACA,KAAAC,EAAA,UACO,GAAAC,CACJ,EAAAX,EAELY,EAAAC,EAAA,OAAA,CAAsC,QAAAH,EAC3B,OAAAN,EACT,SAAAC,EACA,cAAAC,EACA,YAAAC,EACA,YAAAC,EACA,QAAAC,CACA,CAAA,EAGFP,GACE,QAAA,KAAQ,kGACN,EAKJ,IAAAY,EAAA,EACA,OAAAR,GACEQ,IAEFP,GACEO,IAEFN,GACEM,IAGFA,EAAA,GACE,QAAA,KAAQ,4GACN,EAKJC,EAAAC,EAAA,CAAA,UAAAb,EAAA,IAAAF,EAAA,GAAAW,EAAA,GAAAD,EAAA,SAAAT,CAAA,CAAA,CAGE,CAEJ,CAEJ"}