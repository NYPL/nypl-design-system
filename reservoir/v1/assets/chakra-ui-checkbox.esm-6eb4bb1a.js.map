{"version":3,"file":"chakra-ui-checkbox.esm-6eb4bb1a.js","sources":["../../../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js"],"sourcesContent":["import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nfunction __motion(el) {\n  var m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n} // @future: only call `motion(chakra.svg)` when we drop framer-motion v3 support\n\n\nvar MotionSvg = __motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n"],"names":["_extends","target","i","source","key","useCheckboxGroup","props","_props","defaultValue","valueProp","onChange","isDisabled","isNative","onChangeProp","useCallbackRef","_useControllableState","useControllableState","value","setValue","handleChange","useCallback","eventOrValue","isChecked","isInputEvent","selectedValue","nextValue","addItem","v","getCheckboxProps","_extends2","checkedKey","val","_createContext","createContext","CheckboxGroupProvider","useCheckboxGroupContext","CheckboxGroup","colorScheme","size","variant","children","_useCheckboxGroup","group","React.useMemo","React.createElement","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded$2","__motion","el","m","motion","MotionSvg","chakra","CheckIcon","IndeterminateIcon","CheckboxTransition","_ref","open","AnimatePresence","CheckboxIcon","isIndeterminate","rest","IconEl","_excluded$1","useCheckbox","formControlProps","useFormControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","name","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","omit","onBlurProp","onFocusProp","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","useRef","_useState","useState","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","warn","event","useSafeLayoutEffect","useUpdateEffect","trulyDisabled","onKeyDown","onKeyUp","notInSync","forwardedRef","onPressDown","dataAttr","callAllHandlers","getRootProps","mergeRefs","node","_inputRef$current","focus","getInputProps","visuallyHiddenStyle","getLabelProps","stopEvent","state","_excluded","CheckboxControl","Label","Checkbox","forwardRef","ref","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","callAll","_useCheckbox","iconStyles","clonedIcon","React.cloneElement","cx"],"mappings":"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","x_google_ignoreList":[0]}