import{a as c,j as e,F as y}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as b}from"./index-f2bd0723.js";import{B as h}from"./Button-a3ea41e0.js";import{B as _}from"./ButtonGroup-3ea9dbd7.js";import{u as B}from"./useNYPLBreakpoints-91c0faa1.js";import{f as p}from"./chakra-ui-layout.esm-b2fa9d31.js";import{b as C,M as T,a as x,c as O,d as k,e as N,f as L}from"./chakra-ui-modal.esm-af0e92e4.js";import{u as f}from"./chakra-ui-hooks.esm-02e82f78.js";const M=p(({bodyContent:n,closeButtonLabel:t="Close",headingText:o,id:a,isOpen:s,onClose:r,...l})=>{const d="xl",i="full",{isLargerThanMobile:g}=B();return c(T,{id:a,isOpen:s,onClose:r,scrollBehavior:"inside",size:g?d:i,...l,children:[e(x,{}),c(C,{children:[e(O,{children:o}),e(k,{}),e(N,{children:n}),e(L,{children:e(_,{children:e(h,{id:"modal-close-btn",onClick:r,children:t})})})]})]})}),u=p(b.forwardRef(({buttonText:n,id:t,modalProps:o,...a},s)=>{const{isOpen:r,onOpen:l,onClose:d}=f(),i=()=>{o.onClose&&o.onClose(),d()};return c(y,{children:[e(h,{id:"modal-open-btn",onClick:l,ref:s,children:n}),e(M,{bodyContent:o.bodyContent,closeButtonLabel:o.closeButtonLabel,headingText:o.headingText,id:t,isOpen:r,onClose:i,...a})]})}));function m(){const{isOpen:n,onClose:t,onOpen:o}=f(),a=p(({bodyContent:s,closeButtonLabel:r,headingText:l,id:d,...i})=>e(M,{bodyContent:s,closeButtonLabel:r,headingText:l,id:d,isOpen:n,onClose:t,...i}));return{onClose:t,onOpen:o,Modal:a}}try{m.displayName="useModal",m.__docgenInfo={description:"This hook function can be used to render the `Modal` component with a custom\nopen button(s) and optional custom close button(s). You must render your own\nbutton and pass the appropriate `onOpen` and ` handler for the modal to open.",displayName:"useModal",props:{}}}catch{}try{u.displayName="ModalTrigger",u.__docgenInfo={description:"The `ModalTrigger` component renders a button that you click to open the\ninternal `Modal` component. Note that props to update the internal `Modal`\ncomponent are passed through to the `modalProps` prop.",displayName:"ModalTrigger",props:{id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!1,type:{name:"string"}},buttonText:{defaultValue:null,description:"",name:"buttonText",required:!1,type:{name:"string"}},modalProps:{defaultValue:null,description:"",name:"modalProps",required:!0,type:{name:"BaseModalProps"}}}}}catch{}export{u as M,m as u};
//# sourceMappingURL=Modal-3c14c6e7.js.map
