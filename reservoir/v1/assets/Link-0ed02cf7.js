import{j as l,a as m,F as f}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as N,R as y}from"./index-f2bd0723.js";import{I as L}from"./Icon-6616a4b9.js";import{f as v,u as C,B as p}from"./chakra-ui-layout.esm-b2fa9d31.js";const A=["action","backwards","button","buttonPrimary","buttonSecondary","buttonPill","buttonCallout","buttonNoBrand","buttonDisabled","default","external","forwards"];function P(i,t,e){let r,a,o=null;t==="backwards"?(r="rotate90",a="left"):t==="forwards"&&(r="rotate270",a="right");const s=`${e}-icon`;return o=l(L,{align:a,className:"more-link",iconRotation:r,id:s,name:"arrow",size:"medium"}),m(f,{children:[t==="backwards"&&o,i,t==="forwards"&&o]})}function T(i,t,e){const r=`${t}-icon`;return m(f,{children:[i,m(f,{children:[l(p,{as:"span",__css:e,children:"This link opens in a new window"}),l(L,{align:"right",className:"more-link",id:r,name:"actionLaunch",size:"medium",title:"External link"})]})]})}const _=v(N.forwardRef((i,t)=>{const{children:e,className:r,href:a,id:o,onClick:s,target:h,type:n="default",...k}=i,b={id:o,href:a,...k};let c="link";if(typeof e=="string"&&!a)throw new Error("NYPL Reservoir Link: The `Link` component needs the `href` prop if its child element is a string.");n==="action"||n==="forwards"||n==="backwards"||n==="external"?c="moreLink":n.includes("button")&&(c=n);const d=C("Link",{variant:c}),w=n==="external"?"nofollow noopener noreferrer":null,g=n==="external"?"_blank":h||null,x=(n==="forwards"||n==="backwards")&&P(e,n,o)||n==="external"&&T(e,o,d.srOnly)||e;if(a)return l(p,{as:"a",className:r,ref:t,rel:w,onClick:s,target:g,...b,__css:d,children:x});{if(y.Children.count(e)>1)throw new Error("NYPL Reservoir Link: Please pass only one child into the `Link` component.");const u=e[0]?e[0]:e,E=u.props;return l(p,{as:"span",__css:d,...k,children:y.cloneElement(u,{className:r,...b,...E,ref:t,rel:w,target:g},[u.props.children])})}}));try{_.displayName="Link",_.__docgenInfo={description:"A component that uses an `href` prop or a child anchor element, to create\nan anchor element with added styling and conventions.",displayName:"Link",props:{className:{defaultValue:null,description:"Additional class name to render in the `Link` component.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID used for accessibility purposes.",name:"id",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Any child node passed to the component.",name:"children",required:!0,type:{name:"ReactNode"}},type:{defaultValue:null,description:"Controls the link visuals: action, button, backwards, forwards, or default.",name:"type",required:!1,type:{name:'"button" | "backwards" | "forwards" | "default" | "action" | "buttonPrimary" | "buttonSecondary" | "buttonPill" | "buttonCallout" | "buttonNoBrand" | "buttonDisabled" | "external"'}},href:{defaultValue:null,description:"The `href` attribute for the anchor element.",name:"href",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLAnchorElement | HTMLDivElement, MouseEvent>) => void"}},target:{defaultValue:null,description:"Prop that sets the HTML attribute to target where the link should go.",name:"target",required:!1,type:{name:'"_blank" | "_parent" | "_self" | "_top"'}}}}}catch{}export{_ as L,A as l};
//# sourceMappingURL=Link-0ed02cf7.js.map
