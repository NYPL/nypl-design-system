import{j as e}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as q}from"./index-f2bd0723.js";import{C as w}from"./ComponentWrapper-82a15cf7.js";import{g as I}from"./utils-acca7d12.js";import{C as V}from"./chakra-ui-checkbox.esm-6eb4bb1a.js";import{f as _,u as E}from"./chakra-ui-layout.esm-b2fa9d31.js";import{a as H}from"./Icon-6616a4b9.js";function L(t){const{isIndeterminate:l,isChecked:i,...a}=t;return e(H,{viewBox:"0 0 24 24",...a,children:e("path",{fill:"currentColor",d:"M8.795 15.875l-4.17-4.17-1.42 1.41 5.59 5.59 12-12-1.41-1.41-10.59 10.58z"})})}const h=_(q.forwardRef((t,l)=>{const{className:i,invalidText:a,helperText:o,id:n,isChecked:s,isDisabled:m=!1,isIndeterminate:d=!1,isInvalid:r=!1,isRequired:f=!1,labelText:u,name:b,onChange:x,showHelperInvalidText:y=!0,showLabel:c=!0,value:T,...k}=t,p=E("Checkbox",{}),C=r?a:o,v=d?void 0:e(L,{}),g=I({footnote:C,id:n,labelText:u,name:"Checkbox",showLabel:c});return n||console.warn("NYPL Reservoir Checkbox: This component's required `id` prop was not passed."),e(w,{helperText:o,helperTextStyles:p.helperErrorText,id:n,invalidText:a,isInvalid:r,showHelperInvalidText:y,...k,children:e(V,{className:i,icon:v,id:n,isDisabled:m,isIndeterminate:d,isInvalid:r,isRequired:f,name:b||"default",ref:l,value:T,...s!==void 0?{isChecked:s,onChange:x}:{defaultIsChecked:!1},alignItems:"flex-start",__css:p,...g,children:c&&u})})}));try{h.displayName="Checkbox",h.__docgenInfo={description:"",displayName:"Checkbox",props:{className:{defaultValue:null,description:"className you can add in addition to 'input'",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes",name:"id",required:!0,type:{name:"string"}},name:{defaultValue:null,description:`The name prop indicates into which group of checkboxes this checkbox
belongs. If none is specified, 'default' will be used`,name:"name",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Adds the 'disabled' and `aria-disabled` attributes to the input when true.\nThis also makes the text italic and color scheme gray.",name:"isDisabled",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"Optional string to populate the HelperErrorText for standard state",name:"helperText",required:!1,type:{name:"HelperErrorTextType"}},showHelperInvalidText:{defaultValue:null,description:"Offers the ability to hide the helper/invalid text.",name:"showHelperInvalidText",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"The action to perform on the `<input>`'s onChange function",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},invalidText:{defaultValue:null,description:"Optional string to populate the HelperErrorText for the error state\nwhen `isInvalid` is true.",name:"invalidText",required:!1,type:{name:"HelperErrorTextType"}},isInvalid:{defaultValue:null,description:`Adds the 'aria-invalid' attribute to the input when true. This also makes
the color theme "NYPL error" red for the button and text.`,name:"isInvalid",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Adds the 'required' attribute to the input when true.",name:"isRequired",required:!1,type:{name:"boolean"}},labelText:{defaultValue:null,description:'The checkbox\'s label. This will serve as the text content for a `<label>`\nelement if `showlabel` is true, or an "aria-label" if `showLabel` is false.',name:"labelText",required:!0,type:{name:"string | Element"}},value:{defaultValue:null,description:"Populates the value of the input",name:"value",required:!1,type:{name:"string"}},showLabel:{defaultValue:null,description:"Offers the ability to show the checkbox's label onscreen or hide it.\nRefer to the `labelText` property for more information.",name:"showLabel",required:!1,type:{name:"boolean"}},isChecked:{defaultValue:null,description:`When using the Checkbox as a "controlled" form element, you can specify
the Checkbox's checked state using this prop.
Learn more about controlled and uncontrolled form fields:
https://goshakkk.name/controlled-vs-uncontrolled-inputs-react/`,name:"isChecked",required:!1,type:{name:"boolean"}},isIndeterminate:{defaultValue:null,description:"Adds the indeterminate state to the `Checkbox`.",name:"isIndeterminate",required:!1,type:{name:"boolean"}}}}}catch{}export{h as C};
//# sourceMappingURL=Checkbox-ac4cd2b8.js.map
