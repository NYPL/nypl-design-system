{"version":3,"file":"SupportingDarkMode-4c4367bb.js","sources":["../../../src/components/DevelopmentGuide/SupportingDarkMode.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\nimport Link from \"../Link/Link\";\n\n<Meta title=\"Development Guide/Supporting Dark Mode\" />\n\n# Supporting Dark Mode\n\n## Table of Contents\n\n- {<Link href=\"#overview\" target=\"_self\">Overview</Link>}\n- {<Link href=\"#accessibility\" target=\"_self\">Accessibility</Link>}\n- {<Link href=\"#reservoir-default-configuration\" target=\"_self\">Reservoir Default Configuration</Link>}\n- {<Link href=\"#consuming-app-configuration\" target=\"_self\">Consuming App Configuration</Link>}\n- {<Link href=\"#hooks\" target=\"_self\">Hooks</Link>}\n- {<Link href=\"#using-custom-dark-mode-styles\" target=\"_self\">Using Custom Dark Mode Styles</Link>}\n- {<Link href=\"#color-mapping\" target=\"_self\">Color Mapping</Link>}\n\n## Overview\n\nOffering dark mode color styles on a website might be considered a hip feature\nor a sign of the times, but it is also a way to improve accessibility. Dark\nmode can be beneficial for all users, making text easier to read for longer\nperiods of time and reducing the likelihood of eye strain or fatigue, but it\ncan be especially beneficial for users with low vision and light sensitivity.\n\nWith these accessibility benefits in mind, NYPL is aiming to implement dark\nmode on its websites over the coming months and years. To get this migration\nstarted, the Reservoir Design System has added dark color mode support to all\ncomponents in the React Component Library. As NYPL projects adopt the Reservoir\nDesign System, and when portfolio groups are fully prepared and time allows,\nengineers should utilize this documentation to configure React web apps to\nenable and implement dark color mode styles.\n\n## Accessibility\n\nAll DS components support light and dark color mode and have gone through color\ncontrast accessibility review.\n\nResources:\n\n- [WebAIM Contrast Checker](https://webaim.org/resources/contrastchecker/)\n- [W3 WAI Colors with Good Contrast](https://www.w3.org/WAI/perspective-videos/contrast/)\n- [The A11y Project - Operating System and Browser Accessibility Display Modes](https://www.a11yproject.com/posts/operating-system-and-browser-accessibility-display-modes/)\n\n## Reservoir Default Configuration\n\nBy default, the Reservoir Design System (DS) is configured to ignore a user's\nsystem color mode and to render the DS components using light color mode styles.\nThis means that users will see the light mode styles, regardless of their\nsystem's settings.\n\nThis configuration is controlled with the `useSystemColorMode` and\n`initialColorMode` global attributes found in\n[src/theme/index.ts](https://github.com/NYPL/nypl-design-system/blob/b52c9a5fea6b5eed929119e9dd5ed155044e44c7/src/theme/index.ts#L161)\n(lines 161 - 166) in the Reservoir repo. They are set to `false` and `\"light\"`\nrespectively.\n\nIf desired, the `initialColorMode` can be overridden by the consuming\napplication. To do this, please refer to the <Link href=\"#consuming-app-configuration\" target=\"_self\">Consuming App\nConfiguration</Link> section.\n\n## Consuming App Configuration\n\nTo enable and control the color mode styles of the Reservoir Design System (DS)\ncomponents and to control the color mode for the entire app, consuming\napplications must add the `ColorModeScript` component, which helps keep track of\nand set the current color mode.\n\nFor proper configuration, the `initialColorMode` prop must be passed to the\n`ColorModeScript` component. With this prop, consuming apps can set the value for\nthe preferred color mode in the consuming app.\n\n**Color Mode Options**\n\nThe `initialColorMode` prop can be set to one of three values: `\"light\"`, `\"dark\"`, or\n`\"system\"`.\n\n- light: DS components will initially render using light color mode styles.\n- dark: DS components will initially render using dark color mode styles.\n- system: DS components will initially render using color mode styles based on a\n  user's system, or OS, color settings. If the system color mode cannot be\n  resolved, `\"light\"` will be used as the fallback value.\n\n**NOTE:** Although the `initialColorMode` prop can be set to the `\"light\"` value,\nwhich would mirror the default configuration from the DS and render the DS\ncomponents using the light mode color style, it is more likely that consuming\napps will use the `\"dark\"` or `\"system\"` values in order to enable the dark mode\ncolor styles.\n\n### Required Setup\n\nThe `ColorModeScript` component with the `initialColorMode` prop should be added\nto the top level of the consuming application, before all content. More often\nthan not, the `ColorModeScript` component will be added alongside the\n`DSProvider` component ([see the\ndocs](https://github.com/NYPL/nypl-design-system#using-the-design-system-in-your-product)).\n\n<Source\n  code={`\nimport {\n  ColorModeScript,\n  DSProvider\n} from \"@nypl/design-system-react-components\";\nimport * as ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n// ...\nconst rootElement = document.getElementById(\"root\");\nReactDOM.createRoot(rootElement).render(\n  <>\n    <ColorModeScript initialColorMode={\"light\" | \"dark\" | \"system\"} />\n    <DSProvider>\n      <App />\n    <DSProvider>\n  </>,\n);\n`}\n  language=\"tsx\"\n/>\n\n### Optional Configuration\n\n**For SSR Frameworks (ex. Next.js)**\n\nFor Next.js (or another SSR framework) apps that are using a toggle to control\nthe color mode, it is recommended to also add the `colorModeManager` prop in the\n`DSProvider` component to aid with proper color rendering. When `colorModeManager`\nis implemented, the app will load the `initialColorMode` before rendering the\ncomponents, avoiding the flashing that can happen if the color mode is set\nduring hydration.\n\nThe example below provides all required code necessary to enable this\nfunctionality. The `cookieStorageManager` and `localStorageManager` functions can\nbe used to help to store the `chakra-ui-color-mode` value in the browser, but, by\ndefault, the necessary variables will be stored in `localStorage` unless otherwise\nspecified. The `getServerSideProps` function runs before the page loads, ensuring\nthe cookie is never undefined.\n\n<Source\n  code={`\n// pages/_app.tsx\nimport {\n  cookieStorageManager,\n  DSProvider,\n  localStorageManager,\n  useColorModeValue,\n} from \"@nypl/design-system-react-components\";\nimport type { AppProps } from \"next/app\";\nfunction MyApp({ Component, pageProps }: AppProps) {\n  // Decides where the chakra-ui-color-mode value should be stored in the browser.\n  const colorModeManager =\n  typeof pageProps.cookies === \"string\"\n  ? cookieStorageManager(pageProps.cookies)\n  : localStorageManager;\n  // ...\n  return (\n    <>\n      <ColorModeScript initialColorMode=\"system\" />\n      <DSProvider colorModeManager={colorModeManager}>\n        <Component {...pageProps} />\n      </DSProvider>\n    </>\n  );\n}\n// ...\nexport function getServerSideProps({ req }: any) {\n  return {\n    props: {\n      // First time users will not have any cookies and you may not return\n      // undefined here, hence \\`??\\` is necessary.\n      cookies: req.headers.cookie ?? \"\",\n    },\n  };\n}\n`}\n  language=\"tsx\"\n/>\n\n## Hooks\n\nTo manage color mode in your application, the Reservoir Design System (DS)\nexposes Chakra's `useColorMode` and `useColorModeValue` hooks.\n\n### useColorMode\n\n`useColorMode` gives you access to the current color mode, and a function to\ntoggle the color mode.\n\n<Source\n  code={`\nimport { Toggle, useColorMode } from \"@nypl/design-system-react-components\";\n// ...\nfunction Example() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <Toggle\n        id=\"color-mode-toggle\"\n        labelText=\"Toggle Color Mode\"\n        onChange={toggleColorMode}\n      />\n    </header>\n  );\n}\n`}\n  language=\"tsx\"\n/>\n\n### useColorModeValue\n\n`useColorModeValue` is a React hook used to change any value or style based on the\ncolor mode. It takes two arguments: the value in light mode, and the value in\ndark mode.\n\n<Source\n  code={`\nimport {\n  Box,\n  Button,\n  useColorMode,\n  useColorModeValue,\n} from \"@nypl/design-system-react-components\";\n// ...\nfunction StyleColorMode() {\n  const { toggleColorMode } = useColorMode();\n  // if color mode is light, \\`bg\\` is set to \"ui.bg.default\"\n  // if color mode is dark, \\`bg\\` is set to \"dark.ui.bg.default\"\n  const bg = useColorModeValue(\"ui.bg.default\", \"dark.ui.bg.default\");\n  // if color mode is light, \\`color\\` is set to \"ui.typography.heading\"\n  // if color mode is dark, \\`color\\` is set to \"dark.ui.typography.heading\"\n  const color = useColorModeValue(\n    \"ui.typography.heading\",\n    \"dark.ui.typography.heading\"\n  );\n  return (\n    <>\n      <Box mb=\"s\" bg={bg} color={color}>\n        This box's style will change based on the color mode.\n      </Box>\n      <Button onClick={toggleColorMode}>Toggle Color Mode</Button>\n    </>\n  );\n}\n`}\n  language=\"tsx\"\n/>\n\n### React Syntax Reminder\n\nThe `useColorMode` and `useColorModeValue` hooks only work if called inside the\n`DSProvider` wrapper. Additionally, like all hooks, they must be called from\nwithin a React function component or a custom React Hook function.\n\n## Using Custom Dark Mode Styles\n\nIf all NYPL consuming apps were composed using only Reservoir Design System (DS)\ncomponents, this section of the documentation would not be necessary - all\nelements would support dark color mode styles out of the box and no further\nconfiguration would be needed. Nevertheless, this generally will not be the\ncase. Therefore, in situations where custom components or custom UI elements\nare necessary, dark mode styles will need to be added for these elements in the\nconsuming app in addition to the default \"light mode\" styles.\n\n### Setting Styles with Javascript (recommended)\n\nAs an organization, NYPL is trending away from using traditional CSS and CSS\npreprocessors like SCSS in React applications. In their place, CSS-in-JS is\nbeing used to leverage the style patterns and <Link href=\"#design-tokens\" target=\"_self\">design tokens</Link>\navailable in the DS and Chakra UI.\n\n#### Benefits\n\nOutside of simply consolidating code into one location, using CSS-in-JS opens\nthe door to many ease-of-use benefits when it comes to applying styles to UI\nelements, such as <Link href=\"#chakra-style-props\" target=\"_self\">Chakra style props</Link>, <Link href=\"#design-tokens\" target=\"_self\">design tokens</Link>,\nand <Link href=\"#responsive-styles\" target=\"_self\">responsive styles</Link>.\n\n##### Chakra Style Props\n\nThe [style props](https://chakra-ui.com/docs/styled-system/style-props)\nestablished by Charka have been exposed and made available through the DS. These\nstyle props, along with a wide array of [pseudo\nselectors](https://chakra-ui.com/docs/styled-system/style-props#pseudo), provide\nhelpful and time-saving shorthand to style components. Examples include the `bg`\nprop in place of the `background` CSS attribute and the `px` prop to add both\nthe `padding-left` and `padding-right` CSS attributes to an element.\n\n##### Design Tokens\n\nDesign tokens are available for many style attribute values, including, but not\nlimited to, colors, font sizes, and spacing. These semantically-named design\ntokens allow you to logically apply styles without having to know the actual\nstyle values. For example, in the code snippets found later in this section, the\ncolor values `ui.bg.default` and `dark.ui.bg.default` are color design tokens\nand `inset.default` is a spacing design token. For a full reference chart\nshowing all available design tokens, refer to the [Design\nTokens](../?path=/docs/development-guide-design-tokens--docs) page in Reservoir\nStorybook.\n\n##### Responsive Styles\n\nInstead of manually adding `@media` queries and nested styles, CSS-in-JS allows\nyou to access Chakra style patterns which provide object and array values to add\nmobile-first [responsive\nstyles](https://chakra-ui.com/docs/styled-system/responsive-styles).\n\n#### Preparing Your Components\n\nTo use CSS-in-JS effectively, custom components and custom UI elements should be\ncomposed using <Link href=\"#using-ds-components\" target=\"_self\">DS components</Link> or Chakra <Link href=\"#using-structural-ui-components\" target=\"_self\">Structural UI components</Link>.\n\n##### Using DS Components\n\nIf a DS component can be used to take the place of a custom components or custom\nUI elements, developers should aim to make the necessary changes to do so. Out\nof the box, the DS components will not require any additional configuration for\ndark color mode support.\n\n##### Using Structural UI Components\n\nIf an app-specific component cannot be directly replaced with a DS component,\nconsuming apps should try to rebuild it using basic structural components\navailable in the DS. If using this approach, two of the most important\ncomponents to note are `Box` ([see the docs](../?path=/docs/components-chakra-exports-layout-box--docs)),\nthe component on top of which many DS and all other Chakra UI components are\nbuilt, and\n`Stack` ([see the\ndocs](../?path=/docs/components-chakra-exports-layout-stack-hstack-vstack--docs)),\na layout component used to group elements together and apply a space between\nthem.\n\n#### Applying Styles\n\nFor app-specific components, dark mode styles should be applied using CSS-in-JS.\nThere are two methods to do this.\n\n##### Method 1 (recommended)\n\nTo add styles to DS and Chakra UI components, pass a style object to the `sx`\nprop. Within the style object, use the `_dark` pseudo selector to add the styles\nthat should be used when dark mode is active.\n\n<Source\n  code={`\nconst customStyles = {\n  bg: \"ui.bg.default\",\n  color: \"ui.typography.heading\",\n  fontWeight: \"medium\",\n  p: \"inset.default\",\n  _hover: {\n    bg: \"ui.bg.hover\",\n  },\n  _dark: {\n    bg: \"dark.ui.bg.default\",\n    color: \"dark.ui.typography.heading\",\n    _hover: {\n      bg: \"dark.ui.bg.hover\",\n    },\n  },\n};\n// ...\n<Box sx={customStyles}>Click Me</Button>\n`}\n  language=\"tsx\"\n/>\n\n##### Method 2\n\nTo add styles to app-specific components and native HTML elements, you may use\nthe `useColorModeValue` hook (<Link href=\"#usecolormode\" target=\"_self\">see the docs</Link>)\nto specify light and dark mode style values for specific style attributes.\n\nPlease note that when passing style attributes to custom components or native\nHTML elements, you must use the React `style` prop rather than the Chakra `sx`\nprop or the <Link href=\"#chakra-style-props\" target=\"_self\">Chakra style props</Link>.\nAdditionally, javascript <Link href=\"#design-tokens\" target=\"_self\">design tokens</Link>\ncannot be used as they are not compatible with the React style prop, so CSS\ndesign tokens or native CSS attribute values must be used.\n\n<Source\n  code={`\nimport { useColorModeValue } from \"@nypl/design-system-react-components\";\n// Style values assigned to variables using CSS design tokens\nconst bg = useColorModeValue(\n  \"var(--nypl-colors-ui-bg-default)\",\n  \"var(--nypl-colors-dark-ui-bg-default)\"\n);\nconst color = useColorModeValue(\n  \"var(--nypl-colors-ui-typography-heading)\",\n  \"var(--nypl-colors-dark-ui-typography-heading)\"\n);\nconst fontWeight = \"var(--nypl-fontWeights-medium)\";\nconst padding = \"var(--nypl-space-inset-default)\";\nconst stylesUsingVariables = {\n  backgroundColor: bg,\n  color: color,\n  fontWeight: fontWeight,\n  padding: padding,\n};\n// ...\n<div style={stylesUsingVariables} />;\n`}\n  language=\"tsx\"\n/>\n\n<Source\n  code={`\n// Style values assigned directly using native CSS attribute values\nconst stylesDirectlyAssigned = {\n  backgroundColor: useColorModeValue(\"#5F5F5F\", \"#252525\"),\n  color: useColorModeValue(\"#000000\", \"#E9E9E9\"),\n  fontWeight: 500,\n  padding: \"1rem\",\n};\n// ...\n<div style={stylesDirectlyAssigned} />;\n`}\n  language=\"tsx\"\n/>\n\nBelow is an example using a custom component. Please note that consuming apps\nare responsible for handling how styles are propagated and applied within custom\ncomponents.\n\n<Source\n  code={`\n// Styles for a custom component\nconst stylesForCustomComponent = {\n  backgroundColor: useColorModeValue(\"#F5F5F5\", \"#252525\"),\n  color: useColorModeValue(\"#000000\", \"#BDBDBD\"),\n  fontWeight: 500,\n  padding: \"1rem\",\n};\n// ...\n<CustomComponent style={stylesForCustomComponent} />;\n`}\n  language=\"tsx\"\n/>\n\n### CSS and CSS Precompilers\n\nApplying dark mode styles using Javascript is the recommended method, but using\nCSS or a CSS precompiler like SCSS is still an option for custom components,\ncustom UI elements and native HTML elements. For those elements, dark mode\nstyles can be added with the prefers-color-scheme media query and the Reservoir\nCSS vars ([Colors Storybook page](../?path=/docs/style-guide-colors--docs)).\n\nThe following example is only applicable if a consuming application is using\nsystem color mode without a toggle. In this configuration, please note that the\norder in which the styles are written into the stylesheet is important. The\ndefault styles should be written first and the dark mode style in the\n`prefers-color-scheme` media query must be written after the default styles.\n\n<Source\n  code={`\n// styles.scss\n// DEFAULT STYLES (the shared and light mode color styles)\n.container {\n  background: var(--nypl-colors-ui-bg-default);\n  border: 1px solid var(--nypl-colors-ui-border-default);\n  color: var(--nypl-colors-ui-typography-body);\n  padding: 1rem;\n}\n// DARK MODE STYLES (to override the light mode color styles)\n@media (prefers-color-scheme: dark) {\n  .container {\n    background: var(--nypl-colors-dark-ui-bg-default);\n    color: var(--nypl-colors-dark-ui-typography-body);\n  }\n}\n`}\n  language=\"scss\"\n/>\n\nIf the consuming application uses a toggle, you can use the `useColorMode` hook to\nretrieve the current `colorMode` and add `\"light\"` or `\"dark\"` classes to applicable\ncomponents.\n\n<Source\n  code={`\n// Component file\nconst { colorMode } = useColorMode(); // returns \"light\" or \"dark\"\n<div className={\\`\\${colorMode} container\\`}>a container</div>;\n`}\n  language=\"tsx\"\n/>\n\n<Source\n  code={`\n// styles.scss\n.container {\n  // shared styles\n}\n.dark.container {\n  background: var(--nypl-colors-dark-ui-bg-default);\n  color: var(--nypl-colors-dark-ui-typography-body);\n}\n.light.container {\n  background: var(--nypl-colors-ui-bg-default);\n  color: var(--nypl-colors-ui-typography-body);\n}\n`}\n  language=\"css\"\n/>\n\n## Color Mapping\n\nIf mockups have not been specifically created to show the dark mode version of a\npage design, then the colors used for the default view (light mode) can be\nmapped to corresponding dark mode colors. Use the tables below to find the\nnecessary colors.\n\nFor reference, all Reservoir Design System dark mode colors can be found in the\nStorybook documentation under [Colors](../?path=/docs/style-guide-colors--docs)\nand in the [Visual Design\nLibrary](https://www.figma.com/file/qShodlfNCJHb8n03IFyApM/Main?node-id=61991%3A45315).\n\n### Grayscale Colors\n\nGrayscale colors (i.e. black, white and all grays in between) are utility colors\nand in many cases they are used as the basis for the semantic colors. As\nutility colors, the light/dark color map does not apply. If any application\nlevel style values have been written using the grayscale color design tokens,\nthe values should be updated to use the applicable semantic color design tokens.\nFor more details, please refer to the <Link href=\"#legacy-color-conversions\" target=\"_self\">Legacy Color Conversions</Link> section.\n\n### Legacy Color Conversions\n\nIn older designs and consuming apps, grayscale colors may have been used in the\nCSS styles of some application level UI elements, including color styles for\nbackground, border, text and disabled states. Going forward, style attributes\ncolor design token. Once styles have been updated to use proper semantic color\nthat use grayscale colors should be updated to use the corresponding semantic\ndesign tokens, the color mapping for dark color mode will be apparent.\n\nUse the following tables to update legacy color values.\n\n#### Background Colors\n\n| Legacy Grayscale Color | Current Semantic Color |\n| ---------------------- | ---------------------- |\n| ui.gray.x-light-cool   | ui.bg.default          |\n| ui.gray.light-cool     | ui.bg.hover            |\n| ui.gray.medium         | ui.bg.active           |\n\n#### Border Colors\n\n| Legacy Grayscale Color | Current Semantic Color |\n| ---------------------- | ---------------------- |\n| ui.gray.medium         | ui.border.default      |\n| ui.gray.dark           | ui.border.hover        |\n\n#### Heading Colors\n\n| Legacy Grayscale Color | Current Semantic Color        |\n| ---------------------- | ----------------------------- |\n| ui.white               | ui.typography.heading.inverse |\n| ui.black               | ui.typography.heading         |\n\n#### Text Colors\n\n| Legacy Grayscale Color | Current Semantic Color     |\n| ---------------------- | -------------------------- |\n| ui.white               | ui.typography.body.inverse |\n| ui.black               | ui.typography.body         |\n\n#### Disabled State Colors\n\n| Legacy Grayscale Color | Current Semantic Color |\n| ---------------------- | ---------------------- |\n| ui.gray.xx-light-cool  | ui.disabled.secondary  |\n| ui.gray.light-cool     | ui.disabled.primary    |\n\n### Light/Dark Color Map\n\nEach brand color, section color and semantic color design token in the light\ncolor mode palette has a corresponding design token in the dark color mode\npalette. Please refer to the table below.\n\n| Light Color Palette           | Dark Color Palette                 |\n| ----------------------------- | ---------------------------------- |\n| ui.disabled.primary           | dark.ui.disabled.primary           |\n| ui.disabled.secondary         | dark.ui.disabled.secondary         |\n| ui.error.primary              | dark.ui.error.primary              |\n| ui.error.secondary            | dark.ui.error.secondary            |\n| ui.focus                      | dark.ui.focus                      |\n| ui.link.primary               | dark.ui.link.primary               |\n| ui.link.secondary             | dark.ui.link.secondary             |\n| ui.status.primary             | dark.ui.status.primary             |\n| ui.status.secondary           | dark.ui.status.secondary           |\n| ui.success.primary            | dark.ui.success.primary            |\n| ui.success.secondary          | dark.ui.success.secondary          |\n| ui.test                       | dark.ui.test                       |\n| ui.warning.primary            | dark.ui.warning.primary            |\n| ui.warning.secondary          | dark.ui.warning.secondary          |\n| ui.bg.default                 | dark.ui.bg.default                 |\n| ui.bg.hover                   | dark.ui.bg.hover                   |\n| ui.bg.active                  | dark.ui.bg.active                  |\n| ui.border.default             | dark.ui.border.default             |\n| ui.border.hover               | dark.ui.border.hover               |\n| ui.typography.body            | dark.ui.typography.body            |\n| ui.typography.body.inverse    | dark.ui.typography.body.inverse    |\n| ui.typography.heading         | dark.ui.typography.heading         |\n| ui.typography.heading.inverse | dark.ui.typography.heading.inverse |\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Link","Source","MDXContent","MDXLayout"],"mappings":"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"}