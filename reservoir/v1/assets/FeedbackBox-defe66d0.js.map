{"version":3,"file":"FeedbackBox-defe66d0.js","sources":["../../../src/components/FeedbackBox/FeedbackBox.mdx"],"sourcesContent":["import { ArgTypes, Canvas, Description, Meta, Source } from \"@storybook/blocks\";\n\nimport * as FeedbackBoxStories from \"./FeedbackBox.stories\";\nimport Link from \"../Link/Link\";\n\n<Meta of={FeedbackBoxStories} />\n\n# FeedbackBox\n\n| Component Version | DS Version |\n| ----------------- | ---------- |\n| Added             | `1.3.0`    |\n| Latest            | `1.5.3`    |\n\n## Table of Contents\n\n- {<Link href=\"#overview\" target=\"_self\">Overview</Link>}\n- {<Link href=\"#component-props\" target=\"_self\">Component Props</Link>}\n- {<Link href=\"#accessibility\" target=\"_self\">Accessibility</Link>}\n- {<Link href=\"#notification-text\" target=\"_self\">Notification Text</Link>}\n- {<Link href=\"#form-fields\" target=\"_self\">Form Fields</Link>}\n- {<Link href=\"#feedbackbox-screens\" target=\"_self\">FeedbackBox Screens</Link>}\n- {<Link href=\"#form-submission-data\" target=\"_self\">Form Submission Data</Link>}\n- {<Link href=\"#programmatically-open\" target=\"_self\">Programmatically Open</Link>}\n\n## Overview\n\n<Description of={FeedbackBoxStories} />\n\nAn NYPL privacy policy link will render within every screen of the FeedbackBox\n(\"form\", \"confirmation\", and \"error\" ), and the link will open in a new tab.\n\n**Note**: For the purposes of Storybook, only one (1) `FeedbackBox` component\nexample is rendered on the bottom right of this page. The `FeedbackBox` example\nbelow alternately renders the \"confirmation\" and \"error\" screens on each form\nsubmission. This is just to demonstrate the different states of the component.\nIn practice, the consuming app is responsible for handling the form submission.\n\n## Component Props\n\n<Canvas of={FeedbackBoxStories.WithControls} />\n\n<ArgTypes of={FeedbackBoxStories.WithControls} />\n\n## Accessibility\n\nThe `FeedbackBox` component is a complex component built from various Reservoir\nDS and Chakra components. The two main components are the DS `Button` component\nused to open Chakra's `Drawer` component.\n\nWhen the primary button is clicked, the dialog opens and focus is set to the\nfirst focusable element which is the \"close\" button that contains minus icon in\nthe header of the dialog. While opened, focus is trapped within the dialog until\nit is closed either by clicking on the \"close\" or \"Cancel\" buttons, pressing the\n\"Escape\" key, or by clicking outside of the dialog. When the `FeedbackBox`\ncomponent is closed, focus is set back to the primary button that opened the\ndialog.\n\nThe markup of the `FeedbackBox` structurally matches the modal dialog pattern\nthat is implemented by Chakra's `Modal` and `Drawer` components. The container\nhas `role=”dialog”`, `aria-modal=”true”`, `tabindex={0}`, `aria-labelledby` that\nreferences the title within the dialog, and `aria-describedby` that references a\ndescriptive piece of text within the dialog.\n\nWithin the `FeedbackBox` component, the radio input field is created from the DS\n`RadioGroup` and `Radio` components, and input fields are created from the DS\n`TextInput` component. Each of these components has their own accessibility\nfeatures documented in their respective Storybook pages.\n\nWhen the form is submitted, focus is set to the confirmation message or the\nerror message if an error occurs.\n\nWhereas the `FeedbackBox`'s primary button element is placed within the DOM\nstructure where it is rendered, the dialog DOM structure is appended to the end\nof the DOM tree and it is done by Chakra.\n\nResources:\n\n- [MDN ARIA: dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/dialog_role)\n- [W3C ARIA role=dialog](https://www.w3.org/WAI/GL/wiki/Using_ARIA_role%3Ddialog_to_implement_a_modal_dialog_box)\n- [Chakra Modal Accessibility](https://v1.chakra-ui.com/docs/components/overlay/modal#accessibility)\n- [Chakra Drawer Accessibility](https://v1.chakra-ui.com/docs/components/overlay/drawer#accessibility)\n- [DS Button Accessibility](../?path=/docs/components-form-elements-button--docs#accessibility)\n- [DS TextInput Accessibility](../?path=/docs/components-form-elements-textinput--docs#accessibility)\n- [DS Radio Accessibility](../?path=/docs/components-form-elements-radio--docs#accessibility)\n- [DS RadioGroup Accessibility](../?path=/docs/components-form-elements-radiogroup--docs#accessibility)\n\n## Notification Text\n\nThe `notificationText` prop can be used to display important or relevant\ninformation above the form's description text. The text or JSX element passed\nwill be rendered in a Reservoir `Notification` component.\n\n## Form Fields\n\n### Comment Field\n\nBy default, only the required \"Comment\" textarea field will render inside the\n`FeedbackBox` component. There is a 500 character limit for this textarea field.\n\nValidating the \"Comment\" textarea field is the responsibility of the consuming\napplication. If there is an error, the `isInvalidComment` prop can be used to\ntoggle the invalid state.\n\n### Category Field\n\nThe \"Category\" field is an optional form field. This radio group form field\ncontains three values: \"Comment\", \"Correction\", and \"Bug\". The \"Comment\" option\nwill be selected by default. Use the `showCategoryField` prop to toggle the\nvisibility of this field.\n\n### Email Field\n\nThe \"Email\" field is an optional form field. This text input form field is an\nemail field. Use the `showEmailField` prop to toggle the visibility of this\nfield.\n\nValidating the \"Email\" address value is the responsibility of the consuming\napplication. If there is an error, the `isInvalidEmail` prop can be used to\ntoggle the invalid state.\n\n## FeedbackBox Screens\n\nThere are three main screens that will render in the `FeedbackBox` component:\nthe \"form\", \"confirmation\", and \"error\" screens. These are also based on the\n`view` prop available values.\n\nOnce the form is submitted, a three (3) second timer starts. Once the timer is\ncomplete, the \"confirmation\" screen is rendered. This is the default behavior\nwhen no success or failure input is provided by the consuming application. This\nmeans that if there is an error and the consuming application does not tell the\n`FeedbackBox` component that there is an error, the \"confirmation\" screen will\nrender and this is not the correct or expected behavior.\n\n### Form\n\nThis is the initial screen that will render based on the default `view` prop\nvalue of `\"form\"`. The \"form\" screen will render an optional notification,\nan optional description, up to three form fields, the privacy policy link,\nand \"Submit\" and \"Cancel\" buttons.\n\n### Confirmation\n\nThere are two ways to render the \"confirmation\" screen. This screen will render\nautomatically after the form is submitted and the three (3) second timer is\ncomplete. The other option is to pass the `view` prop a value of `\"confirmation\"`\nto render the \"confirmation\" screen. This is useful if the consuming application\nwants to render the \"confirmation\" screen immediately after a successful\nAPI request.\n\nThe \"confirmation\" screen will render a check icon, a basic success message that\nis always the same, an email-specific message when `showEmailField` is set to\n`true`, an additional confirmation message set through the `confirmationText`\nprop, the privacy policy link, and a \"Return to Browsing\" button. When rendered,\nfocus will be set to the confirmation message.\n\nBelow is an example of the \"confirmation\" screen rendered immediately after a\nsuccessful API request. Setting the `view` prop through a `useState` value is\nonly one way to update and pass the \"confirmation\" value to the `FeedbackBox`\ncomponent. Using the `fetch` API is one possible approach.\n\n<Source\n  code={`\nconst [view, setView] = React.useState(\"form\");\nconst apiEndpoint = \"...\";\nconst onSubmit = (values) => {\n  fetch(apiEndpoint, {\n    method: \"POST\",\n    body: JSON.stringify(values),\n  }).then((response) => {\n    if (response.ok) {\n      // Resolve the promise according to your application.\n      // And then call:\n      setView(\"confirmation\");\n    }\n  });\n};\n// ...\n<FeedbackBox\n  onSubmit={onSubmit}\n  showCategoryField\n  showEmailField\n  title=\"Help and Feedback\"\n  view={view}\n/>\n`}\n  language=\"jsx\"\n/>\n\n### Error\n\nThe only way to render the \"error\" screen is by passing the `view` prop a value\nof `\"error\"`. This **should** be used if there is an error with the form\nsubmission API request. This is the responsibility of the consuming application.\n\nThe \"error\" screen will render an error icon, an error message, the privacy\npolicy link, and \"Try Again\" and \"Return to Browsing\" buttons. When rendered,\nfocus will be set to the error message.\n\nBelow is an example of the \"error\" screen rendered immediately after a failed\nAPI request. Setting the `view` prop through a `useState` value is only one way\nto update and pass the \"error\" value to the `FeedbackBox` component. Using the\n`fetch` API is one possible approach.\n\n<Source\n  code={`\nconst [view, setView] = React.useState(\"form\");\nconst apiEndpoint = \"...\";\nconst onSubmit = (values) => {\n  fetch(apiEndpoint, {\n    method: \"POST\",\n    body: JSON.stringify(values),\n  })\n    .then((response) => {\n      if (response.ok) {\n        // ...\n      }\n    })\n    .catch((error) => {\n      // Reject the promise according to your application.\n      // And then call:\n      setView(\"error\");\n    });\n};\n// ...\n<FeedbackBox\n  onSubmit={onSubmit}\n  showCategoryField\n  showEmailField\n  title=\"Help and Feedback\"\n  view={view}\n/>\n`}\n  language=\"jsx\"\n/>\n\n## Form Submission Data\n\nSubmitted form data can be retrieved when the `FeedbackBox` component is\nsubmitted through the required `onSubmit` prop. This prop expects a function and\nit will be called when the form is submitted. Similar to other DS form-components\nthat have function props, the data from the component will be returned in the\nfunction's argument. In this case, it will be a single object.\n\nThe submitted form data will be passed as an object that the parent component\ncan use. The object will always contain the `comment` field. If the \"category\"\nfield is visible through the `showCategoryField` prop, then the object will also\ncontain the `category` field. If the \"email\" field is visible through the\n`showEmailField` prop, then the object will also contain the `email` field.\n\nBelow is an example callback function named `onSubmit` that is passed to the\n`FeedbackBox` component's `onSubmit` prop. The form data will be returned through\nthe function's argument as an object, called `values` in the example below.\n\n<Source\n  code={`\nconst onSubmit = (values) => {\n  console.log(\"Submitted values:\", values);\n  // \"Submitted values:\",\n  // {\n  //   category: \"Bug\",\n  //   comment: \"Typo in the second paragraph, third sentence.\",\n  //   email: \"email@email.com\",\n  // }\n};\n// ...\n<FeedbackBox\n  onSubmit={onSubmit}\n  showCategoryField\n  showEmailField\n  title=\"Help and Feedback\"\n/>\n`}\n  language=\"jsx\"\n/>\n\n### Hidden Field Values\n\nIf more key/value pair data needs to be submitted to the API endpoint along with\nthe form data from the `FeedbackBox` component, the `hiddenFields` prop can be\nused. This prop accepts an object of key/value pairs. The object data will be\nmerged with the submitted form data.\n\n<Source\n  code={`\nconst hiddenFields = {\n  \"hidden-field-1\": \"hidden-field-value-1\",\n  \"hidden-field-2\": \"hidden-field-value-2\",\n};\nconst onSubmit = (values) => {\n  console.log(\"Submitted values:\", values);\n  // {\n  //   category: \"Bug\",\n  //   comment: \"Typo in the second paragraph, third sentence.\",\n  //   email: \"email@email.com\",\n  //   \"hidden-field-1\": \"hidden-field-value-1\",\n  //   \"hidden-field-2\": \"hidden-field-value-2\",\n  // }\n};\n// ...\n<FeedbackBox\n  hiddenFields={hiddenFields}\n  onSubmit={onSubmit}\n  showCategoryField\n  showEmailField\n  title=\"Help and Feedback\"\n/>\n`}\n  language=\"jsx\"\n/>\n\n## Programmatically Open\n\nThe `FeedbackBox` component can be opened programmatically if needed, but this\nrequires an extra step when importing and implementing the component. Instead\nof importing the `FeedbackBox` component directly, use the `useFeedbackBox` hook\nto get the `FeedbackBox` component and helper functions.\n\n<Source\n  code={`\nimport { useFeedbackBox } from \"@nypl/design-system-react-components\";\n`}\n  language=\"jsx\"\n/>\n\nThis hook will return an object with the `FeedbackBox` component, a boolean\nvalue, and two functions.\n\n<Source\n  code={`\nconst { FeedbackBox, isOpen, onClose, onOpen } = useFeedbackBox();\n`}\n  language=\"jsx\"\n/>\n\nThe `FeedbackBox` component is the same as the one imported directly, but now\nthe `isOpen` value and `onClose` and `onOpen` functions are exposed and\navailable to the consuming application. The only function that will be used\ndirectly is the `onOpen` function. Pass `isOpen` and `onClose` to the\n`FeedbackBox`.\n\n<Source\n  code={`\nconst { onOpen, isOpen, onClose, FeedbackBox } = useFeedbackBox();\n// ...\n<FeedbackBox\n  isOpen={isOpen}\n  onClose={onClose}\n  onOpen={onOpen}\n  title=\"Help and Feedback\"\n  {...otherProps}\n/>\n`}\n  language=\"jsx\"\n/>\n\nFinally, the `onOpen` function can be used to programmatically open the `FeedbackBox`\ncomponent through another element or behavior in the consuming app. See the\nexample below that uses a custom `Button` to open the Modal. The existing button\nthat is rendered by the `FeedbackBox` component will still work as expected.\n\n<Source\n  code={`\nimport { useFeedbackBox } from \"@nypl/design-system-react-components\";\n// ...\nconst MyComponent = () => {\n  const { onOpen, isOpen, onClose, FeedbackBox } = useFeedbackBox();\n  // ...\n  return (\n    <>\n      <Button id=\"open-feedback-box\" onClick={onOpen}>\n        Manually Open FeedbackBox\n      </Button>\n      <FeedbackBox\n        isOpen={isOpen}\n        onClose={onClose}\n        onOpen={onOpen}\n        title=\"Help and Feedback\"\n        {...otherProps}\n      />\n    </>\n  );\n}; `}\n  language=\"jsx\"\n/>\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","FeedbackBoxStories","Link","Description","Canvas","FeedbackBoxStories.WithControls","ArgTypes","Source","MDXContent","MDXLayout"],"mappings":"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"}