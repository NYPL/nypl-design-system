import{j as e,a as l,F as x}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as $,R as m}from"./index-f2bd0723.js";import{B as u}from"./Button-a3ea41e0.js";import{B as S}from"./ButtonGroup-3ea9dbd7.js";import{H as q}from"./Heading-2ec2ea62.js";import{M as R}from"./MultiSelect-e1506487.js";import{M as O}from"./MultiSelectGroup-da51fa55.js";import{u as W}from"./useNYPLBreakpoints-91c0faa1.js";import{M as G,a as L,b as N,c as j,d as E,e as H,f as P}from"./chakra-ui-modal.esm-af0e92e4.js";import{f as Y,u as z,d as D,B as M}from"./chakra-ui-layout.esm-b2fa9d31.js";const T=Y($.forwardRef((y,v)=>{const{children:_,id:o,isOpen:A,headingText:b,layout:i="row",onClear:w,onSubmit:c,onToggle:r,onOpen:k,onClose:g,selectedItems:C,showClearAll:F=!1,showSubmitAll:p=!1,filterWidth:B,...I}=y,{isLargerThanMedium:h}=W(),a=h?i:"column",f=h?B||(a==="column"?"full":"default"):"full",n=z("FilterBar",{layout:a,width:f}),V=()=>Object.entries(C).length?`(${Object.entries(C).length})`:"";c&&p===!1&&console.warn("NYPL Reservoir FilterBar: The `onSubmit` handler was set, but the `Apply Filters` button is not visible."),c===void 0&&p===!0&&console.warn("NYPL Reservoir FilterBar: The `Apply Filters` button is rendering but no onSubmit function was passed.");const s=[];return m.Children.map(_,t=>{if(m.isValidElement(t))if(t.type===O){const d={layout:a,multiSelectWidth:f};s.push(m.cloneElement(t,d))}else if(t.type===R){const d={isBlockElement:a==="column",width:f};s.push(m.cloneElement(t,d))}else{console.warn("NYPL Reservoir FilterBar: Invalid child component was passed",t);return}}),e(M,{id:`filter-bar-${o}`,__css:n,ref:v,...I,children:h?l(x,{children:[b&&e(q,{text:b,level:"two",size:"tertiary"}),l(D,{alignItems:i==="row"?"flex-end":null,columnGap:"l",direction:i,rowGap:"s",spacing:"0",wrap:i==="row"?"wrap":null,sx:{"> div":{_notFirst:{mx:"0"}}},children:[s&&s.map((t,d)=>e(M,{children:t},`filter-bar-child-${d}`)),(p||F)&&l(S,{layout:a,__css:n.globalButtonGroup,buttonWidth:i==="column"?"full":"default",children:[p&&e(u,{buttonType:"primary",id:`${o}-submit-all-button`,onClick:c,children:"Apply Filters"}),F&&e(u,{buttonType:"text",id:`${o}-clear-all-button`,onClick:w,textAlign:"center",children:"Clear Filters"})]})]})]}):l(x,{children:[e(u,{id:`filter-bar-${o}-show-filters`,buttonType:"secondary",onClick:()=>{r===void 0?k():r()},children:`Show Filter ${V()}`}),l(G,{isOpen:A,onClose:()=>{r===void 0?g():r()},size:"full",scrollBehavior:"inside",children:[e(L,{}),l(N,{children:[e(j,{sx:n.modalHeader,children:"Filter Criteria"}),e(E,{sx:n.modalCloseButton}),e(H,{sx:n.modalBody,children:s}),e(P,{sx:n.modalFooter,children:l(S,{layout:"row",buttonWidth:"full",children:[e(u,{id:`filter-bar-${o}-see-results`,type:"submit",onClick:()=>{c(),r===void 0?g():r()},children:"Show Results"}),e(u,{id:`filter-bar-${o}-clear`,buttonType:"text",type:"reset",textAlign:"center",onClick:w,children:"Clear Filters"})]})})]})]})]})})}));try{T.displayName="FilterBar",T.__docgenInfo={description:"`FilterBar` is a wrapper component for filter components.\nThe DS considers the following components as filter components:\n- `MultiSelectGroup`\n\nThe wrapped components/ component groups can be displayed in a column or\nin a row layout. `FilterBar` can render additional `Clear All` and a `Apply Filters` buttons. The two\n_optional_ buttons are controlled by the `showClearAll`/ `onClear` or `showSubmitAll`/`onSubmit` props repectively.",displayName:"FilterBar",props:{id:{defaultValue:null,description:"The id of the MultiSelect.",name:"id",required:!1,type:{name:"string"}},layout:{defaultValue:null,description:"Renders the layout of the FilterBar child components in a row or column.",name:"layout",required:!1,type:{name:'"column" | "row"'}},headingText:{defaultValue:null,description:"Heading text of FilterBar",name:"headingText",required:!0,type:{name:"string"}},isOpen:{defaultValue:null,description:"Determines on Mobile if filter modal overlay is open or closed",name:"isOpen",required:!0,type:{name:"boolean"}},selectedItems:{defaultValue:null,description:"The selected items state (items that were checked by user).",name:"selectedItems",required:!0,type:{name:"SelectedItems"}},onClear:{defaultValue:null,description:"User for the global `Clear Filters` button. This button is always shown on mobile, optional on desktop",name:"onClear",required:!0,type:{name:"() => void"}},showClearAll:{defaultValue:null,description:"If passed, the global `Clear Filters` button will render on desktop and tablet",name:"showClearAll",required:!1,type:{name:"boolean"}},filterWidth:{defaultValue:null,description:"Set width of `FilterBar` child components",name:"filterWidth",required:!1,type:{name:"string"}}}}}catch{}export{T as F};
//# sourceMappingURL=FilterBar-491de042.js.map
