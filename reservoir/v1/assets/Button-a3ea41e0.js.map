{"version":3,"file":"Button-a3ea41e0.js","sources":["../../../node_modules/@chakra-ui/spinner/dist/chakra-ui-spinner.esm.js","../../../node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js","../../../src/components/Button/Button.tsx"],"sourcesContent":["import { keyframes, forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport { VisuallyHidden } from '@chakra-ui/visually-hidden';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"];\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nvar Spinner = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Spinner\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$lab = _omitThemingProps.label,\n      label = _omitThemingProps$lab === void 0 ? \"Loading...\" : _omitThemingProps$lab,\n      _omitThemingProps$thi = _omitThemingProps.thickness,\n      thickness = _omitThemingProps$thi === void 0 ? \"2px\" : _omitThemingProps$thi,\n      _omitThemingProps$spe = _omitThemingProps.speed,\n      speed = _omitThemingProps$spe === void 0 ? \"0.45s\" : _omitThemingProps$spe,\n      _omitThemingProps$emp = _omitThemingProps.emptyColor,\n      emptyColor = _omitThemingProps$emp === void 0 ? \"transparent\" : _omitThemingProps$emp,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _className = cx(\"chakra-spinner\", className);\n\n  var spinnerStyles = _extends({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: spin + \" \" + speed + \" linear infinite\"\n  }, styles);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest), label && /*#__PURE__*/React.createElement(VisuallyHidden, null, label));\n});\n\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\";\n}\n\nexport { Spinner };\n","import { useMergeRefs } from '@chakra-ui/hooks';\nimport { forwardRef, chakra, useStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { cx, __DEV__, mergeWith, dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { createContext } from '@chakra-ui/react-utils';\nimport { Spinner } from '@chakra-ui/spinner';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$4 = [\"size\", \"colorScheme\", \"variant\", \"className\", \"spacing\", \"isAttached\", \"isDisabled\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n}),\n    ButtonGroupProvider = _createContext[0],\n    useButtonGroup = _createContext[1];\nvar ButtonGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var size = props.size,\n      colorScheme = props.colorScheme,\n      variant = props.variant,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      isAttached = props.isAttached,\n      isDisabled = props.isDisabled,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$4);\n\n  var _className = cx(\"chakra-button__group\", className);\n\n  var context = React.useMemo(function () {\n    return {\n      size: size,\n      colorScheme: colorScheme,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, colorScheme, variant, isDisabled]);\n  var groupStyles = {\n    display: \"inline-flex\"\n  };\n\n  if (isAttached) {\n    groupStyles = _extends({}, groupStyles, {\n      \"> *:first-of-type:not(:last-of-type)\": {\n        borderEndRadius: 0\n      },\n      \"> *:not(:first-of-type):not(:last-of-type)\": {\n        borderRadius: 0\n      },\n      \"> *:not(:first-of-type):last-of-type\": {\n        borderStartRadius: 0\n      }\n    });\n  } else {\n    groupStyles = _extends({}, groupStyles, {\n      \"& > *:not(style) ~ *:not(style)\": {\n        marginStart: spacing\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className\n  }, rest)));\n});\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\";\n}\n\nvar _excluded$3 = [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"];\nvar ButtonSpinner = function ButtonSpinner(props) {\n  var label = props.label,\n      placement = props.placement,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(Spinner, {\n    color: \"currentColor\",\n    width: \"1em\",\n    height: \"1em\"\n  }) : _props$children,\n      className = props.className,\n      __css = props.__css,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  var _className = cx(\"chakra-button__spinner\", className);\n\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  var spinnerStyles = React.useMemo(function () {\n    var _extends2;\n\n    return _extends((_extends2 = {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\"\n    }, _extends2[marginProp] = label ? spacing : 0, _extends2.fontSize = \"1em\", _extends2.lineHeight = \"normal\", _extends2), __css);\n  }, [__css, label, marginProp, spacing]);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest, {\n    __css: spinnerStyles\n  }), children);\n};\n\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\";\n}\n\nvar _excluded$2 = [\"children\", \"className\"];\nvar ButtonIcon = function ButtonIcon(props) {\n  var children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var _children = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n\n  var _className = cx(\"chakra-button__icon\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest, {\n    className: _className\n  }), _children);\n};\n\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\";\n}\n\nfunction useButtonType(value) {\n  var _React$useState = React.useState(!value),\n      isButton = _React$useState[0],\n      setIsButton = _React$useState[1];\n\n  var refCallback = React.useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isLoading\", \"isActive\", \"isFullWidth\", \"children\", \"leftIcon\", \"rightIcon\", \"loadingText\", \"iconSpacing\", \"type\", \"spinner\", \"spinnerPlacement\", \"className\", \"as\"];\nvar Button = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useButtonGroup();\n  var styles = useStyleConfig(\"Button\", _extends({}, group, props));\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$isD = _omitThemingProps.isDisabled,\n      isDisabled = _omitThemingProps$isD === void 0 ? group == null ? void 0 : group.isDisabled : _omitThemingProps$isD,\n      isLoading = _omitThemingProps.isLoading,\n      isActive = _omitThemingProps.isActive,\n      isFullWidth = _omitThemingProps.isFullWidth,\n      children = _omitThemingProps.children,\n      leftIcon = _omitThemingProps.leftIcon,\n      rightIcon = _omitThemingProps.rightIcon,\n      loadingText = _omitThemingProps.loadingText,\n      _omitThemingProps$ico = _omitThemingProps.iconSpacing,\n      iconSpacing = _omitThemingProps$ico === void 0 ? \"0.5rem\" : _omitThemingProps$ico,\n      type = _omitThemingProps.type,\n      spinner = _omitThemingProps.spinner,\n      _omitThemingProps$spi = _omitThemingProps.spinnerPlacement,\n      spinnerPlacement = _omitThemingProps$spi === void 0 ? \"start\" : _omitThemingProps$spi,\n      className = _omitThemingProps.className,\n      as = _omitThemingProps.as,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded$1);\n  /**\n   * When button is used within ButtonGroup (i.e. flushed with sibling buttons),\n   * it is important to add a `zIndex` on focus.\n   *\n   * So let's read the component styles and then add `zIndex` to it.\n   */\n\n\n  var buttonStyles = React.useMemo(function () {\n    var _styles$_focus;\n\n    var _focus = mergeWith({}, (_styles$_focus = styles == null ? void 0 : styles[\"_focus\"]) != null ? _styles$_focus : {}, {\n      zIndex: 1\n    });\n\n    return _extends({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      width: isFullWidth ? \"100%\" : \"auto\"\n    }, styles, !!group && {\n      _focus: _focus\n    });\n  }, [styles, group, isFullWidth]);\n\n  var _useButtonType = useButtonType(as),\n      _ref = _useButtonType.ref,\n      defaultType = _useButtonType.type;\n\n  var contentProps = {\n    rightIcon: rightIcon,\n    leftIcon: leftIcon,\n    iconSpacing: iconSpacing,\n    children: children\n  };\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as: as,\n    type: type != null ? type : defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className)\n  }, rest), isLoading && spinnerPlacement === \"start\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /*#__PURE__*/React.createElement(chakra.span, {\n    opacity: 0\n  }, /*#__PURE__*/React.createElement(ButtonContent, contentProps)) : /*#__PURE__*/React.createElement(ButtonContent, contentProps), isLoading && spinnerPlacement === \"end\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n\nfunction ButtonContent(props) {\n  var leftIcon = props.leftIcon,\n      rightIcon = props.rightIcon,\n      children = props.children,\n      iconSpacing = props.iconSpacing;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, leftIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\nvar _excluded = [\"icon\", \"children\", \"isRound\", \"aria-label\"];\nvar IconButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var icon = props.icon,\n      children = props.children,\n      isRound = props.isRound,\n      ariaLabel = props[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n  /**\n   * Passing the icon as prop or children should work\n   */\n\n\n  var element = icon || children;\n\n  var _children = /*#__PURE__*/React.isValidElement(element) ? /*#__PURE__*/React.cloneElement(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : undefined,\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, rest), _children);\n});\n\nif (__DEV__) {\n  IconButton.displayName = \"IconButton\";\n}\n\nexport { Button, ButtonGroup, ButtonSpinner, IconButton, useButtonGroup };\n","import {\n  Button as ChakraButton,\n  chakra,\n  useStyleConfig,\n} from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport Icon from \"../Icons/Icon\";\n\nexport const buttonElementTypeArray = [\"submit\", \"button\", \"reset\"] as const;\nexport const buttonSizesArray = [\"small\", \"medium\", \"large\"] as const;\nexport const buttonTypesArray = [\n  \"primary\",\n  \"secondary\",\n  \"text\",\n  \"callout\",\n  \"pill\",\n  \"noBrand\",\n  \"link\",\n] as const;\n\nexport type ButtonElementType = typeof buttonElementTypeArray[number];\nexport type ButtonSizes = typeof buttonSizesArray[number];\nexport type ButtonTypes = typeof buttonTypesArray[number];\n\ninterface ButtonProps {\n  /** The button variation to render based on the `ButtonTypes` type.*/\n  buttonType?: ButtonTypes;\n  /** Additional className to use. */\n  className?: string;\n  /** ID that other components can cross reference for accessibility purposes. */\n  id: string;\n  /** Adds 'disabled' property to the button. */\n  isDisabled?: boolean;\n  /** Trigger the Button's action through the `mouseDown` event handler instead\n   * of `onClick`. `false` by default. */\n  mouseDown?: boolean;\n  /** The action to perform on the `<button>`'s onClick function. */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent) => void;\n  /** The size of the `Button`. */\n  size?: ButtonSizes;\n  /** The HTML button type attribute. */\n  type?: ButtonElementType;\n}\n\n/**\n * Renders a simple `button` element with custom variant styles.\n */\nexport const Button = chakra(\n  forwardRef<HTMLButtonElement, React.PropsWithChildren<ButtonProps>>(\n    (props, ref?) => {\n      const {\n        buttonType = \"primary\",\n        children,\n        className = \"\",\n        id,\n        isDisabled = false,\n        mouseDown = false,\n        onClick,\n        size = \"medium\",\n        type = \"button\",\n        ...rest\n      } = props;\n      const btnCallback = mouseDown ? { onMouseDown: onClick } : { onClick };\n      let childCount = 0;\n      let hasIcon = false;\n      let variant: string | ButtonTypes = buttonType;\n      let styles = {};\n\n      if (!id) {\n        console.warn(\n          \"NYPL Reservoir Button: This component's required `id` prop was not passed.\"\n        );\n      }\n\n      React.Children.map(\n        children as JSX.Element,\n        (child: React.ReactElement) => {\n          childCount++;\n          if (child !== undefined && child !== null) {\n            if (child.type === Icon || child?.props?.mdxType === \"Icon\") {\n              hasIcon = true;\n            }\n          }\n        }\n      );\n\n      if (childCount === 1 && hasIcon) {\n        variant = \"iconOnly\";\n      }\n\n      styles = useStyleConfig(\"Button\", { variant, buttonSize: size });\n\n      return (\n        <ChakraButton\n          className={className}\n          id={id}\n          isDisabled={isDisabled}\n          ref={ref}\n          type={type}\n          {...btnCallback}\n          __css={styles}\n          {...rest}\n        >\n          {children}\n        </ChakraButton>\n      );\n    }\n  ),\n  // Chakra uses different values for its own `size` prop. We\n  // want to override the values and use our own.\n  { shouldForwardProp: () => true }\n);\n\nexport default Button;\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded","spin","keyframes","Spinner","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$lab","label","_omitThemingProps$thi","thickness","_omitThemingProps$spe","speed","_omitThemingProps$emp","emptyColor","className","rest","_className","cx","spinnerStyles","React.createElement","chakra","VisuallyHidden","_createContext","createContext","useButtonGroup","_excluded$3","ButtonSpinner","placement","_props$spacing","spacing","_props$children","children","__css","marginProp","React.useMemo","_extends2","_excluded$2","ButtonIcon","_children","React.isValidElement","React.cloneElement","useButtonType","value","_React$useState","React.useState","isButton","setIsButton","refCallback","React.useCallback","node","type","_excluded$1","Button","group","_omitThemingProps$isD","isDisabled","isLoading","isActive","isFullWidth","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_styles$_focus","_focus","mergeWith","_useButtonType","_ref","defaultType","contentProps","useMergeRefs","dataAttr","ButtonContent","React.Fragment","buttonElementTypeArray","buttonSizesArray","buttonTypesArray","buttonType","id","mouseDown","onClick","size","btnCallback","childCount","hasIcon","variant","React","child","Icon","_a","jsx","ChakraButton"],"mappings":"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","x_google_ignoreList":[0,1]}