{"version":3,"file":"Hero-2040dfe5.js","sources":["../../../src/components/Hero/Hero.tsx"],"sourcesContent":["import { Box, chakra, useMultiStyleConfig } from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport Image, { ComponentImageProps } from \"../Image/Image\";\n\nexport const heroTypesArray = [\n  \"primary\",\n  \"secondary\",\n  \"secondaryBooksAndMore\",\n  \"secondaryLocations\",\n  \"secondaryResearch\",\n  \"secondaryWhatsOn\",\n  \"tertiary\",\n  \"campaign\",\n  \"fiftyFifty\",\n] as const;\nexport type HeroTypes = typeof heroTypesArray[number];\n// Only used for internal purposes.\nexport const heroSecondaryTypes = [\n  \"secondary\",\n  \"secondaryBooksAndMore\",\n  \"secondaryLocations\",\n  \"secondaryResearch\",\n  \"secondaryWhatsOn\",\n];\nexport interface HeroImageProps\n  extends Pick<ComponentImageProps, \"alt\" | \"src\"> {}\nexport interface HeroProps {\n  /** Optional hex color value used to override the default background\n   * color for a given `Hero` variation.\n   * Note: not all `Hero` variations utilize this prop. */\n  backgroundColor?: string;\n  /** Optional path to an image that will be used as a background image for the\n   * `Hero` component.\n   * Note: not all `Hero` variations utilize this prop. */\n  backgroundImageSrc?: string;\n  /** Optional hex color value used to override the default text color for a\n   * given `Hero` variation.\n   * Note: not all `Hero` variations utilize this prop. */\n  foregroundColor?: string;\n  /** Optional heading element. */\n  heading?: JSX.Element;\n  /** Used to control how the `Hero` component will be rendered. */\n  heroType?: HeroTypes;\n  /** Object used to create and render the `Image` component. Note that only\n   * `src` and `alt` are the available attributes to pass. If `imageProps.alt`\n   * is left blank, a warning will be logged to the console and will cause\n   * accessibility issues. For `imageProps.src`, it will only work for the\n   * \"secondary\", \"fiftyFifty\" and \"campaign\" `Hero` types; Note: `imageProps.src`\n   * can only be used in conjunction with `backgroundImageSrc` for the \"campaign\"\n   * `Hero` type. Note: not all `Hero` variations utilize this prop. */\n  imageProps?: HeroImageProps;\n  /** Optional details area that contains location data.\n   * Note: not all `Hero` variations utilize this prop. */\n  locationDetails?: JSX.Element;\n  /** Optional string used for the subheader that displays\n   * underneath the heading element. */\n  subHeaderText?: string | JSX.Element;\n}\n\nexport const Hero = chakra(\n  forwardRef<HTMLDivElement, React.PropsWithChildren<HeroProps>>(\n    (props, ref?) => {\n      const {\n        backgroundColor,\n        backgroundImageSrc,\n        foregroundColor,\n        heading,\n        heroType,\n        imageProps = {\n          alt: \"\",\n          src: \"\",\n        },\n        locationDetails,\n        subHeaderText,\n        ...rest\n      } = props;\n      const styles = useMultiStyleConfig(\"Hero\", { variant: heroType });\n      const headingStyles = styles.heading;\n      // We want to add `Hero`-specific styling to the `Heading` component.\n      const finalHeading =\n        heading && React.cloneElement(heading, { __css: headingStyles });\n      let backgroundImageStyle = {};\n      let contentBoxStyling = {};\n\n      if (imageProps.src && !imageProps.alt) {\n        console.warn(\n          `NYPL Reservoir Hero: The \"imageProps.src\" prop was passed but the \"imageProps.alt\" props was not. This will make the rendered image inaccessible.`\n        );\n      }\n\n      if (heroType === \"primary\") {\n        if (!backgroundImageSrc) {\n          console.warn(\n            \"NYPL Reservoir Hero: It is recommended to use the `backgroundImageSrc` \" +\n              \"prop for the `'primary'` `heroType` variant.\"\n          );\n        }\n        if (imageProps.alt && imageProps.src) {\n          console.warn(\n            \"NYPL Reservoir Hero: The `imageProps.src` and `imageProps.alt` props have been \" +\n              \"passed, but the `'primary'` `heroType` variant will not use it.\"\n          );\n        }\n      } else if (locationDetails) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `locationDetails` prop should only be used \" +\n            \"with the `'primary'` `heroType` variant.\"\n        );\n      }\n      if (heroSecondaryTypes.includes(heroType) && backgroundImageSrc) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `backgroundImageSrc` prop has been passed, \" +\n            \"but the `'secondary'` `heroType` variant will not use it.\"\n        );\n      }\n      if (heroType === \"tertiary\" && (backgroundImageSrc || imageProps.src)) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `'tertiary'` `heroType` variant hero \" +\n            \"will not use any of the image props.\"\n        );\n      }\n      if (heroType === \"campaign\" && (!backgroundImageSrc || !imageProps.src)) {\n        console.warn(\n          \"NYPL Reservoir Hero: It is recommended to use both the \" +\n            \"`backgroundImageSrc` and `imageProps.src` props for the \" +\n            \"`'campaign'` `heroType` variant.\"\n        );\n      }\n      if (heroType === \"fiftyFifty\" && backgroundImageSrc) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `backgroundImageSrc` prop has been passed, \" +\n            \"but the `'fiftyFifty'` `heroType` variant hero will not use it.\"\n        );\n      }\n\n      if (heroType === \"primary\") {\n        backgroundImageStyle = backgroundImageSrc\n          ? { backgroundImage: `url(${backgroundImageSrc})` }\n          : {};\n      } else if (heroType === \"campaign\") {\n        backgroundImageStyle = backgroundImageSrc\n          ? { backgroundImage: `url(${backgroundImageSrc})` }\n          : { backgroundColor };\n      } else if (heroType === \"tertiary\" || heroType === \"fiftyFifty\") {\n        backgroundImageStyle = { backgroundColor };\n      }\n\n      if (!heroSecondaryTypes.includes(heroType)) {\n        contentBoxStyling = {\n          color: foregroundColor,\n          backgroundColor,\n        };\n      } else if (foregroundColor || backgroundColor) {\n        console.warn(\n          \"NYPL Reservoir Hero: The `foregroundColor` and/or `backgroundColor` \" +\n            \"props have been passed, but the `'secondary'` `heroType` \" +\n            \"variant will not use them.\"\n        );\n      }\n\n      const childrenToRender =\n        heroType === \"campaign\" ? (\n          <>\n            <Box\n              __css={{\n                ...styles.imgWrapper,\n                backgroundImage: `url(${imageProps.src})`,\n              }}\n            >\n              <Image alt={imageProps.alt} src={imageProps.src} />\n            </Box>\n            <Box __css={styles.interior}>\n              {finalHeading}\n              {subHeaderText}\n            </Box>\n          </>\n        ) : (\n          <>\n            {heroType !== \"primary\" && heroType !== \"tertiary\" && (\n              <Box\n                __css={{\n                  ...styles.imgWrapper,\n                  backgroundImage:\n                    heroType === \"fiftyFifty\"\n                      ? `url(${imageProps.src})`\n                      : undefined,\n                }}\n              >\n                <Image alt={imageProps.alt} src={imageProps.src} />\n              </Box>\n            )}\n            {finalHeading}\n            {heroType === \"tertiary\" && subHeaderText ? (\n              <p>{subHeaderText}</p>\n            ) : (\n              <Box __css={styles.bodyText}>{subHeaderText}</Box>\n            )}\n          </>\n        );\n\n      return (\n        <Box\n          data-testid=\"hero\"\n          data-responsive-background-image\n          style={backgroundImageStyle}\n          ref={ref}\n          __css={styles}\n          {...rest}\n        >\n          <Box\n            data-testid=\"hero-content\"\n            style={contentBoxStyling}\n            __css={styles.content}\n          >\n            {childrenToRender}\n          </Box>\n        </Box>\n      );\n    }\n  ),\n  { shouldForwardProp: () => true }\n);\n\nexport default Hero;\n"],"names":["heroTypesArray","heroSecondaryTypes","Hero","chakra","forwardRef","props","ref","backgroundColor","backgroundImageSrc","foregroundColor","heading","heroType","imageProps","locationDetails","subHeaderText","rest","styles","useMultiStyleConfig","headingStyles","finalHeading","React","backgroundImageStyle","contentBoxStyling","childrenToRender","jsxs","Fragment","jsx","Box","Image"],"mappings":"kPAKO,MAAAA,EAAA,CAAuB,UAC5B,YACA,wBACA,qBACA,oBACA,mBACA,WACA,WACA,YAEF,EAGOC,EAAA,CAA2B,YAChC,wBACA,qBACA,oBACA,kBAEF,EAoCOC,EAAAC,EAAaC,EAAA,WAClB,CAAAC,EAAAC,IAAA,CAEI,KAAA,CAAM,gBAAAC,EACJ,mBAAAC,EACA,gBAAAC,EACA,QAAAC,EACA,SAAAC,EACA,WAAAC,EAAA,CACa,IAAA,GACN,IAAA,EACA,EACP,gBAAAC,EACA,cAAAC,EACA,GAAAC,CACG,EAAAV,EAELW,EAAAC,EAAA,OAAA,CAAA,QAAAN,CAAA,CAAA,EACAO,EAAAF,EAAA,QAEAG,EAAAT,GAAAU,EAAA,aAAAV,EAAA,CAAA,MAAAQ,CAAA,CAAA,EAEA,IAAAG,EAAA,CAAA,EACAC,EAAA,CAAA,EAEAV,EAAA,KAAA,CAAAA,EAAA,KACE,QAAA,KAAQ,mJACN,EAIJD,IAAA,WACEH,GACE,QAAA,KAAQ,qHACN,EAIJI,EAAA,KAAAA,EAAA,KACE,QAAA,KAAQ,gJACN,GAGJC,GAEA,QAAA,KAAQ,8GACN,EAIJZ,EAAA,SAAAU,CAAA,GAAAH,GACE,QAAA,KAAQ,+HACN,EAIJG,IAAA,aAAAH,GAAAI,EAAA,MACE,QAAA,KAAQ,oGACN,EAIJD,IAAA,aAAA,CAAAH,GAAA,CAAAI,EAAA,MACE,QAAA,KAAQ,iJACN,EAKJD,IAAA,cAAAH,GACE,QAAA,KAAQ,qIACN,EAKJG,IAAA,UACEU,EAAAb,EAAA,CAAA,gBAAA,OAAAA,IAAA,EAAA,GAEKG,IAAA,WAELU,EAAAb,EAAA,CAAA,gBAAA,OAAAA,IAAA,EAAA,CAAA,gBAAAD,IAEsBI,IAAA,YAAAA,IAAA,gBAEtBU,EAAA,CAAA,gBAAAd,IAGFN,EAAA,SAAAU,CAAA,GAIEF,GAAAF,IAEA,QAAA,KAAQ,yJACN,EANFe,EAAA,CAAoB,MAAAb,EACX,gBAAAF,CACP,EAUJ,MAAAgB,EAAAZ,IAAA,WAAAa,EAAAC,EAAA,CAAA,SAAA,CAGMC,EAAAC,EAAC,CAAA,MAAA,CACQ,GAAAX,EAAA,WACK,gBAAA,OAAAJ,EAAA,MACyB,EACrC,SAAAc,EAAAE,EAAA,CAAA,IAAAhB,EAAA,IAAA,IAAAA,EAAA,IAAA,CAEiD,CAAA,EACnDY,EAAAG,EAAA,CAAA,MAAAX,EAAA,SAAA,SAAA,CAEGG,EAAAL,CACA,EAAA,CACH,CAAA,CAAA,EAAAU,EAAAC,EAAA,CAAA,SAAA,CAICd,IAAA,WAAAA,IAAA,YAAAe,EACCC,EAAC,CAAA,MAAA,CACQ,GAAAX,EAAA,WACK,gBAAAL,IAAA,aAAA,OAAAC,EAAA,OAAA,MAIJ,EACR,SAAAc,EAAAE,EAAA,CAAA,IAAAhB,EAAA,IAAA,IAAAA,EAAA,IAAA,CAEiD,CAAA,EACnDO,EAEDR,IAAA,YAAAG,EAAAY,EAAA,IAAA,CAAA,SAAAZ,CAAA,CAAA,EAAAY,EAAAC,EAAA,CAAA,MAAAX,EAAA,SAAA,SAAAF,EAAA,CAI6C,CAAA,CAAA,EAKpD,OAAAY,EACEC,EAAC,CAAA,cAAA,OACa,mCAAA,GACoB,MAAAN,EACzB,IAAAf,EACP,MAAAU,EACO,GAAAD,EACH,SAAAW,EAEJC,EAAC,CAAA,cAAA,eACa,MAAAL,EACL,MAAAN,EAAA,QACO,SAAAO,CAEb,CAAA,CACH,CAAA,CACF,CAEJ,EACF,CAAA,kBAAA,IAAA,EAAA,CAEF;"}