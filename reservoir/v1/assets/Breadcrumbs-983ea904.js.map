{"version":3,"file":"Breadcrumbs-983ea904.js","sources":["../../../node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\"],\n    _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n    _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n    _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n\n/**\n * React component that separates each breadcrumb link\n */\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      href = props.href,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\n\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };\n","import {\n  Breadcrumb as ChakraBreadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  chakra,\n  useStyleConfig,\n} from \"@chakra-ui/react\";\nimport React, { forwardRef } from \"react\";\n\nimport Icon from \"../Icons/Icon\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport { truncateText } from \"../../utils/utils\";\n\nexport const breadcrumbTypeArray = [\n  \"blogs\",\n  \"booksAndMore\",\n  \"brand\",\n  \"education\",\n  \"locations\",\n  \"research\",\n  \"whatsOn\",\n] as const;\nexport type BreadcrumbsTypes = typeof breadcrumbTypeArray[number];\nexport interface BreadcrumbsDataProps {\n  url: string;\n  text: string | React.ReactNode;\n}\n\nexport interface BreadcrumbProps {\n  /** Breadcrumb links as an array */\n  breadcrumbsData: BreadcrumbsDataProps[];\n  /** Used to control how the `Hero` component will be rendered. */\n  breadcrumbsType?: BreadcrumbsTypes;\n  /** className you can add in addition to 'input' */\n  className?: string;\n  /** ID that other components can cross reference for accessibility purposes */\n  id?: string;\n}\n\nconst breadcrumbTextLength = 40;\n\n/**\n * Truncate breadcrumb text if it is more than 40 characters in length and\n * then add ellipsis at the end.\n */\nconst tooltipWrapperOrText = (\n  breadcrumbsData: BreadcrumbsDataProps,\n  breadcrumbsID,\n  renderIcon = false,\n  isCurrentPage = false\n) => {\n  const textLength = (breadcrumbsData.text as string).length;\n  const renderTooltip = textLength >= breadcrumbTextLength;\n  // If the text is more than 40 characters in length, truncate it.\n  const updatedText =\n    textLength <= breadcrumbTextLength\n      ? breadcrumbsData.text\n      : truncateText(breadcrumbsData.text as string, breadcrumbTextLength);\n  const linkWrapper = (\n    <BreadcrumbLink\n      href={breadcrumbsData.url}\n      aria-current={isCurrentPage ? \"page\" : undefined}\n    >\n      {renderIcon && (\n        <Icon\n          name=\"arrow\"\n          size=\"small\"\n          iconRotation=\"rotate90\"\n          id={`${breadcrumbsID}__backarrow`}\n          className=\"breadcrumbs-icon\"\n          type=\"breadcrumbs\"\n        />\n      )}\n      <span className=\"breadcrumb-label\">{updatedText}</span>\n    </BreadcrumbLink>\n  );\n  // If the text is more than 40 characters in length, we need a ToolTip\n  // component wrapped *directly* around the anchor element for\n  // accessibility purposes.\n  const breadcrumbLink = renderTooltip ? (\n    <Tooltip\n      content={breadcrumbsData.text}\n      id={`breadcrumb-${breadcrumbsID}-tooltip`}\n    >\n      {linkWrapper}\n    </Tooltip>\n  ) : (\n    <>{linkWrapper}</>\n  );\n\n  return breadcrumbLink;\n};\n\nconst getElementsFromData = (\n  data: BreadcrumbsDataProps[],\n  breadcrumbsID?: string\n) => {\n  if (!data?.length) {\n    return null;\n  }\n\n  const breadcrumbsItems = data.map((breadcrumbsData, index) => {\n    // The icon renders only on mobile and it should be\n    // part of the second to last element in the nav.\n    const renderIcon = index === data.length - 2;\n    // The current page is the last item in the breadcrumbs\n    // and needs an additional aria attribute.\n    const isCurrentPage = index === data.length - 1;\n    return (\n      <BreadcrumbItem key={index}>\n        {tooltipWrapperOrText(\n          breadcrumbsData,\n          breadcrumbsID,\n          renderIcon,\n          isCurrentPage\n        )}\n      </BreadcrumbItem>\n    );\n  });\n\n  return breadcrumbsItems;\n};\n\n/**\n * The `Breadcrumbs` component is a navigation element that provides a\n * breadcrumb path that reflects the site structure and allows a user to\n * navigate to any page available in the breadcrumb hierarchy.\n */\nexport const Breadcrumbs = chakra(\n  forwardRef<HTMLDivElement, BreadcrumbProps>((props, ref?) => {\n    const {\n      breadcrumbsData,\n      breadcrumbsType = \"whatsOn\",\n      className,\n      id,\n      ...rest\n    } = props;\n\n    if (!breadcrumbsData || breadcrumbsData.length === 0) {\n      throw new Error(\n        \"NYPL Reservoir Breadcrumbs: No data was passed to the `breadcrumbsData` prop.\"\n      );\n    }\n\n    const styles = useStyleConfig(\"Breadcrumb\", { variant: breadcrumbsType });\n    const breadcrumbItems = getElementsFromData(breadcrumbsData, id);\n\n    return (\n      <ChakraBreadcrumb\n        aria-label=\"Breadcrumb\"\n        className={className}\n        id={id}\n        ref={ref}\n        __css={styles}\n        {...rest}\n      >\n        {breadcrumbItems}\n      </ChakraBreadcrumb>\n    );\n  })\n);\n\nexport default Breadcrumbs;\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded","_excluded2","_excluded3","_excluded4","BreadcrumbSeparator","forwardRef","props","ref","spacing","rest","styles","useStyles","separatorStyles","React.createElement","chakra","BreadcrumbLink","isCurrentPage","as","className","href","sharedProps","cx","BreadcrumbItem","separator","isLastChild","children","validChildren","getValidChildren","clones","child","React.cloneElement","itemStyles","_className","Breadcrumb","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","_ownProps$separator","count","index","StylesProvider","breadcrumbTypeArray","breadcrumbTextLength","tooltipWrapperOrText","breadcrumbsData","breadcrumbsID","renderIcon","textLength","renderTooltip","updatedText","truncateText","linkWrapper","jsxs","jsx","Icon","Tooltip","Fragment","getElementsFromData","data","Breadcrumbs","breadcrumbsType","id","useStyleConfig","breadcrumbItems","ChakraBreadcrumb"],"mappings":"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","x_google_ignoreList":[0]}