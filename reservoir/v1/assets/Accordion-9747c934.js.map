{"version":3,"file":"Accordion-9747c934.js","sources":["../../../src/components/Accordion/Accordion.mdx"],"sourcesContent":["import { ArgTypes, Canvas, Description, Meta, Source } from \"@storybook/blocks\";\n\nimport * as AccordionStories from \"./Accordion.stories\";\nimport Link from \"../Link/Link\";\n\n<Meta of={AccordionStories} />\n\n# Accordion\n\n| Component Version | DS Version |\n| ----------------- | ---------- |\n| Added             | `0.1.0`    |\n| Latest            | `1.5.0`    |\n\n## Table of Contents\n\n- {<Link href=\"#overview\" target=\"_self\">Overview</Link>}\n- {<Link href=\"#component-props\" target=\"_self\">Component Props</Link>}\n- {<Link href=\"#accessibility\" target=\"_self\">Accessibility</Link>}\n- {<Link href=\"#faq-example\" target=\"_self\">FAQ Example</Link>}\n- {<Link href=\"#example-with-panelmaxheight-prop\" target=\"_self\">Example with panelMaxHeight Prop</Link>}\n\n## Overview\n\n<Description of={AccordionStories} />\n\nThe `Accordion` component displays a list of high-level options that can\nexpand and collapse to reveal associated sections of content. This component\npushes existing content on the page down. Each accordion item is self contained,\nbut when the data for multiple accordions is passed in through the `accordionData`\nprop, the `Accordion` components are grouped together and rendered under a single\nelement. When grouped like this, each `Accordion` component still opens and\ncloses independent from the others in the group.\n\nThe only way to render an `Accordion` component is to pass in an array of objects\nwith `label`, `panel`, and optional `accordionType` properties for each accordion item.\nNote that you can pass in a string or DOM elements into the `panel` property in each\nobject. This approach is needed because, internally, we deal with the logic to render\nthe necessary icon, Chakra components, and styles.\n\nThe `accordionType` prop can be used to change the accordion button's background color.\nIt takes a value of `\"default\"` for `\"ui.white\"`, `\"warning\"` for `\"ui.status.primary\"`,\nand `\"error\"` for `\"ui.status.secondary\"`. The optional `panelMaxHeight` prop determines\nthe maximum height of the `Accordion`'s panel when expanded. If the content within the\npanel exceeds the `panelMaxHeight`, a scrollbar will appear.\n\n<Source\n  code={`\nconst accordionData = [\n  {\n    accordionType: \"default\",\n    label: \"Tom Nook\",\n    panel: (\n      <Card\n        imageProps={{\n          alt: \"Alt text\",\n          aspectRatio: \"twoByOne\",\n          src: \"https://play.nintendo.com/images/AC_Tom_FRYtwIN.17345b1513ac044897cfc243542899dce541e8dc.9afde10b.png\",\n        }}\n        isCentered\n        layout=\"row\"\n      >\n        <CardHeading level=\"four\" id=\"heading1\">\n          Tom Nook\n        </CardHeading>\n        <CardContent>\n          Tom Nook, <b>known in Japan as Tanukichi</b>, is a fictional\n          character in the Animal Crossing series who operates the\n          village store.\n        </CardContent>\n      </Card>\n    ),\n  },\n];\n\n...\n\n<Accordion accordionData={accordionData} />\n`} language=\"tsx\" />\n\n## Component Props\n\n<Canvas of={AccordionStories.WithControls} />\n\n<ArgTypes of={AccordionStories.WithControls} />\n\n## Accessibility\n\n- Follows [U.S. Web Design System (USWDS)](https://designsystem.digital.gov/components/accordion/)\n  guidelines:\n  - Use the `button` HTML element for screenreaders and keyboards.\n  - Use the `aria-expanded` attribute to indicate whether the `Accordion` is\n    expanded (`true`) or collapsed (`false`).\n  - Use the `aria-controls` attribute to associate the control with the panel.\n- Deviates from USWDS in that the user can open multiple panels. Opening one,\n  does not collapse already expanded panel.\n- The open and close icons are decorative (`aria-hidden` is `true`).\n- Visible focus goes around full button and full button is clickable.\n\nResources:\n\n- [W3C WAI-Aria Practices - Accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion)\n- [USWDS Accordion](https://designsystem.digital.gov/components/accordion/)\n- [Chakra Accordion](https://chakra-ui.com/docs/components/disclosure/accordion)\n\n## FAQ Example\n\nBuilding out FAQ-like accordions happens automatically when there are more than\none object in the array passed into the `accordionData` prop.\n\n<Canvas of={AccordionStories.FaqContent} />\n\n<Source\n  code={`\nexport const faqContent: AccordionDataProps[] = [\n  {\n    accordionType: \"default\",\n    label: \"Tom Nook\",\n    panel: (\n      <Card\n        imageProps={{\n          alt: \"Alt text\",\n          aspectRatio: \"twoByOne\",\n          src: \"https://play.nintendo.com/images/AC_Tom_FRYtwIN.17345b1513ac044897cfc243542899dce541e8dc.9afde10b.png\",\n        }}\n        isCentered\n        layout=\"row\"\n      >\n        <CardHeading level=\"four\" id=\"heading1-tom\">\n          Tom Nook\n        </CardHeading>\n        <CardContent>\n          Tom Nook, <b>known in Japan as Tanukichi</b>, is a fictional character\n          in the Animal Crossing series who operates the village store.\n        </CardContent>\n      </Card>\n    ),\n  },\n  {\n    accordionType: \"warning\",\n    label: \"Isabelle\",\n    panel: (\n      <Card\n        imageProps={{\n          alt: \"Alt text\",\n          aspectRatio: \"twoByOne\",\n          src: \"https://play.nintendo.com/images/AC_Isabelle_7XU6aGu.17345b1513ac044897cfc243542899dce541e8dc.9afde10b.png\",\n        }}\n        isCentered\n        layout=\"row\"\n      >\n        <CardHeading level=\"four\" id=\"heading1-isabelle\">\n          Isabelle\n        </CardHeading>\n        <CardContent>\n          Isabelle, known as Shizue in Japan, is a fictional character from the\n          Animal Crossing series of video games. She is a kindly Shih Tzu that\n          debuted in the 2012 release Animal Crossing: New Leaf, where she\n          serves as the secretary to the player character.\n        </CardContent>\n      </Card>\n    ),\n  },\n  {\n    accordionType: \"error\",\n    label: \"K.K. Slider\",\n    panel: (\n      <Card\n        imageProps={{\n          alt: \"Alt text\",\n          aspectRatio: \"twoByOne\",\n          src: \"https://play.nintendo.com/images/AC_KK_jh4yj5t.17345b1513ac044897cfc243542899dce541e8dc.9afde10b.png\",\n        }}\n        isCentered\n        layout=\"row\"\n      >\n        <CardHeading level=\"four\" id=\"heading1-kkslider\">\n          K.K. Slider\n        </CardHeading>\n        <CardContent>\n          <p>\n            Totakeke, more commonly known as <b>K.K. Slider or K.K.</b>, is a\n            fictional character within the Animal Crossing franchise. One of the\n            franchise's most popular characters, he debuted in the title Animal\n            Crossing, and has appeared in every installment since.\n          </p>\n        </CardContent>\n      </Card>\n    ),\n  },\n];\n\n...\n\n<Accordion accordionData={faqContent} />\n`} language=\"tsx\" />\n\n## Examples with panelMaxHeight Prop\n\nExample with image and text\n\n<Canvas of={AccordionStories.PanelMaxHeightExample} />\n\nExample with multiple paragraphs\n\n<Canvas of={AccordionStories.PanelMaxHeightExample2} />\n\n## Always Render the Accordion Content\n\nBy default, the content in an `Accordion` is only rendered when it is opened. When\nit is closed, the content gets removed from the DOM. This is an intentional\noptimization. However, there will be occasions when you want to always render the\ncontent inside an `Accordion` whether it's opened or closed. Use the\n`isAlwaysRendered` prop to always render the `Accordion`'s content.\n\nIn the following examples, the first `Accordion` has the default behavior where\nthe content is removed when it is closed. The second `Accordion` always renders\nits content. This is important in this scenario because we want to keep the state\nof the content when it is closed. Click on subjects inside both `Accordion`s and\ntoggle them closed and opened to see the difference.\n\n<Canvas of={AccordionStories.IsAlwaysRendered} />\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","AccordionStories","Link","Description","Source","Canvas","AccordionStories.WithControls","ArgTypes","AccordionStories.FaqContent","AccordionStories.PanelMaxHeightExample","AccordionStories.PanelMaxHeightExample2","AccordionStories.IsAlwaysRendered","MDXContent","MDXLayout"],"mappings":"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"}