{"version":3,"file":"useFilterBar-af5eb063.js","sources":["../../../src/hooks/useFilterBar.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\n<Meta title=\"Hooks/useFilterBar\" />\n\n# useFilterBar\n\n| Hook Version | DS Version |\n| ------------ | ---------- |\n| Added        | `1.4.0`    |\n| Latest       | `1.4.0`    |\n\n## Usage\n\nUsage of useFilterBar\n\n<Source\n  code={`\nconst {\n  onChange,\n  onMixedStateChange,\n  onClear,\n  onClearAll,\n  setSelectedItems,\n  selectedItems,\n  onOpen,\n  onClose,\n  onToggle,\n  isModalOpen,\n} = useFilterBar();\n`}\n  language=\"jsx\"\n/>\n\n## useFilterBar Hook implementation\n\nThe data structure used to render two `MultiSelect` components in all following examples:\n\n<Source\n  code={`\nconst multiSelectItems = [\n  {\n    id: \"colors\",\n    name: \"Colors\",\n    items: [\n      { id: \"red\", name: \"Red\" },\n      { id: \"blue\", name: \"Blue\" },\n      { id: \"yellow\", name: \"Yellow\" },\n    ],\n  },\n  {\n    id: \"pets\",\n    name: \"Pets\",\n    items: [\n      { id: \"cat\", name: \"Cat\" },\n      {\n        id: \"dog\",\n        name: \"Dog\",\n        children: [\n          { id: \"corgy\", name: \"Corgy\" },\n          { id: \"german-sheperd\", name: \"German Sheperd\" },\n          { id: \"afghan-hound\", name: \"Afghan Hound\" },\n        ],\n      },\n      { id: \"rat\", name: \"Rat\" },\n    ],\n  },\n];\n`}\n  language=\"jsx\"\n/>\n\n### Implementation with no global buttons or modal\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  FilterBar,\n  MultiSelectGroup,\n  MultiSelect,\n  useFilterBar,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function FilterBarWithHookExample() {\n  // Without this hook, you'd have to add handlers for onChange, onMixedStateChange and onClear,\n  // and also manage the selectedItems state yourself.\n  const { onChange, onMixedStateChange, onClear, onClearAll, selectedItems } =\n    useFilterBar();\n  return (\n    <FilterBar\n      id=\"filterbar\"\n      headingText=\"FilterBar\"\n      layout=\"row\"\n      selectedItems={selectedItems}\n      onClear={onClearAll}\n    >\n      <MultiSelectGroup\n        id=\"multiselect-group\"\n        key=\"multiselect-group-key\"\n        labelText=\"MultiSelect Group\"\n      >\n        {multiSelectItems &&\n          multiSelectItems.map((multiSelect) => (\n            <MultiSelect\n              key={multiSelect.id}\n              id={multiSelect.id}\n              labelText={multiSelect.name}\n              type=\"dialog\"\n              items={multiSelect.items}\n              selectedItems={selectedItems}\n              onChange={(e) => {\n                onChange(e.target.id, multiSelect.id);\n              }}\n              onMixedStateChange={(e) => {\n                onMixedStateChange(\n                  e.target.id,\n                  multiSelect.id,\n                  multiSelect.items\n                );\n              }}\n              onClear={() => {\n                onClear(multiSelect.id);\n              }}\n              onApply={() => {}}\n            />\n          ))}\n      </MultiSelectGroup>\n    </FilterBar>\n  );\n}\n`}\n  language=\"jsx\"\n/>\n\n### Implementation with Clear Filters and Apply Filters buttons\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  FilterBar,\n  MultiSelectGroup,\n  MultiSelect,\n  useFilterBar,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function FilterBarWithHookExample() {\n  // Without this hook, the consuming app will have to provide handlers for onChange, onMixedStateChange, onClear and onClearAll,\n  // and also manage the selectedItems state.\n  const { onChange, onMixedStateChange, onClear, onClearAll, selectedItems } =\n    useFilterBar();\n  return (\n    <FilterBar\n      id=\"filterbar\"\n      headingText=\"FilterBar\"\n      layout=\"row\"\n      selectedItems={selectedItems}\n      showClearAll\n      onClear={onClearAll}\n      showSubmitAll\n      // onSubmit has to be provided by the consuming app\n      onSubmit={() => {}}\n    >\n      <MultiSelectGroup\n        id=\"multiselect-group\"\n        key=\"multiselect-group-key\"\n        labelText=\"MultiSelect Group\"\n      >\n        {multiSelectItems &&\n          multiSelectItems.map((multiSelect) => (\n            <MultiSelect\n              key={multiSelect.id}\n              id={multiSelect.id}\n              labelText={multiSelect.name}\n              type=\"dialog\"\n              items={multiSelect.items}\n              selectedItems={selectedItems}\n              onChange={(e) => {\n                onChange(e.target.id, multiSelect.id);\n              }}\n              onMixedStateChange={(e) => {\n                onMixedStateChange(\n                  e.target.id,\n                  multiSelect.id,\n                  multiSelect.items\n                );\n              }}\n              onClear={() => {\n                onClear(multiSelect.id);\n              }}\n              onApply={() => {}}\n            />\n          ))}\n      </MultiSelectGroup>\n    </FilterBar>\n  );\n}\n`}\n  language=\"jsx\"\n/>\n\n### Implementation using setSelectedItems for a initial selection of filters\n\nThe required data structure to set the `selectedItems` object:\n\n<Source\n  code={`\n// The selectedItems structure for one MultiSelect\nconst initialFilter = {\n  colors: {\n    items: [\"red\"],\n  },\n};\n`}\n  language=\"jsx\"\n/>\n\n<Source\n  code={`\n// The selectedItems structure for setting state on multiple filters\nconst initialFilters = {\n  colors: {\n    items: [\"red\"],\n  },\n  pets: {\n    items: [\"corgy\", \"german-sheperd\"],\n  },\n};\n`}\n  language=\"jsx\"\n/>\n\nImplementation:\n\n<Source\n  code={`\nimport React from \"react\";\nimport {\n  FilterBar,\n  MultiSelectGroup,\n  MultiSelect,\n  useFilterBar,\n} from \"@nypl/design-system-react-components\";\n// ...\nexport default function FilterBarWithHookExample() {\n  const { onChange, onClear, onClearAll, setSelectedItems, selectedItems } =\n    useFilterBar();\n  const initialFilters = {\n    colors: {\n      items: [\"red\"],\n    },\n    pets: {\n      items: [\"corgy\", \"german-sheperd\"],\n    },\n  };\n  //Set the initial state of selectedItems\n  React.useEffect(() => {\n    setSelectedItems(initialSelectedItems);\n  }, []);\n  // ...\n  return (\n    <FilterBar\n      id=\"filterbar\"\n      headingText=\"FilterBar\"\n      layout=\"row\"\n      selectedItems={selectedItems}\n      showClearAll\n      onClear={onClearAll}\n      showSubmitAll\n      onSubmit={() => {}}\n    >\n      <MultiSelectGroup\n        id=\"multiselect-group\"\n        key=\"multiselect-group-key\"\n        labelText=\"MultiSelect Group\"\n      >\n        {multiSelectItems &&\n          multiSelectItems.map((multiSelect) => (\n            <MultiSelect\n              key={multiSelect.id}\n              id={multiSelect.id}\n              labelText={multiSelect.name}\n              type=\"dialog\"\n              items={multiSelect.items}\n              selectedItems={selectedItems}\n              onChange={(e) => {\n                onChange(e.target.id, multiSelect.id);\n              }}\n              onMixedStateChange={(e) => {\n                onMixedStateChange(\n                  e.target.id,\n                  multiSelect.id,\n                  multiSelect.items\n                );\n              }}\n              onClear={() => {\n                onClear(multiSelect.id);\n              }}\n              onApply={() => {}}\n            />\n          ))}\n      </MultiSelectGroup>\n    </FilterBar>\n  );\n}\n`}\n  language=\"jsx\"\n/>\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Source","MDXContent","MDXLayout"],"mappings":"inBAIA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,MAAO,QACP,MAAO,QACP,GAAI,KACJ,GAAI,KACJ,MAAO,QACP,GAAI,KACJ,KAAM,OACN,GAAI,KACJ,EAAG,IACH,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAMC,EAAW,CACtB,SAAU,CAACC,EAAKC,EAAM,CACpB,MAAO,oBACR,CAAA,EAAG;AAAA,EAAMD,EAAKJ,EAAY,GAAI,CAC7B,GAAI,eACJ,SAAU,cACX,CAAA,EAAG;AAAA,EAAME,EAAMF,EAAY,MAAO,CACjC,SAAU,CAACI,EAAKJ,EAAY,MAAO,CACjC,SAAUE,EAAMF,EAAY,GAAI,CAC9B,SAAU,CAACI,EAAKJ,EAAY,GAAI,CAC9B,SAAU,cACtB,CAAW,EAAGI,EAAKJ,EAAY,GAAI,CACvB,SAAU,YACtB,CAAW,CAAC,CACZ,CAAS,CACT,CAAO,EAAGE,EAAMF,EAAY,MAAO,CAC3B,SAAU,CAACE,EAAMF,EAAY,GAAI,CAC/B,SAAU,CAACI,EAAKJ,EAAY,GAAI,CAC9B,SAAU,OACtB,CAAW,EAAGI,EAAKJ,EAAY,GAAI,CACvB,SAAUI,EAAKJ,EAAY,KAAM,CAC/B,SAAU,OACxB,CAAa,CACb,CAAW,CAAC,CACZ,CAAS,EAAGE,EAAMF,EAAY,GAAI,CACxB,SAAU,CAACI,EAAKJ,EAAY,GAAI,CAC9B,SAAU,QACtB,CAAW,EAAGI,EAAKJ,EAAY,GAAI,CACvB,SAAUI,EAAKJ,EAAY,KAAM,CAC/B,SAAU,OACxB,CAAa,CACb,CAAW,CAAC,CACZ,CAAS,CAAC,CACV,CAAO,CAAC,CACH,CAAA,EAAG;AAAA,EAAMI,EAAKJ,EAAY,GAAI,CAC7B,GAAI,QACJ,SAAU,OACX,CAAA,EAAG;AAAA,EAAMI,EAAKJ,EAAY,EAAG,CAC5B,SAAU,uBAChB,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMF,EAAKJ,EAAY,GAAI,CAC7B,GAAI,mCACJ,SAAU,kCACX,CAAA,EAAG;AAAA,EAAME,EAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,yCAA0CI,EAAKJ,EAAY,KAAM,CAC1E,SAAU,aACX,CAAA,EAAG,wCAAwC,CAClD,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8BN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMF,EAAKJ,EAAY,GAAI,CAC7B,GAAI,iDACJ,SAAU,gDAChB,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyDN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMF,EAAKJ,EAAY,GAAI,CAC7B,GAAI,8DACJ,SAAU,6DAChB,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6DN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMF,EAAKJ,EAAY,GAAI,CAC7B,GAAI,2EACJ,SAAU,0EACX,CAAA,EAAG;AAAA,EAAME,EAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC,0CAA2CI,EAAKJ,EAAY,KAAM,CAC3E,SAAU,eACX,CAAA,EAAG,UAAU,CACpB,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQN,SAAU,KAChB,CAAK,EAAG;AAAA,EAAMF,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWN,SAAU,KACX,CAAA,EAAG;AAAA,EAAMF,EAAKJ,EAAY,EAAG,CAC5B,SAAU,iBAChB,CAAK,EAAG;AAAA,EAAMI,EAAKE,EAAQ,CACrB,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuEN,SAAU,KAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASC,EAAWR,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASS,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEP,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOS,EAAYJ,EAAKI,EAAW,OAAO,OAAO,CAAE,EAAET,EAAO,CAC1D,SAAUK,EAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}