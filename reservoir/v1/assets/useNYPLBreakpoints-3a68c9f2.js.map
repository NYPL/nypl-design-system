{"version":3,"file":"useNYPLBreakpoints-3a68c9f2.js","sources":["../../../src/hooks/useNYPLBreakpoints.mdx"],"sourcesContent":["import { Meta, Source } from \"@storybook/blocks\";\n\n<Meta title=\"Hooks/useNYPLBreakpoints\" />\n\n# useNYPLBreakpoints\n\n| Hook Version | DS Version |\n| ------------ | ---------- |\n| Added        | `1.0.4`    |\n| Latest       | `1.0.5`    |\n\nThis custom hook is inspired by Chakra's `useMediaQuery` hook. Internally,\nthe hook uses the `useMediaQuery` hook and the `MediaMatch` API to determine\nthe current breakpoint size based on NYPL's breakpoint configuration. In order\nto follow responsive design patterns, the \"min-width\" media query is used\nwith the breakpoint configuration. The list of breakpoints can be found on\nthe [Reservoir's Breakpoints](../?path=/docs/style-guide-breakpoints--docs)\nstyle guide.\n\n## Usage\n\nThe hook returns an object with four boolean values:\n\n<Source\n  code={`\nconst {\n  isLargerThanSmall,\n  isLargerThanMedium,\n  isLargerThanMobile,\n  isLargerThanLarge,\n  isLargerThanXLarge,\n} = useNYPLBreakpoints();\n`}\n  language=\"jsx\"\n/>\n\nFor the following example, we'll use the NYPL specific mobile breakpoint value.\nThis breakpoint value is based on the \"medium\" breakpoint value of `\"38em\"`\n(or `\"600px\"`). If different components need to be conditionally rendered based\non the current size of the viewport, we can use the `isLargerThanMobile`\nboolean value.\n\n<Source\n  code={`\nconst DesktopLayout = () => ...\nconst MobileLayout = () => ...\n// ...\n<Box>\n  <Text>\n    {isLargerThanMobile ? \"Larger than mobile\" : \"Smaller than mobile\"}\n  </Text>\n  {isLargerThanMobile ? <DesktopLayout /> : <MobileLayout />}\n</Box>\n`}\n  language=\"jsx\"\n/>\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Source","MDXContent","MDXLayout"],"mappings":"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"}