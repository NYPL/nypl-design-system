import{j as g,a as E}from"./emotion-react-jsx-runtime.browser.esm-b12afd4d.js";import{r as m,R as H}from"./index-f2bd0723.js";import{L as M}from"./Link-0ed02cf7.js";import{L as I}from"./List-b2e63895.js";import{r as $}from"./utils-acca7d12.js";import{f as j,u as D,B}from"./chakra-ui-layout.esm-b2fa9d31.js";const L=j(m.forwardRef((h,C)=>{const{className:N,currentPage:i,getPageHref:s,id:p,initialPage:_=1,onPageChange:l,pageCount:a,...w}=h,P=m.useRef(i),[n,b]=m.useState(_),y=D("Pagination",{}),v=n-1,x=n+1;if(H.useEffect(()=>{l&&i&&i!==P.current&&(b(i),P.current=i)},[i,l]),a<=1)return null;s&&l&&console.warn("NYPL Reservoir Pagination: Props for both `getPageHref` and `onPageChange` are passed. The component will default to using `getPageHref`."),s&&i&&console.warn("NYPL Reservoir Pagination: The `currentPage` prop does not work with the `getPageHref` prop. Use `currentPage` with `onPageChange` instead.");const o=typeof s<"u"&&typeof s=="function",d=(t,e)=>{t.preventDefault&&t.preventDefault(),n!==e&&(b(e),l&&l(e))},q=t=>{n>1&&d(t,v)},R=t=>{n<a&&d(t,x)},f=(t,e)=>{const u=n===e,k=u?{color:"ui.black",pointerEvent:"none",_dark:{color:"dark.ui.typography.body"}}:{},r={items:{href:o?s(e):"#",attributes:{"aria-label":`Page ${e}`,"aria-current":u?"page":null,onClick:o?void 0:c=>d(c,e)},text:e},previous:{href:o?s(v):"#",attributes:{"aria-label":"Previous page",onClick:o?void 0:q},text:"Previous"},next:{href:o?s(x):"#",attributes:{"aria-label":"Next page",onClick:o?void 0:R},text:"Next"}}[t];return g(M,{href:r.href,id:`${p}-${r.text}`,...r.attributes,__css:{...y.link,...k},children:r.text})},T=t=>{const e=Math.max(3,Math.min(t-1,a-4)),u=Math.min(a-2,Math.max(t+1,5));return(a<4?Array.from({length:a},(r,c)=>c+1):[1,e>3?"ellipse-start":2,...$(e,u+1),u<a-2?"ellipse-end":a-1,a]).map(r=>{const c=typeof r=="number"?f("items",r):"...";return g("li",{children:c},r)})},S=n!==1&&g("li",{children:f("previous")},"previous"),V=n!==a&&g("li",{children:f("next")},"next");return g(B,{as:"nav",id:p,"aria-label":"Pagination",role:"navigation",className:N,ref:C,__css:y,...w,children:E(I,{type:"ul",inline:!0,noStyling:!0,id:`${p}-list`,children:[S,T(n),V]})})}));try{L.displayName="Pagination",L.__docgenInfo={description:"A component that provides a navigational list of page items.",displayName:"Pagination",props:{className:{defaultValue:null,description:"Additional className.",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID that other components can cross reference for accessibility purposes.",name:"id",required:!1,type:{name:"string"}},currentPage:{defaultValue:null,description:`The currentPage can be used to programatically force the selected page to change
without the user explicitly requesting it â€“ for example, if the user should be
brought back to the first page of a set of results after a new search.`,name:"currentPage",required:!1,type:{name:"number"}},getPageHref:{defaultValue:null,description:"The callback function that takes a page number and returns a string\nto use for a link's `href` attribute. This is used when the current\npage should refresh when navigating.",name:"getPageHref",required:!1,type:{name:"(pageNumber: number) => string"}},initialPage:{defaultValue:null,description:"The initially selected page (default value is 1).",name:"initialPage",required:!1,type:{name:"number"}},onPageChange:{defaultValue:null,description:`The callback function called when an item is selected and the current
page should not refresh.`,name:"onPageChange",required:!1,type:{name:"(selected: number) => void"}},pageCount:{defaultValue:null,description:"The total number of pages.",name:"pageCount",required:!0,type:{name:"number"}}}}}catch{}export{L as P};
//# sourceMappingURL=Pagination-f276063d.js.map
