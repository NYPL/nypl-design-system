{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 27,
  "numPassedTests": 244,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 27,
  "numTotalTests": 244,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 3,
    "total": 3,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1627922948921,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Radio Accessibility"],
          "failureMessages": [],
          "fullName": "Radio Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders without crashing",
          "location": null,
          "status": "passed",
          "title": "Renders without crashing"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false",
          "location": null,
          "status": "passed",
          "title": "Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button The radio element's ID is set properly using the value passed to it.",
          "location": null,
          "status": "passed",
          "title": "The radio element's ID is set properly using the value passed to it."
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Allows user to pass in additional attributes",
          "location": null,
          "status": "passed",
          "title": "Allows user to pass in additional attributes"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false and 'helperText' has been passed",
          "location": null,
          "status": "passed",
          "title": "Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false and 'helperText' has been passed"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders with label",
          "location": null,
          "status": "passed",
          "title": "Renders with label"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders with visible helper text",
          "location": null,
          "status": "passed",
          "title": "Renders with visible helper text"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders with visible error text",
          "location": null,
          "status": "passed",
          "title": "Renders with visible error text"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Calls a UUID generation method if no ID is passed as a prop",
          "location": null,
          "status": "passed",
          "title": "Calls a UUID generation method if no ID is passed as a prop"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button The 'checked' attribute can set properly",
          "location": null,
          "status": "passed",
          "title": "The 'checked' attribute can set properly"
        },
        {
          "ancestorTitles": ["Radio Button"],
          "failureMessages": [],
          "fullName": "Radio Button Renders HTML attributes passed through the `attributes` prop",
          "location": null,
          "status": "passed",
          "title": "Renders HTML attributes passed through the `attributes` prop"
        }
      ],
      "endTime": 1627922963902,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Radio/Radio.test.tsx",
      "startTime": 1627922949698,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SkeletonLoader Accessibility"],
          "failureMessages": [],
          "fullName": "SkeletonLoader Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "layout"],
          "failureMessages": [],
          "fullName": "SkeletonLoader layout renders default layout",
          "location": null,
          "status": "passed",
          "title": "renders default layout"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "layout"],
          "failureMessages": [],
          "fullName": "SkeletonLoader layout renders vertical layout",
          "location": null,
          "status": "passed",
          "title": "renders vertical layout"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "layout"],
          "failureMessages": [],
          "fullName": "SkeletonLoader layout renders horizontal layout",
          "location": null,
          "status": "passed",
          "title": "renders horizontal layout"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders default elements",
          "location": null,
          "status": "passed",
          "title": "renders default elements"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders without image",
          "location": null,
          "status": "passed",
          "title": "renders without image"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders without heading",
          "location": null,
          "status": "passed",
          "title": "renders without heading"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders without content",
          "location": null,
          "status": "passed",
          "title": "renders without content"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders with button",
          "location": null,
          "status": "passed",
          "title": "renders with button"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "UI elements"],
          "failureMessages": [],
          "fullName": "SkeletonLoader UI elements renders with border",
          "location": null,
          "status": "passed",
          "title": "renders with border"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "image aspect ratio"],
          "failureMessages": [],
          "fullName": "SkeletonLoader image aspect ratio renders square image",
          "location": null,
          "status": "passed",
          "title": "renders square image"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "image aspect ratio"],
          "failureMessages": [],
          "fullName": "SkeletonLoader image aspect ratio renders portrait image",
          "location": null,
          "status": "passed",
          "title": "renders portrait image"
        },
        {
          "ancestorTitles": ["SkeletonLoader", "image aspect ratio"],
          "failureMessages": [],
          "fullName": "SkeletonLoader image aspect ratio renders landscape image",
          "location": null,
          "status": "passed",
          "title": "renders landscape image"
        }
      ],
      "endTime": 1627922963931,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/SkeletonLoader/SkeletonLoader.test.tsx",
      "startTime": 1627922949645,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Input Accessibility"],
          "failureMessages": [],
          "fullName": "Input Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Renders Input",
          "location": null,
          "status": "passed",
          "title": "Renders Input"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Renders aria-label",
          "location": null,
          "status": "passed",
          "title": "Renders aria-label"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Renders placeholder text",
          "location": null,
          "status": "passed",
          "title": "Renders placeholder text"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Adds aria-required prop if input is required",
          "location": null,
          "status": "passed",
          "title": "Adds aria-required prop if input is required"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Allows user to pass in additional attributes",
          "location": null,
          "status": "passed",
          "title": "Allows user to pass in additional attributes"
        },
        {
          "ancestorTitles": ["Input"],
          "failureMessages": [],
          "fullName": "Input Changing the value calls the onChange handler",
          "location": null,
          "status": "passed",
          "title": "Changing the value calls the onChange handler"
        },
        {
          "ancestorTitles": ["Input with Label"],
          "failureMessages": [],
          "fullName": "Input with Label Renders Input",
          "location": null,
          "status": "passed",
          "title": "Renders Input"
        },
        {
          "ancestorTitles": ["Input with Label"],
          "failureMessages": [],
          "fullName": "Input with Label Renders aria-label",
          "location": null,
          "status": "passed",
          "title": "Renders aria-label"
        },
        {
          "ancestorTitles": ["Input with Label"],
          "failureMessages": [],
          "fullName": "Input with Label Renders aria-labelledby for inputId and ariaLabelledBy",
          "location": null,
          "status": "passed",
          "title": "Renders aria-labelledby for inputId and ariaLabelledBy"
        },
        {
          "ancestorTitles": ["Input Group"],
          "failureMessages": [],
          "fullName": "Input Group Renders legend",
          "location": null,
          "status": "passed",
          "title": "Renders legend"
        },
        {
          "ancestorTitles": ["Input Group"],
          "failureMessages": [],
          "fullName": "Input Group Renders two inputs",
          "location": null,
          "status": "passed",
          "title": "Renders two inputs"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Has a maxlength for the input element",
          "location": null,
          "status": "passed",
          "title": "Has a maxlength for the input element"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Has a tabIndex",
          "location": null,
          "status": "passed",
          "title": "Has a tabIndex"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Calls the onChange function",
          "location": null,
          "status": "passed",
          "title": "Calls the onChange function"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Calls the onBlur function",
          "location": null,
          "status": "passed",
          "title": "Calls the onBlur function"
        },
        {
          "ancestorTitles": ["Hidden input"],
          "failureMessages": [],
          "fullName": "Hidden input Renders a hidden type input",
          "location": null,
          "status": "passed",
          "title": "Renders a hidden type input"
        }
      ],
      "endTime": 1627922964065,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Input/Input.test.tsx",
      "startTime": 1627922949631,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Checkbox Accessibility"],
          "failureMessages": [],
          "fullName": "Checkbox Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false",
          "location": null,
          "status": "passed",
          "title": "Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders without crashing",
          "location": null,
          "status": "passed",
          "title": "Renders without crashing"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox The checkbox element is an input with type='checkbox'",
          "location": null,
          "status": "passed",
          "title": "The checkbox element is an input with type='checkbox'"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Allows user to pass in additional attributes",
          "location": null,
          "status": "passed",
          "title": "Allows user to pass in additional attributes"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Changing the value calls the onChange handler",
          "location": null,
          "status": "passed",
          "title": "Changing the value calls the onChange handler"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false and 'helperText' has been passed",
          "location": null,
          "status": "passed",
          "title": "Renders with appropriate 'aria-label' attribute and value when 'showLabel' prop is set to false and 'helperText' has been passed"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders with label",
          "location": null,
          "status": "passed",
          "title": "Renders with label"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders with visible helper text",
          "location": null,
          "status": "passed",
          "title": "Renders with visible helper text"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders with visible error text",
          "location": null,
          "status": "passed",
          "title": "Renders with visible error text"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Calls a UUID generation method if no ID is passed as a prop",
          "location": null,
          "status": "passed",
          "title": "Calls a UUID generation method if no ID is passed as a prop"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox The 'checked' attribute can be set properly",
          "location": null,
          "status": "passed",
          "title": "The 'checked' attribute can be set properly"
        },
        {
          "ancestorTitles": ["Checkbox"],
          "failureMessages": [],
          "fullName": "Checkbox Renders HTML attributes passed through the `attributes` prop",
          "location": null,
          "status": "passed",
          "title": "Renders HTML attributes passed through the `attributes` prop"
        }
      ],
      "endTime": 1627922964420,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Checkbox/Checkbox.test.tsx",
      "startTime": 1627922949678,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Hero Accessibility"],
          "failureMessages": [],
          "fullName": "Hero Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test Generates a Hero with a background image",
          "location": null,
          "status": "passed",
          "title": "Generates a Hero with a background image"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test Generates a Hero with a foreground image",
          "location": null,
          "status": "passed",
          "title": "Generates a Hero with a foreground image"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test On primary hero, background image is required",
          "location": null,
          "status": "passed",
          "title": "On primary hero, background image is required"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test Throws error if both backgroundImage and foregroundImage are passed",
          "location": null,
          "status": "passed",
          "title": "Throws error if both backgroundImage and foregroundImage are passed"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test Throws error if locationDetails are based to non-primary hero types",
          "location": null,
          "status": "passed",
          "title": "Throws error if locationDetails are based to non-primary hero types"
        },
        {
          "ancestorTitles": ["Hero Test"],
          "failureMessages": [],
          "fullName": "Hero Test Throws error if only one var is passed between foregroundColor and backgroundColor",
          "location": null,
          "status": "passed",
          "title": "Throws error if only one var is passed between foregroundColor and backgroundColor"
        }
      ],
      "endTime": 1627922964518,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Hero/Hero.test.tsx",
      "startTime": 1627922949756,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Notification Accessibility"],
          "failureMessages": [],
          "fullName": "Notification Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Notification: check for basic DOM structure"],
          "failureMessages": [],
          "fullName": "Notification: check for basic DOM structure Renders Notification component wrapper",
          "location": null,
          "status": "passed",
          "title": "Renders Notification component wrapper"
        },
        {
          "ancestorTitles": ["Notification: check for basic DOM structure"],
          "failureMessages": [],
          "fullName": "Notification: check for basic DOM structure Renders Notification heading child component",
          "location": null,
          "status": "passed",
          "title": "Renders Notification heading child component"
        },
        {
          "ancestorTitles": ["Notification: check for basic DOM structure"],
          "failureMessages": [],
          "fullName": "Notification: check for basic DOM structure Renders Notification content child component",
          "location": null,
          "status": "passed",
          "title": "Renders Notification content child component"
        },
        {
          "ancestorTitles": ["Notification: check for basic DOM structure"],
          "failureMessages": [],
          "fullName": "Notification: check for basic DOM structure Renders without Icon",
          "location": null,
          "status": "passed",
          "title": "Renders without Icon"
        },
        {
          "ancestorTitles": ["Notification Snapshot"],
          "failureMessages": [],
          "fullName": "Notification Snapshot Renders the UI snapshot correctly",
          "location": null,
          "status": "passed",
          "title": "Renders the UI snapshot correctly"
        },
        {
          "ancestorTitles": [
            "Notification: check for Announcement Notification"
          ],
          "failureMessages": [],
          "fullName": "Notification: check for Announcement Notification Renders Notification component as Announcement",
          "location": null,
          "status": "passed",
          "title": "Renders Notification component as Announcement"
        },
        {
          "ancestorTitles": [
            "Notification: check for Announcement Notification"
          ],
          "failureMessages": [],
          "fullName": "Notification: check for Announcement Notification Renders Icon with proper color",
          "location": null,
          "status": "passed",
          "title": "Renders Icon with proper color"
        },
        {
          "ancestorTitles": ["Notification: check for Warning Notification"],
          "failureMessages": [],
          "fullName": "Notification: check for Warning Notification Renders Notification component as Warning",
          "location": null,
          "status": "passed",
          "title": "Renders Notification component as Warning"
        },
        {
          "ancestorTitles": ["Notification: check for Warning Notification"],
          "failureMessages": [],
          "fullName": "Notification: check for Warning Notification Renders Icon with proper color",
          "location": null,
          "status": "passed",
          "title": "Renders Icon with proper color"
        },
        {
          "ancestorTitles": ["Notification: check for custom Icon"],
          "failureMessages": [],
          "fullName": "Notification: check for custom Icon Renders custom Icon component",
          "location": null,
          "status": "passed",
          "title": "Renders custom Icon component"
        },
        {
          "ancestorTitles": ["Notification: check for validation"],
          "failureMessages": [],
          "fullName": "Notification: check for validation Shows error when two NotificationHeading children are passed to Notification",
          "location": null,
          "status": "passed",
          "title": "Shows error when two NotificationHeading children are passed to Notification"
        },
        {
          "ancestorTitles": ["Notification: check for validation"],
          "failureMessages": [],
          "fullName": "Notification: check for validation Shows error when two NotificationContent children are passed to Notification",
          "location": null,
          "status": "passed",
          "title": "Shows error when two NotificationContent children are passed to Notification"
        }
      ],
      "endTime": 1627922964593,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Notification/Notification.test.tsx",
      "startTime": 1627922949654,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Link Accessibility"],
          "failureMessages": [],
          "fullName": "Link Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List renders unordered list",
          "location": null,
          "status": "passed",
          "title": "renders unordered list"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List renders unordered list with the `listItems` prop",
          "location": null,
          "status": "passed",
          "title": "renders unordered list with the `listItems` prop"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List renders ordered list",
          "location": null,
          "status": "passed",
          "title": "renders ordered list"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List renders ordered list with the `listItems` prop",
          "location": null,
          "status": "passed",
          "title": "renders ordered list with the `listItems` prop"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List returns definition list",
          "location": null,
          "status": "passed",
          "title": "returns definition list"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List returns definition list with the `listItems` prop",
          "location": null,
          "status": "passed",
          "title": "returns definition list with the `listItems` prop"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List throws an error when you pass an ordered or unordered list children that aren't <li>s",
          "location": null,
          "status": "passed",
          "title": "throws an error when you pass an ordered or unordered list children that aren't <li>s"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List throws an error when you pass a definition list children that aren't `<dt>`s or `<dd>`s",
          "location": null,
          "status": "passed",
          "title": "throws an error when you pass a definition list children that aren't `<dt>`s or `<dd>`s"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List throws an error when no children are passed or the `listItems` prop is not passed",
          "location": null,
          "status": "passed",
          "title": "throws an error when no children are passed or the `listItems` prop is not passed"
        },
        {
          "ancestorTitles": ["List"],
          "failureMessages": [],
          "fullName": "List throws an error when children and the `listItems` prop are both passed",
          "location": null,
          "status": "passed",
          "title": "throws an error when children and the `listItems` prop are both passed"
        }
      ],
      "endTime": 1627922964812,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/List/List.test.tsx",
      "startTime": 1627922949687,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TextInput Accessibility"],
          "failureMessages": [],
          "fullName": "TextInput Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Renders an input element",
          "location": null,
          "status": "passed",
          "title": "Renders an input element"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Renders label with label text",
          "location": null,
          "status": "passed",
          "title": "Renders label with label text"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Renders label's `for` attribute pointing at ID from input",
          "location": null,
          "status": "passed",
          "title": "Renders label's `for` attribute pointing at ID from input"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Renders placeholder text",
          "location": null,
          "status": "passed",
          "title": "Renders placeholder text"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Adds aria-required prop if input is required",
          "location": null,
          "status": "passed",
          "title": "Adds aria-required prop if input is required"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Allows user to pass in additional attributes",
          "location": null,
          "status": "passed",
          "title": "Allows user to pass in additional attributes"
        },
        {
          "ancestorTitles": ["TextInput"],
          "failureMessages": [],
          "fullName": "TextInput Changing the value calls the onChange handler",
          "location": null,
          "status": "passed",
          "title": "Changing the value calls the onChange handler"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Renders Input component",
          "location": null,
          "status": "passed",
          "title": "Renders Input component"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Calls a UUID generation method if no ID is passed as a prop",
          "location": null,
          "status": "passed",
          "title": "Calls a UUID generation method if no ID is passed as a prop"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Does not renders Label component",
          "location": null,
          "status": "passed",
          "title": "Does not renders Label component"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Renders custom aria-label",
          "location": null,
          "status": "passed",
          "title": "Renders custom aria-label"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Renders HelperErrorText component",
          "location": null,
          "status": "passed",
          "title": "Renders HelperErrorText component"
        },
        {
          "ancestorTitles": [
            "Renders TextInput with auto-generated ID, hidden label and visible helper text"
          ],
          "failureMessages": [],
          "fullName": "Renders TextInput with auto-generated ID, hidden label and visible helper text Renders aria-describedby with helper text",
          "location": null,
          "status": "passed",
          "title": "Renders aria-describedby with helper text"
        },
        {
          "ancestorTitles": ["TextInput shows error state"],
          "failureMessages": [],
          "fullName": "TextInput shows error state Renders Input component",
          "location": null,
          "status": "passed",
          "title": "Renders Input component"
        },
        {
          "ancestorTitles": ["TextInput shows error state"],
          "failureMessages": [],
          "fullName": "TextInput shows error state Renders Label component",
          "location": null,
          "status": "passed",
          "title": "Renders Label component"
        },
        {
          "ancestorTitles": ["TextInput shows error state"],
          "failureMessages": [],
          "fullName": "TextInput shows error state Renders HelperErrorText component",
          "location": null,
          "status": "passed",
          "title": "Renders HelperErrorText component"
        },
        {
          "ancestorTitles": ["TextInput shows error state"],
          "failureMessages": [],
          "fullName": "TextInput shows error state Input shows error state",
          "location": null,
          "status": "passed",
          "title": "Input shows error state"
        },
        {
          "ancestorTitles": ["TextInput Group"],
          "failureMessages": [],
          "fullName": "TextInput Group Renders legend",
          "location": null,
          "status": "passed",
          "title": "Renders legend"
        },
        {
          "ancestorTitles": ["TextInput Group"],
          "failureMessages": [],
          "fullName": "TextInput Group Renders two inputs",
          "location": null,
          "status": "passed",
          "title": "Renders two inputs"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Has a maxlength for the input element",
          "location": null,
          "status": "passed",
          "title": "Has a maxlength for the input element"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Has a tabIndex",
          "location": null,
          "status": "passed",
          "title": "Has a tabIndex"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Calls the onChange function",
          "location": null,
          "status": "passed",
          "title": "Calls the onChange function"
        },
        {
          "ancestorTitles": [
            "Renders HTML attributes passed through the `attributes` prop"
          ],
          "failureMessages": [],
          "fullName": "Renders HTML attributes passed through the `attributes` prop Calls the onBlur function",
          "location": null,
          "status": "passed",
          "title": "Calls the onBlur function"
        },
        {
          "ancestorTitles": ["Hidden input"],
          "failureMessages": [],
          "fullName": "Hidden input Renders a hidden type input",
          "location": null,
          "status": "passed",
          "title": "Renders a hidden type input"
        },
        {
          "ancestorTitles": ["Textarea element type"],
          "failureMessages": [],
          "fullName": "Textarea element type Renders a textarea element",
          "location": null,
          "status": "passed",
          "title": "Renders a textarea element"
        },
        {
          "ancestorTitles": ["Textarea element type"],
          "failureMessages": [],
          "fullName": "Textarea element type Renders label with label text",
          "location": null,
          "status": "passed",
          "title": "Renders label with label text"
        }
      ],
      "endTime": 1627922964882,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/TextInput/TextInput.test.tsx",
      "startTime": 1627922949639,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Card Accessibility"],
          "failureMessages": [],
          "fullName": "Card Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Card"],
          "failureMessages": [],
          "fullName": "Card Generates a Card with a header, footer, image, middle content, and CTAs",
          "location": null,
          "status": "passed",
          "title": "Generates a Card with a header, footer, image, middle content, and CTAs"
        },
        {
          "ancestorTitles": ["Card"],
          "failureMessages": [],
          "fullName": "Card Generates a Card with variable data",
          "location": null,
          "status": "passed",
          "title": "Generates a Card with variable data"
        },
        {
          "ancestorTitles": ["Card"],
          "failureMessages": [],
          "fullName": "Card Generates a card without a CTA block if one isn't provided",
          "location": null,
          "status": "passed",
          "title": "Generates a card without a CTA block if one isn't provided"
        },
        {
          "ancestorTitles": ["Card"],
          "failureMessages": [],
          "fullName": "Card Generates a card without a content block if one isn't provided",
          "location": null,
          "status": "passed",
          "title": "Generates a card without a content block if one isn't provided"
        },
        {
          "ancestorTitles": ["Card"],
          "failureMessages": [],
          "fullName": "Card Generates a card without an image block if no image is provided",
          "location": null,
          "status": "passed",
          "title": "Generates a card without an image block if no image is provided"
        }
      ],
      "endTime": 1627922965013,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Card/Card.test.tsx",
      "startTime": 1627922949693,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Select Accessibility"],
          "failureMessages": [],
          "fullName": "Select Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders a select DOM element",
          "location": null,
          "status": "passed",
          "title": "Renders a select DOM element"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders a name attribute to use in forms",
          "location": null,
          "status": "passed",
          "title": "Renders a name attribute to use in forms"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders an aria-label",
          "location": null,
          "status": "passed",
          "title": "Renders an aria-label"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders an aria-label based on deprecated prop",
          "location": null,
          "status": "passed",
          "title": "Renders an aria-label based on deprecated prop"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders aria-describedby when helperText prop is passed",
          "location": null,
          "status": "passed",
          "title": "Renders aria-describedby when helperText prop is passed"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders required and aria-required attributes",
          "location": null,
          "status": "passed",
          "title": "Renders required and aria-required attributes"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders required and aria-required attributes using deprecated prop",
          "location": null,
          "status": "passed",
          "title": "Renders required and aria-required attributes using deprecated prop"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders helper text when helperText prop is passed",
          "location": null,
          "status": "passed",
          "title": "Renders helper text when helperText prop is passed"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders default error text when 'errorText' prop is not passed and 'errored' prop is set to true",
          "location": null,
          "status": "passed",
          "title": "Renders default error text when 'errorText' prop is not passed and 'errored' prop is set to true"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Renders custom error text when 'errorText' prop is passed and 'errored' prop is set to true",
          "location": null,
          "status": "passed",
          "title": "Renders custom error text when 'errorText' prop is passed and 'errored' prop is set to true"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Calls the onChange callback",
          "location": null,
          "status": "passed",
          "title": "Calls the onChange callback"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Calls the callback onChange function with the updated value",
          "location": null,
          "status": "passed",
          "title": "Calls the callback onChange function with the updated value"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Calls the onBlur callback",
          "location": null,
          "status": "passed",
          "title": "Calls the onBlur callback"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Calls the callback onBlur function with the updated value",
          "location": null,
          "status": "passed",
          "title": "Calls the callback onBlur function with the updated value"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Displays the selected option onLoad when passed selectedOption",
          "location": null,
          "status": "passed",
          "title": "Displays the selected option onLoad when passed selectedOption"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select Calls the correct handlers when a new value is selected",
          "location": null,
          "status": "passed",
          "title": "Calls the correct handlers when a new value is selected"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select should throw warning when fewer than 4 options",
          "location": null,
          "status": "passed",
          "title": "should throw warning when fewer than 4 options"
        },
        {
          "ancestorTitles": ["Select"],
          "failureMessages": [],
          "fullName": "Select should throw warning when there are more than 10 options",
          "location": null,
          "status": "passed",
          "title": "should throw warning when there are more than 10 options"
        }
      ],
      "endTime": 1627922965255,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Select/Select.test.tsx",
      "startTime": 1627922949661,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Heading Accessibility"],
          "failureMessages": [],
          "fullName": "Heading Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Shows heading",
          "location": null,
          "status": "passed",
          "title": "Shows heading"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Can pass heading content as child",
          "location": null,
          "status": "passed",
          "title": "Can pass heading content as child"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Can pass heading content as child span",
          "location": null,
          "status": "passed",
          "title": "Can pass heading content as child span"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading uses child when both child and the text prop are passed",
          "location": null,
          "status": "passed",
          "title": "uses child when both child and the text prop are passed"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Has <a> tag when passed URL",
          "location": null,
          "status": "passed",
          "title": "Has <a> tag when passed URL"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading <a> has class when passed urlClass",
          "location": null,
          "status": "passed",
          "title": "<a> has class when passed urlClass"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Throws error when invalid heading number passed",
          "location": null,
          "status": "passed",
          "title": "Throws error when invalid heading number passed"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Throws error when neither child nor text is passed",
          "location": null,
          "status": "passed",
          "title": "Throws error when neither child nor text is passed"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Throws error when heading with many children is passed",
          "location": null,
          "status": "passed",
          "title": "Throws error when heading with many children is passed"
        },
        {
          "ancestorTitles": ["Heading"],
          "failureMessages": [],
          "fullName": "Heading Uses custom display size",
          "location": null,
          "status": "passed",
          "title": "Uses custom display size"
        }
      ],
      "endTime": 1627922966908,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Heading/Heading.test.tsx",
      "startTime": 1627922964126,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Image Accessibility"],
          "failureMessages": [],
          "fullName": "Image Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Image"],
          "failureMessages": [],
          "fullName": "Image Shows Image",
          "location": null,
          "status": "passed",
          "title": "Shows Image"
        },
        {
          "ancestorTitles": ["Image"],
          "failureMessages": [],
          "fullName": "Image Shows Image wrapped in figure when provided ImageCaption",
          "location": null,
          "status": "passed",
          "title": "Shows Image wrapped in figure when provided ImageCaption"
        },
        {
          "ancestorTitles": ["Image"],
          "failureMessages": [],
          "fullName": "Image Shows Image wrapped in figure when provided ImageCredit",
          "location": null,
          "status": "passed",
          "title": "Shows Image wrapped in figure when provided ImageCredit"
        },
        {
          "ancestorTitles": ["Image"],
          "failureMessages": [],
          "fullName": "Image Shows Image wrapped in figure with credit and caption when provided ImageCredit and ImageCaption",
          "location": null,
          "status": "passed",
          "title": "Shows Image wrapped in figure with credit and caption when provided ImageCredit and ImageCaption"
        },
        {
          "ancestorTitles": ["Image"],
          "failureMessages": [],
          "fullName": "Image Throws error when alt text is too long",
          "location": null,
          "status": "passed",
          "title": "Throws error when alt text is too long"
        }
      ],
      "endTime": 1627922966946,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Image/Image.test.tsx",
      "startTime": 1627922964551,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["VideoPlayer Accessibility"],
          "failureMessages": [],
          "fullName": "VideoPlayer Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["VideoPlayer", "YouTube player"],
          "failureMessages": [],
          "fullName": "VideoPlayer YouTube player Renders VideoPlayer container",
          "location": null,
          "status": "passed",
          "title": "Renders VideoPlayer container"
        },
        {
          "ancestorTitles": ["VideoPlayer", "YouTube player"],
          "failureMessages": [],
          "fullName": "VideoPlayer YouTube player Renders VideoPlayer iframe",
          "location": null,
          "status": "passed",
          "title": "Renders VideoPlayer iframe"
        },
        {
          "ancestorTitles": ["VideoPlayer", "YouTube player"],
          "failureMessages": [],
          "fullName": "VideoPlayer YouTube player Renders YouTube video",
          "location": null,
          "status": "passed",
          "title": "Renders YouTube video"
        },
        {
          "ancestorTitles": ["VideoPlayer", "Vimeo player"],
          "failureMessages": [],
          "fullName": "VideoPlayer Vimeo player Renders VideoPlayer container",
          "location": null,
          "status": "passed",
          "title": "Renders VideoPlayer container"
        },
        {
          "ancestorTitles": ["VideoPlayer", "Vimeo player"],
          "failureMessages": [],
          "fullName": "VideoPlayer Vimeo player Renders VideoPlayer iframe",
          "location": null,
          "status": "passed",
          "title": "Renders VideoPlayer iframe"
        },
        {
          "ancestorTitles": ["VideoPlayer", "Vimeo player"],
          "failureMessages": [],
          "fullName": "VideoPlayer Vimeo player Renders Vimeo video",
          "location": null,
          "status": "passed",
          "title": "Renders Vimeo video"
        },
        {
          "ancestorTitles": ["VideoPlayer", "custom iframe title"],
          "failureMessages": [],
          "fullName": "VideoPlayer custom iframe title Uses iframeTitle prop to add custom title attribute to iframe",
          "location": null,
          "status": "passed",
          "title": "Uses iframeTitle prop to add custom title attribute to iframe"
        },
        {
          "ancestorTitles": ["VideoPlayer", "aspect ratio"],
          "failureMessages": [],
          "fullName": "VideoPlayer aspect ratio Renders with 4:3 aspect ratio",
          "location": null,
          "status": "passed",
          "title": "Renders with 4:3 aspect ratio"
        },
        {
          "ancestorTitles": ["VideoPlayer", "aspect ratio"],
          "failureMessages": [],
          "fullName": "VideoPlayer aspect ratio Renders with 16:9 aspect ratio",
          "location": null,
          "status": "passed",
          "title": "Renders with 16:9 aspect ratio"
        },
        {
          "ancestorTitles": ["VideoPlayer", "aspect ratio"],
          "failureMessages": [],
          "fullName": "VideoPlayer aspect ratio Renders with 1:1 aspect ratio",
          "location": null,
          "status": "passed",
          "title": "Renders with 1:1 aspect ratio"
        },
        {
          "ancestorTitles": ["VideoPlayer", "prop validation"],
          "failureMessages": [],
          "fullName": "VideoPlayer prop validation Throws error if videoId not formatted properly",
          "location": null,
          "status": "passed",
          "title": "Throws error if videoId not formatted properly"
        }
      ],
      "endTime": 1627922967047,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/VideoPlayer/VideoPlayer.test.tsx",
      "startTime": 1627922963961,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Form Accessibility"],
          "failureMessages": [],
          "fullName": "Form Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Form"],
          "failureMessages": [],
          "fullName": "Form Renders a <form> element",
          "location": null,
          "status": "passed",
          "title": "Renders a <form> element"
        },
        {
          "ancestorTitles": ["Form"],
          "failureMessages": [],
          "fullName": "Form Renders a <form> element with child .form-row element",
          "location": null,
          "status": "passed",
          "title": "Renders a <form> element with child .form-row element"
        },
        {
          "ancestorTitles": ["Form"],
          "failureMessages": [],
          "fullName": "Form Renders a <form> element with child .form-field element",
          "location": null,
          "status": "passed",
          "title": "Renders a <form> element with child .form-field element"
        },
        {
          "ancestorTitles": ["Form"],
          "failureMessages": [],
          "fullName": "Form Renders a <form> element with .form-row, .form-field and input elements properly nested",
          "location": null,
          "status": "passed",
          "title": "Renders a <form> element with .form-row, .form-field and input elements properly nested"
        },
        {
          "ancestorTitles": ["Form"],
          "failureMessages": [],
          "fullName": "Form Renders a <form> element with .form-row and .form-field elements properly nested",
          "location": null,
          "status": "passed",
          "title": "Renders a <form> element with .form-row and .form-field elements properly nested"
        }
      ],
      "endTime": 1627922967164,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Form/Form.test.tsx",
      "startTime": 1627922964655,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["HelperErrorText Accessibility"],
          "failureMessages": [],
          "fullName": "HelperErrorText Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["HelperErrorText"],
          "failureMessages": [],
          "fullName": "HelperErrorText Renders HelperErrorText",
          "location": null,
          "status": "passed",
          "title": "Renders HelperErrorText"
        },
        {
          "ancestorTitles": ["HelperErrorText"],
          "failureMessages": [],
          "fullName": "HelperErrorText Has 'error' modifier if error is passed",
          "location": null,
          "status": "passed",
          "title": "Has 'error' modifier if error is passed"
        },
        {
          "ancestorTitles": ["HelperErrorText"],
          "failureMessages": [],
          "fullName": "HelperErrorText Has aria-live and aria-atomic properties when errored",
          "location": null,
          "status": "passed",
          "title": "Has aria-live and aria-atomic properties when errored"
        },
        {
          "ancestorTitles": ["HelperErrorText"],
          "failureMessages": [],
          "fullName": "HelperErrorText Accepts an aria-atomic value of false",
          "location": null,
          "status": "passed",
          "title": "Accepts an aria-atomic value of false"
        }
      ],
      "endTime": 1627922967529,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/HelperErrorText/HelperErrorText.test.tsx",
      "startTime": 1627922964861,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Link Accessibility"],
          "failureMessages": [],
          "fullName": "Link Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Can pass in icon, text as child and url as props",
          "location": null,
          "status": "passed",
          "title": "Can pass in icon, text as child and url as props"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Can pass a link with <a> tag",
          "location": null,
          "status": "passed",
          "title": "Can pass a link with <a> tag"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Can pass a link with <a> tag and an icon",
          "location": null,
          "status": "passed",
          "title": "Can pass a link with <a> tag and an icon"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Generated back link has icon",
          "location": null,
          "status": "passed",
          "title": "Generated back link has icon"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Generated forwards link has icon",
          "location": null,
          "status": "passed",
          "title": "Generated forwards link has icon"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Can pass in text as child and url as props",
          "location": null,
          "status": "passed",
          "title": "Can pass in text as child and url as props"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link Can pass in a ReactRouter Link",
          "location": null,
          "status": "passed",
          "title": "Can pass in a ReactRouter Link"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link throws an error if text is passed but no url is passed",
          "location": null,
          "status": "passed",
          "title": "throws an error if text is passed but no url is passed"
        },
        {
          "ancestorTitles": ["Link"],
          "failureMessages": [],
          "fullName": "Link throws an error if more than one child is passed",
          "location": null,
          "status": "passed",
          "title": "throws an error if more than one child is passed"
        }
      ],
      "endTime": 1627922967540,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Link/Link.test.tsx",
      "startTime": 1627922963945,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Button Accessibility"],
          "failureMessages": [],
          "fullName": "Button Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Button"],
          "failureMessages": [],
          "fullName": "Button calls the onClick",
          "location": null,
          "status": "passed",
          "title": "calls the onClick"
        },
        {
          "ancestorTitles": ["Button"],
          "failureMessages": [],
          "fullName": "Button optionally renders a component",
          "location": null,
          "status": "passed",
          "title": "optionally renders a component"
        },
        {
          "ancestorTitles": ["Button"],
          "failureMessages": [],
          "fullName": "Button has 'button' class",
          "location": null,
          "status": "passed",
          "title": "has 'button' class"
        },
        {
          "ancestorTitles": ["Button"],
          "failureMessages": [],
          "fullName": "Button optionally calls the onClick on mouseDown instead of on click",
          "location": null,
          "status": "passed",
          "title": "optionally calls the onClick on mouseDown instead of on click"
        },
        {
          "ancestorTitles": ["rendering content from its children prop"],
          "failureMessages": [],
          "fullName": "rendering content from its children prop should render string children",
          "location": null,
          "status": "passed",
          "title": "should render string children"
        },
        {
          "ancestorTitles": ["rendering content from its children prop"],
          "failureMessages": [],
          "fullName": "rendering content from its children prop should render element children",
          "location": null,
          "status": "passed",
          "title": "should render element children"
        },
        {
          "ancestorTitles": ["padding for icon only button"],
          "failureMessages": [],
          "fullName": "padding for icon only button button has proper padding for icon only button",
          "location": null,
          "status": "passed",
          "title": "button has proper padding for icon only button"
        },
        {
          "ancestorTitles": ["Button Snapshot"],
          "failureMessages": [],
          "fullName": "Button Snapshot Renders the UI snapshot correctly",
          "location": null,
          "status": "passed",
          "title": "Renders the UI snapshot correctly"
        }
      ],
      "endTime": 1627922967663,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Button/Button.test.tsx",
      "startTime": 1627922964433,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["HorizontalRule Accessibility"],
          "failureMessages": [],
          "fullName": "HorizontalRule Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["HorizontalRule"],
          "failureMessages": [],
          "fullName": "HorizontalRule Renders the UI snapshot correctly",
          "location": null,
          "status": "passed",
          "title": "Renders the UI snapshot correctly"
        },
        {
          "ancestorTitles": ["HorizontalRule"],
          "failureMessages": [],
          "fullName": "HorizontalRule Renders HorizontalRule component",
          "location": null,
          "status": "passed",
          "title": "Renders HorizontalRule component"
        },
        {
          "ancestorTitles": ["HorizontalRule"],
          "failureMessages": [],
          "fullName": "HorizontalRule Renders with proper custom class",
          "location": null,
          "status": "passed",
          "title": "Renders with proper custom class"
        },
        {
          "ancestorTitles": ["HorizontalRule"],
          "failureMessages": [],
          "fullName": "HorizontalRule Renders with correct width and height values",
          "location": null,
          "status": "passed",
          "title": "Renders with correct width and height values"
        },
        {
          "ancestorTitles": ["HorizontalRule"],
          "failureMessages": [],
          "fullName": "HorizontalRule Renders with correct width and height values",
          "location": null,
          "status": "passed",
          "title": "Renders with correct width and height values"
        }
      ],
      "endTime": 1627922967870,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/HorizontalRule/HorizontalRule.test.tsx",
      "startTime": 1627922965294,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Icon Accessibility"],
          "failureMessages": [],
          "fullName": "Icon Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Icon"],
          "failureMessages": [],
          "fullName": "Icon throws an error if both name and children are passed to Icon",
          "location": null,
          "status": "passed",
          "title": "throws an error if both name and children are passed to Icon"
        },
        {
          "ancestorTitles": ["Icon"],
          "failureMessages": [],
          "fullName": "Icon renders an icon based on the icon `name` prop",
          "location": null,
          "status": "passed",
          "title": "renders an icon based on the icon `name` prop"
        },
        {
          "ancestorTitles": ["Icon"],
          "failureMessages": [],
          "fullName": "Icon renders an icon based on the child",
          "location": null,
          "status": "passed",
          "title": "renders an icon based on the child"
        }
      ],
      "endTime": 1627922967898,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Icons/Icon.test.tsx",
      "startTime": 1627922965081,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["bem"],
          "failureMessages": [],
          "fullName": "bem returns baseclass",
          "location": null,
          "status": "passed",
          "title": "returns baseclass"
        },
        {
          "ancestorTitles": ["bem"],
          "failureMessages": [],
          "fullName": "bem returns properly formatted classes from a baseclass and modifier",
          "location": null,
          "status": "passed",
          "title": "returns properly formatted classes from a baseclass and modifier"
        },
        {
          "ancestorTitles": ["bem"],
          "failureMessages": [],
          "fullName": "bem returns properly formatted classes from a baseclass, modifier, and blockname",
          "location": null,
          "status": "passed",
          "title": "returns properly formatted classes from a baseclass, modifier, and blockname"
        },
        {
          "ancestorTitles": ["bem"],
          "failureMessages": [],
          "fullName": "bem returns properly formatted classes from a baseclass and blockName",
          "location": null,
          "status": "passed",
          "title": "returns properly formatted classes from a baseclass and blockName"
        },
        {
          "ancestorTitles": ["bem"],
          "failureMessages": [],
          "fullName": "bem returns additional extra classes",
          "location": null,
          "status": "passed",
          "title": "returns additional extra classes"
        }
      ],
      "endTime": 1627922968304,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/__tests__/utils/bem.test.ts",
      "startTime": 1627922966951,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["range"],
          "failureMessages": [],
          "fullName": "range returns an array of values not including the stop argument",
          "location": null,
          "status": "passed",
          "title": "returns an array of values not including the stop argument"
        },
        {
          "ancestorTitles": ["range"],
          "failureMessages": [],
          "fullName": "range returns an array of values skipping by the step argument",
          "location": null,
          "status": "passed",
          "title": "returns an array of values skipping by the step argument"
        }
      ],
      "endTime": 1627922968586,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/__tests__/utils/utils.test.ts",
      "startTime": 1627922967545,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Label Accessibility"],
          "failureMessages": [],
          "fullName": "Label Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Label"],
          "failureMessages": [],
          "fullName": "Label Renders a <label> when passed text as children",
          "location": null,
          "status": "passed",
          "title": "Renders a <label> when passed text as children"
        },
        {
          "ancestorTitles": ["Label"],
          "failureMessages": [],
          "fullName": "Label Renders a <label> when passed element as children",
          "location": null,
          "status": "passed",
          "title": "Renders a <label> when passed element as children"
        },
        {
          "ancestorTitles": ["Label"],
          "failureMessages": [],
          "fullName": "Label Renders the optional or required helper text",
          "location": null,
          "status": "passed",
          "title": "Renders the optional or required helper text"
        }
      ],
      "endTime": 1627922968687,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Label/Label.test.tsx",
      "startTime": 1627922966911,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Breadcrumbs Accessibility"],
          "failureMessages": [],
          "fullName": "Breadcrumbs Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Breadcrumbs"],
          "failureMessages": [],
          "fullName": "Breadcrumbs Renders a tag with custom text",
          "location": null,
          "status": "passed",
          "title": "Renders a tag with custom text"
        },
        {
          "ancestorTitles": ["Breadcrumbs"],
          "failureMessages": [],
          "fullName": "Breadcrumbs Renders breadcrumb when passed components",
          "location": null,
          "status": "passed",
          "title": "Renders breadcrumb when passed components"
        },
        {
          "ancestorTitles": ["Breadcrumbs"],
          "failureMessages": [],
          "fullName": "Breadcrumbs Renders icon",
          "location": null,
          "status": "passed",
          "title": "Renders icon"
        },
        {
          "ancestorTitles": ["Breadcrumbs"],
          "failureMessages": [],
          "fullName": "Breadcrumbs Throws error when nothing is passed into Breadcrumb",
          "location": null,
          "status": "passed",
          "title": "Throws error when nothing is passed into Breadcrumb"
        }
      ],
      "endTime": 1627922968787,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Breadcrumbs/Breadcrumbs.test.tsx",
      "startTime": 1627922964931,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["StatusBadge Accessibility"],
          "failureMessages": [],
          "fullName": "StatusBadge Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["StatusBadge Test"],
          "failureMessages": [],
          "fullName": "StatusBadge Test Shows status badge",
          "location": null,
          "status": "passed",
          "title": "Shows status badge"
        },
        {
          "ancestorTitles": ["StatusBadge Test"],
          "failureMessages": [],
          "fullName": "StatusBadge Test Can pass status badge content as child",
          "location": null,
          "status": "passed",
          "title": "Can pass status badge content as child"
        }
      ],
      "endTime": 1627922968811,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/StatusBadge/StatusBadge.test.tsx",
      "startTime": 1627922967177,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Pagination Accessibility"],
          "failureMessages": [],
          "fullName": "Pagination Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref Renders a nav element with items and links",
          "location": null,
          "status": "passed",
          "title": "Renders a nav element with items and links"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref Previous link is disabled when on the first page item",
          "location": null,
          "status": "passed",
          "title": "Previous link is disabled when on the first page item"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref Next link is disabled when on the last page item",
          "location": null,
          "status": "passed",
          "title": "Next link is disabled when on the last page item"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref Current page item has active class",
          "location": null,
          "status": "passed",
          "title": "Current page item has active class"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref When pagination has 1 element, pagination is not shown",
          "location": null,
          "status": "passed",
          "title": "When pagination has 1 element, pagination is not shown"
        },
        {
          "ancestorTitles": ["Pagination with getPageHref"],
          "failureMessages": [],
          "fullName": "Pagination with getPageHref When pagination has 0 elements, pagination is not shown",
          "location": null,
          "status": "passed",
          "title": "When pagination has 0 elements, pagination is not shown"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback Renders a nav element with an unordered list of items",
          "location": null,
          "status": "passed",
          "title": "Renders a nav element with an unordered list of items"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback Previous link is disabled when on the first page item",
          "location": null,
          "status": "passed",
          "title": "Previous link is disabled when on the first page item"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback Next link is disabled when on the last page item",
          "location": null,
          "status": "passed",
          "title": "Next link is disabled when on the last page item"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback Current page item has active class",
          "location": null,
          "status": "passed",
          "title": "Current page item has active class"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback When page item is selected, runs the onPageChange callback",
          "location": null,
          "status": "passed",
          "title": "When page item is selected, runs the onPageChange callback"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback When pagination has 1 element, pagination is not shown",
          "location": null,
          "status": "passed",
          "title": "When pagination has 1 element, pagination is not shown"
        },
        {
          "ancestorTitles": ["Pagination with changeCallback"],
          "failureMessages": [],
          "fullName": "Pagination with changeCallback When pagination has 0 elements, pagination is not shown",
          "location": null,
          "status": "passed",
          "title": "When pagination has 0 elements, pagination is not shown"
        }
      ],
      "endTime": 1627922968945,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Pagination/Pagination.test.tsx",
      "startTime": 1627922949643,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Modal Accessibility"],
          "failureMessages": [],
          "fullName": "Modal Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Modal"],
          "failureMessages": [],
          "fullName": "Modal modal applies 'no-scroll' class to body",
          "location": null,
          "status": "passed",
          "title": "modal applies 'no-scroll' class to body"
        }
      ],
      "endTime": 1627922969098,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Modal/Modal.test.tsx",
      "startTime": 1627922967546,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Accordion Accessibility"],
          "failureMessages": [],
          "fullName": "Accordion Accessibility passes axe accessibility test",
          "location": null,
          "status": "passed",
          "title": "passes axe accessibility test"
        },
        {
          "ancestorTitles": ["Accordion"],
          "failureMessages": [],
          "fullName": "Accordion Renders an input checkbox and label",
          "location": null,
          "status": "passed",
          "title": "Renders an input checkbox and label"
        }
      ],
      "endTime": 1627922969186,
      "message": "",
      "name": "/Users/edwinguzman/projects/design/nypl-design-system/src/components/Accordion/Accordion.test.tsx",
      "startTime": 1627922967052,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
